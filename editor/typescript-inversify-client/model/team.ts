/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Coach } from './coach';
import { Country } from './country';
import { Event } from './event';
import { TeamForm } from './teamForm';
import { TournamentSeasonWithTournament } from './tournamentSeasonWithTournament';
import { Venue } from './venue';


export interface Team { 
    /**
     * Reference to the Country where the team is based.
     */
    country: Country;
    /**
     * Name of the president of the club
     */
    president?: string;
    /**
     * Year the club was founded
     */
    founded?: number;
    venue?: Venue;
    coach?: Coach;
    /**
     * Information about the League the team currently participates in
     */
    currentLeague?: TournamentSeasonWithTournament;
    /**
     * The next event the team is playing in
     */
    nextEvent?: Event;
    /**
     * Various social links for the team
     */
    social?: any;
    urlHomeKit?: string;
    urlAwayKit?: string;
    /**
     * Image of the team squad
     */
    urlSquadImage?: string;
    /**
     * Whether the team is a football club(Barcelona) or national team(Spain)
     */
    national: boolean;
    /**
     * Unique identifier of the Team within the system
     */
    id: number;
    /**
     * Human readable name of the team
     */
    name: string;
    /**
     * 3 character name of team
     */
    threeLetterCode?: string;
    /**
     * Manually inserted short name of team
     */
    shortName?: string;
    /**
     * If present and = true, the team can be one of two teams. This occurs in cup competitions when some games are still not played
     */
    undecided?: boolean;
    /**
     * Team gender, MALE, FEMALE or null
     */
    gender?: Team.GenderEnum;
    /**
     * Form guide for the Team if available and requested as an option
     */
    form?: Array<TeamForm>;
}
export namespace Team {
    export type GenderEnum = 'MALE' | 'FEMALE';
    export const GenderEnum = {
        MALE: 'MALE' as GenderEnum,
        FEMALE: 'FEMALE' as GenderEnum
    }
}
