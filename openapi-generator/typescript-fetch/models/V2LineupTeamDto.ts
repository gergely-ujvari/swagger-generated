/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V2Coach,
    V2CoachFromJSON,
    V2CoachFromJSONTyped,
    V2CoachToJSON,
} from './V2Coach';
import {
    V2LineupPlayerDto,
    V2LineupPlayerDtoFromJSON,
    V2LineupPlayerDtoFromJSONTyped,
    V2LineupPlayerDtoToJSON,
} from './V2LineupPlayerDto';

/**
 * 
 * @export
 * @interface V2LineupTeamDto
 */
export interface V2LineupTeamDto {
    /**
     * 
     * @type {string}
     * @memberof V2LineupTeamDto
     */
    formation?: string;
    /**
     * 
     * @type {V2Coach}
     * @memberof V2LineupTeamDto
     */
    coach?: V2Coach;
    /**
     * 
     * @type {string}
     * @memberof V2LineupTeamDto
     */
    teamId?: string;
    /**
     * 
     * @type {Array<V2LineupPlayerDto>}
     * @memberof V2LineupTeamDto
     */
    players?: Array<V2LineupPlayerDto>;
}

export function V2LineupTeamDtoFromJSON(json: any): V2LineupTeamDto {
    return V2LineupTeamDtoFromJSONTyped(json, false);
}

export function V2LineupTeamDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2LineupTeamDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'formation': !exists(json, 'formation') ? undefined : json['formation'],
        'coach': !exists(json, 'coach') ? undefined : V2CoachFromJSON(json['coach']),
        'teamId': !exists(json, 'team_id') ? undefined : json['team_id'],
        'players': !exists(json, 'players') ? undefined : ((json['players'] as Array<any>).map(V2LineupPlayerDtoFromJSON)),
    };
}

export function V2LineupTeamDtoToJSON(value?: V2LineupTeamDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'formation': value.formation,
        'coach': V2CoachToJSON(value.coach),
        'team_id': value.teamId,
        'players': value.players === undefined ? undefined : ((value.players as Array<any>).map(V2LineupPlayerDtoToJSON)),
    };
}

