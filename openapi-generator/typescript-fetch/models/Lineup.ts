/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TeamLineup,
    TeamLineupFromJSON,
    TeamLineupFromJSONTyped,
    TeamLineupToJSON,
} from './TeamLineup';

/**
 * 
 * @export
 * @interface Lineup
 */
export interface Lineup {
    /**
     * Id of the event for which the lineup is for
     * @type {number}
     * @memberof Lineup
     */
    eventId: number;
    /**
     * Whether the lineup is officially confirmed. Should be considered probable if != true
     * @type {boolean}
     * @memberof Lineup
     */
    confirmed?: boolean;
    /**
     * 
     * @type {TeamLineup}
     * @memberof Lineup
     */
    homeTeam: TeamLineup;
    /**
     * 
     * @type {TeamLineup}
     * @memberof Lineup
     */
    awayTeam: TeamLineup;
}

export function LineupFromJSON(json: any): Lineup {
    return LineupFromJSONTyped(json, false);
}

export function LineupFromJSONTyped(json: any, ignoreDiscriminator: boolean): Lineup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventId': json['event_id'],
        'confirmed': !exists(json, 'confirmed') ? undefined : json['confirmed'],
        'homeTeam': TeamLineupFromJSON(json['home_team']),
        'awayTeam': TeamLineupFromJSON(json['away_team']),
    };
}

export function LineupToJSON(value?: Lineup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event_id': value.eventId,
        'confirmed': value.confirmed,
        'home_team': TeamLineupToJSON(value.homeTeam),
        'away_team': TeamLineupToJSON(value.awayTeam),
    };
}

