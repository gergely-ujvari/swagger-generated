/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LeagueStandingData,
    LeagueStandingDataFromJSON,
    LeagueStandingDataFromJSONTyped,
    LeagueStandingDataToJSON,
} from './LeagueStandingData';

/**
 * 
 * @export
 * @interface StageGroupWithStandingAllOf
 */
export interface StageGroupWithStandingAllOf {
    /**
     * League Standing for the StageGroup if available and requested
     * @type {Array<LeagueStandingData>}
     * @memberof StageGroupWithStandingAllOf
     */
    standing?: Array<LeagueStandingData>;
}

export function StageGroupWithStandingAllOfFromJSON(json: any): StageGroupWithStandingAllOf {
    return StageGroupWithStandingAllOfFromJSONTyped(json, false);
}

export function StageGroupWithStandingAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): StageGroupWithStandingAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'standing': !exists(json, 'standing') ? undefined : ((json['standing'] as Array<any>).map(LeagueStandingDataFromJSON)),
    };
}

export function StageGroupWithStandingAllOfToJSON(value?: StageGroupWithStandingAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'standing': value.standing === undefined ? undefined : ((value.standing as Array<any>).map(LeagueStandingDataToJSON)),
    };
}

