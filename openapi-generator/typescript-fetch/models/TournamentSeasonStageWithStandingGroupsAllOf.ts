/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StageGroupWithStanding,
    StageGroupWithStandingFromJSON,
    StageGroupWithStandingFromJSONTyped,
    StageGroupWithStandingToJSON,
} from './StageGroupWithStanding';

/**
 * 
 * @export
 * @interface TournamentSeasonStageWithStandingGroupsAllOf
 */
export interface TournamentSeasonStageWithStandingGroupsAllOf {
    /**
     * List of StageGroup objects in the TournamentSeasonStage. Available if the property stage_groups exists
     * @type {Array<StageGroupWithStanding>}
     * @memberof TournamentSeasonStageWithStandingGroupsAllOf
     */
    groups?: Array<StageGroupWithStanding>;
}

export function TournamentSeasonStageWithStandingGroupsAllOfFromJSON(json: any): TournamentSeasonStageWithStandingGroupsAllOf {
    return TournamentSeasonStageWithStandingGroupsAllOfFromJSONTyped(json, false);
}

export function TournamentSeasonStageWithStandingGroupsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): TournamentSeasonStageWithStandingGroupsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'groups': !exists(json, 'groups') ? undefined : ((json['groups'] as Array<any>).map(StageGroupWithStandingFromJSON)),
    };
}

export function TournamentSeasonStageWithStandingGroupsAllOfToJSON(value?: TournamentSeasonStageWithStandingGroupsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'groups': value.groups === undefined ? undefined : ((value.groups as Array<any>).map(StageGroupWithStandingToJSON)),
    };
}

