/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TournamentSeasonStage,
    TournamentSeasonStageFromJSON,
    TournamentSeasonStageFromJSONTyped,
    TournamentSeasonStageToJSON,
} from './TournamentSeasonStage';

/**
 * 
 * @export
 * @interface TournamentSeasonWithStagesAllOf
 */
export interface TournamentSeasonWithStagesAllOf {
    /**
     * List of stages which take place during the TournamentSeason. If the parent Tournament has regional_league = true, this will usually be one stage with cup = false.
     * @type {Array<TournamentSeasonStage>}
     * @memberof TournamentSeasonWithStagesAllOf
     */
    stages: Array<TournamentSeasonStage>;
}

export function TournamentSeasonWithStagesAllOfFromJSON(json: any): TournamentSeasonWithStagesAllOf {
    return TournamentSeasonWithStagesAllOfFromJSONTyped(json, false);
}

export function TournamentSeasonWithStagesAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): TournamentSeasonWithStagesAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stages': ((json['stages'] as Array<any>).map(TournamentSeasonStageFromJSON)),
    };
}

export function TournamentSeasonWithStagesAllOfToJSON(value?: TournamentSeasonWithStagesAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stages': ((value.stages as Array<any>).map(TournamentSeasonStageToJSON)),
    };
}

