/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlayerStatsExtendedAllOf
 */
export interface PlayerStatsExtendedAllOf {
    /**
     * Goals conceded (Goalkeeper)
     * @type {number}
     * @memberof PlayerStatsExtendedAllOf
     */
    conceded?: number;
    /**
     * Games started as a substitute
     * @type {number}
     * @memberof PlayerStatsExtendedAllOf
     */
    substitute?: number;
    /**
     * Games without allowing a goal (Goalkeeper)
     * @type {number}
     * @memberof PlayerStatsExtendedAllOf
     */
    cleansheets?: number;
    /**
     * Games where the player has come on
     * @type {number}
     * @memberof PlayerStatsExtendedAllOf
     */
    substituteIn?: number;
    /**
     * Games where the player has come off
     * @type {number}
     * @memberof PlayerStatsExtendedAllOf
     */
    substituteOut?: number;
    /**
     * Minutes played after coming on as a substitute
     * @type {number}
     * @memberof PlayerStatsExtendedAllOf
     */
    minutesSubstitute?: number;
}

export function PlayerStatsExtendedAllOfFromJSON(json: any): PlayerStatsExtendedAllOf {
    return PlayerStatsExtendedAllOfFromJSONTyped(json, false);
}

export function PlayerStatsExtendedAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerStatsExtendedAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conceded': !exists(json, 'conceded') ? undefined : json['conceded'],
        'substitute': !exists(json, 'substitute') ? undefined : json['substitute'],
        'cleansheets': !exists(json, 'cleansheets') ? undefined : json['cleansheets'],
        'substituteIn': !exists(json, 'substitute_in') ? undefined : json['substitute_in'],
        'substituteOut': !exists(json, 'substitute_out') ? undefined : json['substitute_out'],
        'minutesSubstitute': !exists(json, 'minutes_substitute') ? undefined : json['minutes_substitute'],
    };
}

export function PlayerStatsExtendedAllOfToJSON(value?: PlayerStatsExtendedAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conceded': value.conceded,
        'substitute': value.substitute,
        'cleansheets': value.cleansheets,
        'substitute_in': value.substituteIn,
        'substitute_out': value.substituteOut,
        'minutes_substitute': value.minutesSubstitute,
    };
}

