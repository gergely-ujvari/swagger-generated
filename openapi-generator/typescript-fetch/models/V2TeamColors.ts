/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V2TeamColorsColorsInner,
    V2TeamColorsColorsInnerFromJSON,
    V2TeamColorsColorsInnerFromJSONTyped,
    V2TeamColorsColorsInnerToJSON,
} from './V2TeamColorsColorsInner';

/**
 * 
 * @export
 * @interface V2TeamColors
 */
export interface V2TeamColors {
    /**
     * 
     * @type {string}
     * @memberof V2TeamColors
     */
    entityType: string;
    /**
     * 
     * @type {string}
     * @memberof V2TeamColors
     */
    entityId: string;
    /**
     * 
     * @type {Array<V2TeamColorsColorsInner>}
     * @memberof V2TeamColors
     */
    colors: Array<V2TeamColorsColorsInner>;
}

export function V2TeamColorsFromJSON(json: any): V2TeamColors {
    return V2TeamColorsFromJSONTyped(json, false);
}

export function V2TeamColorsFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2TeamColors {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entityType': json['entity_type'],
        'entityId': json['entity_id'],
        'colors': ((json['colors'] as Array<any>).map(V2TeamColorsColorsInnerFromJSON)),
    };
}

export function V2TeamColorsToJSON(value?: V2TeamColors | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entity_type': value.entityType,
        'entity_id': value.entityId,
        'colors': ((value.colors as Array<any>).map(V2TeamColorsColorsInnerToJSON)),
    };
}

