/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlayerStatisticItem,
    PlayerStatisticItemFromJSON,
    PlayerStatisticItemFromJSONTyped,
    PlayerStatisticItemToJSON,
} from './PlayerStatisticItem';

/**
 * 
 * @export
 * @interface V2PlayerStatisticInput
 */
export interface V2PlayerStatisticInput {
    /**
     * 
     * @type {string}
     * @memberof V2PlayerStatisticInput
     */
    playerId?: string;
    /**
     * 
     * @type {string}
     * @memberof V2PlayerStatisticInput
     */
    matchId?: string;
    /**
     * 
     * @type {string}
     * @memberof V2PlayerStatisticInput
     */
    teamId?: string;
    /**
     * 
     * @type {Array<PlayerStatisticItem>}
     * @memberof V2PlayerStatisticInput
     */
    statistics?: Array<PlayerStatisticItem>;
    /**
     * 
     * @type {string}
     * @memberof V2PlayerStatisticInput
     */
    origin?: string;
}

export function V2PlayerStatisticInputFromJSON(json: any): V2PlayerStatisticInput {
    return V2PlayerStatisticInputFromJSONTyped(json, false);
}

export function V2PlayerStatisticInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2PlayerStatisticInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'playerId': !exists(json, 'player_id') ? undefined : json['player_id'],
        'matchId': !exists(json, 'match_id') ? undefined : json['match_id'],
        'teamId': !exists(json, 'team_id') ? undefined : json['team_id'],
        'statistics': !exists(json, 'statistics') ? undefined : ((json['statistics'] as Array<any>).map(PlayerStatisticItemFromJSON)),
        'origin': !exists(json, 'origin') ? undefined : json['origin'],
    };
}

export function V2PlayerStatisticInputToJSON(value?: V2PlayerStatisticInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'player_id': value.playerId,
        'match_id': value.matchId,
        'team_id': value.teamId,
        'statistics': value.statistics === undefined ? undefined : ((value.statistics as Array<any>).map(PlayerStatisticItemToJSON)),
        'origin': value.origin,
    };
}

