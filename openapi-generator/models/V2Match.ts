/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V2Group } from './V2Group';
import { V2MatchMinute } from './V2MatchMinute';
import { V2MatchReferee } from './V2MatchReferee';
import { V2MatchRound } from './V2MatchRound';
import { V2MatchScore } from './V2MatchScore';
import { V2MatchStage } from './V2MatchStage';
import { V2MatchStatus } from './V2MatchStatus';
import { V2MatchTeamDto } from './V2MatchTeamDto';
import { V2MatchVenue } from './V2MatchVenue';
import { V2Season } from './V2Season';
import { HttpFile } from '../http/http';

export class V2Match {
    'id'?: string;
    'status'?: V2MatchStatus;
    'kickoffTime'?: Date;
    'stage'?: V2MatchStage;
    'season'?: V2Season;
    'group'?: V2Group;
    'round'?: V2MatchRound;
    'homeTeam'?: V2MatchTeamDto;
    'awayTeam'?: V2MatchTeamDto;
    'referees'?: Array<V2MatchReferee>;
    'venue'?: V2MatchVenue;
    'spectators'?: number;
    'coverage'?: V2MatchCoverageEnum;
    'minute'?: V2MatchMinute;
    'phaseStartedAt'?: Date;
    'finishedAt'?: Date;
    'score'?: V2MatchScore;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "V2MatchStatus",
            "format": ""
        },
        {
            "name": "kickoffTime",
            "baseName": "kickoff_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "stage",
            "baseName": "stage",
            "type": "V2MatchStage",
            "format": ""
        },
        {
            "name": "season",
            "baseName": "season",
            "type": "V2Season",
            "format": ""
        },
        {
            "name": "group",
            "baseName": "group",
            "type": "V2Group",
            "format": ""
        },
        {
            "name": "round",
            "baseName": "round",
            "type": "V2MatchRound",
            "format": ""
        },
        {
            "name": "homeTeam",
            "baseName": "home_team",
            "type": "V2MatchTeamDto",
            "format": ""
        },
        {
            "name": "awayTeam",
            "baseName": "away_team",
            "type": "V2MatchTeamDto",
            "format": ""
        },
        {
            "name": "referees",
            "baseName": "referees",
            "type": "Array<V2MatchReferee>",
            "format": ""
        },
        {
            "name": "venue",
            "baseName": "venue",
            "type": "V2MatchVenue",
            "format": ""
        },
        {
            "name": "spectators",
            "baseName": "spectators",
            "type": "number",
            "format": ""
        },
        {
            "name": "coverage",
            "baseName": "coverage",
            "type": "V2MatchCoverageEnum",
            "format": ""
        },
        {
            "name": "minute",
            "baseName": "minute",
            "type": "V2MatchMinute",
            "format": ""
        },
        {
            "name": "phaseStartedAt",
            "baseName": "phase_started_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "finishedAt",
            "baseName": "finished_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "score",
            "baseName": "score",
            "type": "V2MatchScore",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V2Match.attributeTypeMap;
    }

    public constructor() {
    }
}


export type V2MatchCoverageEnum = "LIVE" | "NOT_LIVE" | "UNKNOWN" ;

