/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Country } from './Country';
import { LeagueStandingData } from './LeagueStandingData';
import { Round } from './Round';
import { StageGroupWithStanding } from './StageGroupWithStanding';
import { TournamentSeasonStage } from './TournamentSeasonStage';
import { TournamentSeasonStageWithStandingGroupsAllOf } from './TournamentSeasonStageWithStandingGroupsAllOf';
import { HttpFile } from '../http/http';

export class TournamentSeasonStageWithStandingGroups {
    /**
    * Unique identifier
    */
    'id': number;
    /**
    * Human readable name of the TournamentSeasonStage
    */
    'name': string;
    /**
    * Whether the stage is a cup such as Champions League Knockout stage, World Cup Final stages, etc
    */
    'cup': boolean;
    /**
    * Id of the TournamentSeason in which the stage is part of
    */
    'tournamentSeasonId': number;
    /**
    * Id of the Tournament in whicth the stage is part of
    */
    'tournamentId': number;
    'country': Country;
    /**
    * Indicates which confederation the stage is part of (for World Cup qualif.)
    */
    'confederation'?: string;
    /**
    * Date when the first game of the stage is held
    */
    'startDate'?: string;
    /**
    * Date when the final game of the stage is held
    */
    'endDate'?: string;
    /**
    * Whether the stage is a qualification stage to a main Tournrament (Champions League Qualification)
    */
    'qualification'?: boolean;
    /**
    * Whether the API has live scores for the stage
    */
    'live'?: boolean;
    /**
    * Number of groups in the stage. Only available if the stage has groups (Champions League Group Stage)
    */
    'stageGroups'?: number;
    /**
    * League standing data if available and if cup = false
    */
    'standing'?: Array<LeagueStandingData>;
    /**
    * List of rounds in the Stage if cup = true
    */
    'rounds'?: Array<Round>;
    /**
    * List of StageGroup objects in the TournamentSeasonStage. Available if the property stage_groups exists
    */
    'groups'?: Array<StageGroupWithStanding>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "cup",
            "baseName": "cup",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "tournamentSeasonId",
            "baseName": "tournament_season_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "tournamentId",
            "baseName": "tournament_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "Country",
            "format": ""
        },
        {
            "name": "confederation",
            "baseName": "confederation",
            "type": "string",
            "format": ""
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "string",
            "format": "date"
        },
        {
            "name": "endDate",
            "baseName": "end_date",
            "type": "string",
            "format": "date"
        },
        {
            "name": "qualification",
            "baseName": "qualification",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "live",
            "baseName": "live",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "stageGroups",
            "baseName": "stage_groups",
            "type": "number",
            "format": ""
        },
        {
            "name": "standing",
            "baseName": "standing",
            "type": "Array<LeagueStandingData>",
            "format": ""
        },
        {
            "name": "rounds",
            "baseName": "rounds",
            "type": "Array<Round>",
            "format": ""
        },
        {
            "name": "groups",
            "baseName": "groups",
            "type": "Array<StageGroupWithStanding>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TournamentSeasonStageWithStandingGroups.attributeTypeMap;
    }

    public constructor() {
    }
}

