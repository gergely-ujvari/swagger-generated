/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Country } from './Country';
import { Player } from './Player';
import { PlayerTeam } from './PlayerTeam';
import { TournamentSeasonWithTournament } from './TournamentSeasonWithTournament';
import { HttpFile } from '../http/http';

export class PlayerProfile {
    'currentLeague'?: TournamentSeasonWithTournament;
    'club'?: PlayerTeam;
    'nationalTeam'?: PlayerTeam;
    /**
    * Display name of the player position
    */
    'positionDisplay'?: string;
    /**
    * Playing position of the player
    */
    'position'?: PlayerProfilePositionEnum;
    'country': Country;
    /**
    * Date when the person was born
    */
    'birthdate'?: string;
    /**
    * Human readable first(given) name
    */
    'firstName'?: string;
    /**
    * Human readable last(family) name
    */
    'lastName'?: string;
    /**
    * True if currently active, false if retired
    */
    'active'?: boolean;
    /**
    * Person's gender
    */
    'gender'?: PlayerProfileGenderEnum;
    /**
    * Unique identifier within the system
    */
    'id': number;
    /**
    * Human readable name of the Person
    */
    'name': string;
    /**
    * 150x150 face image of Person
    */
    'urlThumb'?: string;
    /**
    * 277x338 full body image of Person
    */
    'urlImage'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "currentLeague",
            "baseName": "current_league",
            "type": "TournamentSeasonWithTournament",
            "format": ""
        },
        {
            "name": "club",
            "baseName": "club",
            "type": "PlayerTeam",
            "format": ""
        },
        {
            "name": "nationalTeam",
            "baseName": "nationalTeam",
            "type": "PlayerTeam",
            "format": ""
        },
        {
            "name": "positionDisplay",
            "baseName": "position_display",
            "type": "string",
            "format": ""
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "PlayerProfilePositionEnum",
            "format": ""
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "Country",
            "format": ""
        },
        {
            "name": "birthdate",
            "baseName": "birthdate",
            "type": "string",
            "format": "date"
        },
        {
            "name": "firstName",
            "baseName": "first_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastName",
            "baseName": "last_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "gender",
            "baseName": "gender",
            "type": "PlayerProfileGenderEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "urlThumb",
            "baseName": "url_thumb",
            "type": "string",
            "format": ""
        },
        {
            "name": "urlImage",
            "baseName": "url_image",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PlayerProfile.attributeTypeMap;
    }

    public constructor() {
    }
}


export type PlayerProfilePositionEnum = "keeper" | "defender" | "midfielder" | "forward" ;
export type PlayerProfileGenderEnum = "MALE" | "FEMALE" ;

