/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Player } from './Player';
import { TeamPlayerAllOf } from './TeamPlayerAllOf';
import { TeamPlayerData } from './TeamPlayerData';
import { HttpFile } from '../http/http';

export class TeamPlayer {
    /**
    * Whether the person is currently part of the Team
    */
    'active': boolean;
    /**
    * Date when the Person joined the team
    */
    'startDate'?: string;
    /**
    * Date when the Person left the team (if any)
    */
    'endDate'?: string;
    /**
    * Shirt number which the player wears for the team
    */
    'shirtNumber'?: number;
    /**
    * Whether the player is on loan with the team
    */
    'loan'?: boolean;
    'player': Player;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "string",
            "format": "date"
        },
        {
            "name": "endDate",
            "baseName": "end_date",
            "type": "string",
            "format": "date"
        },
        {
            "name": "shirtNumber",
            "baseName": "shirt_number",
            "type": "number",
            "format": ""
        },
        {
            "name": "loan",
            "baseName": "loan",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "player",
            "baseName": "player",
            "type": "Player",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TeamPlayer.attributeTypeMap;
    }

    public constructor() {
    }
}

