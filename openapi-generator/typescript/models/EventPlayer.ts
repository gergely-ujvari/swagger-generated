/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { EventPlayerType } from './EventPlayerType';
import { PartialPerson } from './PartialPerson';
import { HttpFile } from '../http/http';

export class EventPlayer {
    /**
    * Unique identifier
    */
    'id': number;
    'player': PartialPerson;
    'eventPlayerType': EventPlayerType;
    /**
    * Whether the player is from the home or the away team
    */
    'homeTeam': boolean;
    /**
    * Number indicating the player's vertical position on the field. 1 = Goalkeeper, 2-5 = Defender, 6-9 = Midfielder, 10-11 = Forward, where 5 is an offensive defender, 9 is an offensive midfielder, etc.
    */
    'positionX'?: number;
    /**
    * Number indicating the player's horizontal position on the field. Ranges from 1-9, where 1 = furthest right, 9 = furthest left.
    */
    'positionY'?: number;
    /**
    * Number 1-11 indicating the player's position in the lineup. 1 = goalkeeper, 2 = defender furthest right.
    */
    'positionNumber'?: number;
    /**
    * The shirt number the player is wearing
    */
    'shirtNumber'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "player",
            "baseName": "player",
            "type": "PartialPerson",
            "format": ""
        },
        {
            "name": "eventPlayerType",
            "baseName": "event_player_type",
            "type": "EventPlayerType",
            "format": ""
        },
        {
            "name": "homeTeam",
            "baseName": "home_team",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "positionX",
            "baseName": "position_x",
            "type": "number",
            "format": ""
        },
        {
            "name": "positionY",
            "baseName": "position_y",
            "type": "number",
            "format": ""
        },
        {
            "name": "positionNumber",
            "baseName": "position_number",
            "type": "number",
            "format": ""
        },
        {
            "name": "shirtNumber",
            "baseName": "shirt_number",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EventPlayer.attributeTypeMap;
    }

    public constructor() {
    }
}

