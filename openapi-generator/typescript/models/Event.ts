/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { EventStatus } from './EventStatus';
import { PartialPerson } from './PartialPerson';
import { PartialTeam } from './PartialTeam';
import { PartialTournamentSeasonStage } from './PartialTournamentSeasonStage';
import { StageGroup } from './StageGroup';
import { TeamScore } from './TeamScore';
import { Venue } from './Venue';
import { HttpFile } from '../http/http';

export class Event {
    /**
    * Number of spectators at the event
    */
    'spectators'?: number;
    'tournamentSeasonStage': PartialTournamentSeasonStage;
    /**
    * Live minute ticker. Only available if the event_status.type is 'inprogress'
    */
    'minute'?: number;
    'stageGroup'?: StageGroup;
    'referee'?: PartialPerson;
    'venue'?: Venue;
    /**
    * Number of incidents which have occured in the Event (goals, red cards, yellow cards, etc).
    */
    'incidents'?: number;
    /**
    * Indicates whether player lineup information is available or not
    */
    'lineupAvailable'?: boolean;
    /**
    * Indicates whether the event has livescore updates. If false the event will be updated after FT.
    */
    'liveUpdates'?: boolean;
    /**
    * Indicates whether teamstats are available for this event
    */
    'teamstatsAvailable'?: boolean;
    'homeScore'?: TeamScore;
    'awayScore'?: TeamScore;
    /**
    * timestamp when the current phase (1st_half, 2nd_half, et, etc) has started. Can be used for calculating the minute ticker
    */
    'startedAt'?: Date;
    /**
    * Unique identifier
    */
    'id': number;
    'eventStatus': EventStatus;
    /**
    * Timestamp when the event is scheduled to start
    */
    'startTime': Date;
    /**
    * Goals scored by the home team
    */
    'goalHome'?: number;
    /**
    * Goals scored by the away team
    */
    'goalAway'?: number;
    /**
    * Penalties scored by the home team. Available only if the game goes to penalty shootouts
    */
    'penaltyHome'?: number;
    /**
    * Penalties scored by the away team. Available only if the game goes to penalty shootouts
    */
    'penaltyAway'?: number;
    /**
    * Goals scored by home team over 1 or more legs. Available only if the tie has mutliple legs
    */
    'aggHome'?: number;
    /**
    * Goals scored by home team over 1 or more legs. Available only if the tie has mutliple legs
    */
    'aggAway'?: number;
    'homeTeam': PartialTeam;
    'awayTeam': PartialTeam;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "spectators",
            "baseName": "spectators",
            "type": "number",
            "format": ""
        },
        {
            "name": "tournamentSeasonStage",
            "baseName": "tournament_season_stage",
            "type": "PartialTournamentSeasonStage",
            "format": ""
        },
        {
            "name": "minute",
            "baseName": "minute",
            "type": "number",
            "format": ""
        },
        {
            "name": "stageGroup",
            "baseName": "stage_group",
            "type": "StageGroup",
            "format": ""
        },
        {
            "name": "referee",
            "baseName": "referee",
            "type": "PartialPerson",
            "format": ""
        },
        {
            "name": "venue",
            "baseName": "venue",
            "type": "Venue",
            "format": ""
        },
        {
            "name": "incidents",
            "baseName": "incidents",
            "type": "number",
            "format": ""
        },
        {
            "name": "lineupAvailable",
            "baseName": "lineup_available",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "liveUpdates",
            "baseName": "live_updates",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "teamstatsAvailable",
            "baseName": "teamstats_available",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "homeScore",
            "baseName": "home_score",
            "type": "TeamScore",
            "format": ""
        },
        {
            "name": "awayScore",
            "baseName": "away_score",
            "type": "TeamScore",
            "format": ""
        },
        {
            "name": "startedAt",
            "baseName": "started_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "eventStatus",
            "baseName": "event_status",
            "type": "EventStatus",
            "format": ""
        },
        {
            "name": "startTime",
            "baseName": "start_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "goalHome",
            "baseName": "goal_home",
            "type": "number",
            "format": ""
        },
        {
            "name": "goalAway",
            "baseName": "goal_away",
            "type": "number",
            "format": ""
        },
        {
            "name": "penaltyHome",
            "baseName": "penalty_home",
            "type": "number",
            "format": ""
        },
        {
            "name": "penaltyAway",
            "baseName": "penalty_away",
            "type": "number",
            "format": ""
        },
        {
            "name": "aggHome",
            "baseName": "agg_home",
            "type": "number",
            "format": ""
        },
        {
            "name": "aggAway",
            "baseName": "agg_away",
            "type": "number",
            "format": ""
        },
        {
            "name": "homeTeam",
            "baseName": "home_team",
            "type": "PartialTeam",
            "format": ""
        },
        {
            "name": "awayTeam",
            "baseName": "away_team",
            "type": "PartialTeam",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Event.attributeTypeMap;
    }

    public constructor() {
    }
}

