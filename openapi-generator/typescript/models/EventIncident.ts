/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PartialPerson } from './PartialPerson';
import { HttpFile } from '../http/http';

export class EventIncident {
    /**
    * Unique identifier
    */
    'id': number;
    /**
    * Identifier of the event during which the incident occurred
    */
    'eventId': number;
    /**
    * The type of incident
    */
    'type': EventIncidentTypeEnum;
    /**
    * Whether the incident is related to the home or away team. true if home team
    */
    'homeTeam': boolean;
    /**
    * The minute when the incident occured
    */
    'minute': number;
    /**
    * Id of the team for which the incident is related
    */
    'teamId'?: number;
    /**
    * Updated home team score if the incident changes the scoreline (penalty, goal, own_goal, etc)
    */
    'goalHome'?: number;
    /**
    * Updated away team score  if the incident changes the scoreline (penalty, goal, own_goal, etc)
    */
    'goalAway'?: number;
    'player'?: PartialPerson;
    'relPlayer'?: PartialPerson;
    /**
    * Whether the incident has been deleted or not - a disallowed goal for example
    */
    'deleted'?: boolean;
    /**
    * If there are multiple incidents with the same minute, this indicates how they are sorted
    */
    'sortorder'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "eventId",
            "baseName": "event_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "EventIncidentTypeEnum",
            "format": ""
        },
        {
            "name": "homeTeam",
            "baseName": "home_team",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "minute",
            "baseName": "minute",
            "type": "number",
            "format": ""
        },
        {
            "name": "teamId",
            "baseName": "team_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "goalHome",
            "baseName": "goal_home",
            "type": "number",
            "format": ""
        },
        {
            "name": "goalAway",
            "baseName": "goal_away",
            "type": "number",
            "format": ""
        },
        {
            "name": "player",
            "baseName": "player",
            "type": "PartialPerson",
            "format": ""
        },
        {
            "name": "relPlayer",
            "baseName": "rel_player",
            "type": "PartialPerson",
            "format": ""
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "sortorder",
            "baseName": "sortorder",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EventIncident.attributeTypeMap;
    }

    public constructor() {
    }
}


export type EventIncidentTypeEnum = "penalty_shootout_scored" | "yellow_card_red" | "penalty_shootout_missed" | "substitution" | "goal" | "red_card" | "penalty_miss" | "yellow_card" | "penalty_goal" | "own_goal" ;

