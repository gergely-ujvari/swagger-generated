/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {V2KnockoutEdgeRound} from './V2KnockoutEdgeRound';
import {V2KnockoutRound} from './V2KnockoutRound';
import {V2MatchStage} from './V2MatchStage';

/**
 * The V2KnockoutScheme model module.
 * @module model/V2KnockoutScheme
 * @version 0.0.1
 */
export class V2KnockoutScheme {
  /**
   * Constructs a new <code>V2KnockoutScheme</code>.
   * @alias module:model/V2KnockoutScheme
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>V2KnockoutScheme</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V2KnockoutScheme} obj Optional instance to populate.
   * @return {module:model/V2KnockoutScheme} The populated <code>V2KnockoutScheme</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new V2KnockoutScheme();
      if (data.hasOwnProperty('start_round'))
        obj.startRound = V2KnockoutEdgeRound.constructFromObject(data['start_round']);
      if (data.hasOwnProperty('end_round'))
        obj.endRound = V2KnockoutEdgeRound.constructFromObject(data['end_round']);
      if (data.hasOwnProperty('small_final'))
        obj.smallFinal = ApiClient.convertToType(data['small_final'], 'Boolean');
      if (data.hasOwnProperty('stage'))
        obj.stage = V2MatchStage.constructFromObject(data['stage']);
      if (data.hasOwnProperty('rounds'))
        obj.rounds = ApiClient.convertToType(data['rounds'], [V2KnockoutRound]);
    }
    return obj;
  }
}

/**
 * @member {module:model/V2KnockoutEdgeRound} startRound
 */
V2KnockoutScheme.prototype.startRound = undefined;

/**
 * @member {module:model/V2KnockoutEdgeRound} endRound
 */
V2KnockoutScheme.prototype.endRound = undefined;

/**
 * @member {Boolean} smallFinal
 */
V2KnockoutScheme.prototype.smallFinal = undefined;

/**
 * @member {module:model/V2MatchStage} stage
 */
V2KnockoutScheme.prototype.stage = undefined;

/**
 * @member {Array.<module:model/V2KnockoutRound>} rounds
 */
V2KnockoutScheme.prototype.rounds = undefined;

