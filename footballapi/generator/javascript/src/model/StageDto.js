/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {SeasonDto} from './SeasonDto';
import {TournamentDto} from './TournamentDto';

/**
 * The StageDto model module.
 * @module model/StageDto
 * @version 0.0.1
 */
export class StageDto {
  /**
   * Constructs a new <code>StageDto</code>.
   * @alias module:model/StageDto
   * @class
   * @param id {Number} 
   * @param name {String} 
   * @param cup {Boolean} 
   * @param season {module:model/SeasonDto} 
   * @param tournament {module:model/TournamentDto} 
   */
  constructor(id, name, cup, season, tournament) {
    this.id = id;
    this.name = name;
    this.cup = cup;
    this.season = season;
    this.tournament = tournament;
  }

  /**
   * Constructs a <code>StageDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StageDto} obj Optional instance to populate.
   * @return {module:model/StageDto} The populated <code>StageDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new StageDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('cup'))
        obj.cup = ApiClient.convertToType(data['cup'], 'Boolean');
      if (data.hasOwnProperty('season'))
        obj.season = SeasonDto.constructFromObject(data['season']);
      if (data.hasOwnProperty('tournament'))
        obj.tournament = TournamentDto.constructFromObject(data['tournament']);
      if (data.hasOwnProperty('start_date'))
        obj.startDate = ApiClient.convertToType(data['start_date'], 'String');
      if (data.hasOwnProperty('end_date'))
        obj.endDate = ApiClient.convertToType(data['end_date'], 'String');
      if (data.hasOwnProperty('live'))
        obj.live = ApiClient.convertToType(data['live'], 'Boolean');
      if (data.hasOwnProperty('stage_groups'))
        obj.stageGroups = ApiClient.convertToType(data['stage_groups'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
StageDto.prototype.id = undefined;

/**
 * @member {String} name
 */
StageDto.prototype.name = undefined;

/**
 * @member {Boolean} cup
 */
StageDto.prototype.cup = undefined;

/**
 * @member {module:model/SeasonDto} season
 */
StageDto.prototype.season = undefined;

/**
 * @member {module:model/TournamentDto} tournament
 */
StageDto.prototype.tournament = undefined;

/**
 * @member {String} startDate
 */
StageDto.prototype.startDate = undefined;

/**
 * @member {String} endDate
 */
StageDto.prototype.endDate = undefined;

/**
 * @member {Boolean} live
 */
StageDto.prototype.live = undefined;

/**
 * @member {Number} stageGroups
 */
StageDto.prototype.stageGroups = undefined;

