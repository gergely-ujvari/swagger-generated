/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {TeamLineup} from './TeamLineup';

/**
 * The Lineup model module.
 * @module model/Lineup
 * @version 0.0.1
 */
export class Lineup {
  /**
   * Constructs a new <code>Lineup</code>.
   * @alias module:model/Lineup
   * @class
   * @param eventId {Number} Id of the event for which the lineup is for
   * @param homeTeam {module:model/TeamLineup} 
   * @param awayTeam {module:model/TeamLineup} 
   */
  constructor(eventId, homeTeam, awayTeam) {
    this.eventId = eventId;
    this.homeTeam = homeTeam;
    this.awayTeam = awayTeam;
  }

  /**
   * Constructs a <code>Lineup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Lineup} obj Optional instance to populate.
   * @return {module:model/Lineup} The populated <code>Lineup</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Lineup();
      if (data.hasOwnProperty('event_id'))
        obj.eventId = ApiClient.convertToType(data['event_id'], 'Number');
      if (data.hasOwnProperty('confirmed'))
        obj.confirmed = ApiClient.convertToType(data['confirmed'], 'Boolean');
      if (data.hasOwnProperty('home_team'))
        obj.homeTeam = TeamLineup.constructFromObject(data['home_team']);
      if (data.hasOwnProperty('away_team'))
        obj.awayTeam = TeamLineup.constructFromObject(data['away_team']);
    }
    return obj;
  }
}

/**
 * Id of the event for which the lineup is for
 * @member {Number} eventId
 */
Lineup.prototype.eventId = undefined;

/**
 * Whether the lineup is officially confirmed. Should be considered probable if != true
 * @member {Boolean} confirmed
 */
Lineup.prototype.confirmed = undefined;

/**
 * @member {module:model/TeamLineup} homeTeam
 */
Lineup.prototype.homeTeam = undefined;

/**
 * @member {module:model/TeamLineup} awayTeam
 */
Lineup.prototype.awayTeam = undefined;

