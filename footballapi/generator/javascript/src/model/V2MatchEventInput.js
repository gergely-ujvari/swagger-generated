/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The V2MatchEventInput model module.
 * @module model/V2MatchEventInput
 * @version 0.0.1
 */
export class V2MatchEventInput {
  /**
   * Constructs a new <code>V2MatchEventInput</code>.
   * @alias module:model/V2MatchEventInput
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>V2MatchEventInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V2MatchEventInput} obj Optional instance to populate.
   * @return {module:model/V2MatchEventInput} The populated <code>V2MatchEventInput</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new V2MatchEventInput();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('type_code'))
        obj.typeCode = ApiClient.convertToType(data['type_code'], 'String');
      if (data.hasOwnProperty('team_position'))
        obj.teamPosition = ApiClient.convertToType(data['team_position'], 'String');
      if (data.hasOwnProperty('minute'))
        obj.minute = ApiClient.convertToType(data['minute'], 'Number');
      if (data.hasOwnProperty('primary_player_id'))
        obj.primaryPlayerId = ApiClient.convertToType(data['primary_player_id'], 'String');
      if (data.hasOwnProperty('secondary_player_id'))
        obj.secondaryPlayerId = ApiClient.convertToType(data['secondary_player_id'], 'String');
      if (data.hasOwnProperty('sort_order'))
        obj.sortOrder = ApiClient.convertToType(data['sort_order'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
V2MatchEventInput.prototype.id = undefined;

/**
 * Allowed values for the <code>typeCode</code> property.
 * @enum {String}
 * @readonly
 */
V2MatchEventInput.TypeCodeEnum = {
  /**
   * value: "YELLOW_RED_CARD"
   * @const
   */
  YELLOW_RED_CARD: "YELLOW_RED_CARD",

  /**
   * value: "PENALTY_SHOOTOUT_MISSED"
   * @const
   */
  PENALTY_SHOOTOUT_MISSED: "PENALTY_SHOOTOUT_MISSED",

  /**
   * value: "PENALTY_SHOOTOUT_SCORED"
   * @const
   */
  PENALTY_SHOOTOUT_SCORED: "PENALTY_SHOOTOUT_SCORED",

  /**
   * value: "SUBSTITUTION"
   * @const
   */
  SUBSTITUTION: "SUBSTITUTION",

  /**
   * value: "GOAL"
   * @const
   */
  GOAL: "GOAL",

  /**
   * value: "RED_CARD"
   * @const
   */
  RED_CARD: "RED_CARD",

  /**
   * value: "PENALTY_MISS"
   * @const
   */
  PENALTY_MISS: "PENALTY_MISS",

  /**
   * value: "YELLOW_CARD"
   * @const
   */
  YELLOW_CARD: "YELLOW_CARD",

  /**
   * value: "ASSIST"
   * @const
   */
  ASSIST: "ASSIST",

  /**
   * value: "PENALTY_GOAL"
   * @const
   */
  PENALTY_GOAL: "PENALTY_GOAL",

  /**
   * value: "OWN_GOAL"
   * @const
   */
  OWN_GOAL: "OWN_GOAL"
};
/**
 * @member {module:model/V2MatchEventInput.TypeCodeEnum} typeCode
 */
V2MatchEventInput.prototype.typeCode = undefined;

/**
 * Allowed values for the <code>teamPosition</code> property.
 * @enum {String}
 * @readonly
 */
V2MatchEventInput.TeamPositionEnum = {
  /**
   * value: "HOME"
   * @const
   */
  HOME: "HOME",

  /**
   * value: "AWAY"
   * @const
   */
  AWAY: "AWAY"
};
/**
 * @member {module:model/V2MatchEventInput.TeamPositionEnum} teamPosition
 */
V2MatchEventInput.prototype.teamPosition = undefined;

/**
 * @member {Number} minute
 */
V2MatchEventInput.prototype.minute = undefined;

/**
 * @member {String} primaryPlayerId
 */
V2MatchEventInput.prototype.primaryPlayerId = undefined;

/**
 * @member {String} secondaryPlayerId
 */
V2MatchEventInput.prototype.secondaryPlayerId = undefined;

/**
 * Property is used to determine the order of events, if two or more events have the same minute
 * @member {Number} sortOrder
 */
V2MatchEventInput.prototype.sortOrder = undefined;

