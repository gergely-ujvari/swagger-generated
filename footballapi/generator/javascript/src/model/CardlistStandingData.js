/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {PartialPerson} from './PartialPerson';
import {PartialTeam} from './PartialTeam';
import {StandingData} from './StandingData';
import {StandingRule} from './StandingRule';

/**
 * The CardlistStandingData model module.
 * @module model/CardlistStandingData
 * @version 0.0.1
 */
export class CardlistStandingData extends StandingData {
  /**
   * Constructs a new <code>CardlistStandingData</code>.
   * @alias module:model/CardlistStandingData
   * @class
   * @extends module:model/StandingData
   * @param rank {} Position of the team/player in the standing
   * @param team {} 
   * @param player {} 
   * @param redCards {} Number of red cards
   * @param totalCards {} Total number of cards received
   * @param yellowCards {} Total number of yellow cards
   * @param firstYellowCards {} Number of times the Player has been booked, with a first yellow card
   */
  constructor(rank, team, player, redCards, totalCards, yellowCards, firstYellowCards) {
    super(rank, team);
    this.player = player;
    this.redCards = redCards;
    this.totalCards = totalCards;
    this.yellowCards = yellowCards;
    this.firstYellowCards = firstYellowCards;
  }

  /**
   * Constructs a <code>CardlistStandingData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CardlistStandingData} obj Optional instance to populate.
   * @return {module:model/CardlistStandingData} The populated <code>CardlistStandingData</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CardlistStandingData();
      StandingData.constructFromObject(data, obj);
      if (data.hasOwnProperty('player'))
        obj.player = PartialPerson.constructFromObject(data['player']);
      if (data.hasOwnProperty('red_cards'))
        obj.redCards = ApiClient.convertToType(data['red_cards'], 'Number');
      if (data.hasOwnProperty('total_cards'))
        obj.totalCards = ApiClient.convertToType(data['total_cards'], 'Number');
      if (data.hasOwnProperty('yellow_cards'))
        obj.yellowCards = ApiClient.convertToType(data['yellow_cards'], 'Number');
      if (data.hasOwnProperty('first_yellow_cards'))
        obj.firstYellowCards = ApiClient.convertToType(data['first_yellow_cards'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {module:model/PartialPerson} player
 */
CardlistStandingData.prototype.player = undefined;

/**
 * Number of red cards
 * @member {Number} redCards
 */
CardlistStandingData.prototype.redCards = undefined;

/**
 * Total number of cards received
 * @member {Number} totalCards
 */
CardlistStandingData.prototype.totalCards = undefined;

/**
 * Total number of yellow cards
 * @member {Number} yellowCards
 */
CardlistStandingData.prototype.yellowCards = undefined;

/**
 * Number of times the Player has been booked, with a first yellow card
 * @member {Number} firstYellowCards
 */
CardlistStandingData.prototype.firstYellowCards = undefined;

