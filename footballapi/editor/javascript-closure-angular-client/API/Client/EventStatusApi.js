/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.EventStatusApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * API for accessing various kinds of football data, updated in real time.
 * Version: 0.0.1
 * Generated by: io.swagger.codegen.languages.JavascriptClosureAngularClientCodegen
 */
goog.provide('API.Client.EventStatusApi');

goog.require('API.Client.EventStatus');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.EventStatusApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('EventStatusApiBasePath') ?
                   /** @type {!string} */ ($injector.get('EventStatusApiBasePath')) :
                   'https://false';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('EventStatusApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('EventStatusApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.EventStatusApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * 
 * Get a list of available EventStatus objects in the system
 * @param {!string=} opt_acceptLanguage List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.EventStatus>}
 */
API.Client.EventStatusApi.prototype.eventStatusGet = function(opt_acceptLanguage, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/event_status';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  headerParams['Accept-Language'] = opt_acceptLanguage;

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
