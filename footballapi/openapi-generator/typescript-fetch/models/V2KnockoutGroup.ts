/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V2KnockoutMatch,
    V2KnockoutMatchFromJSON,
    V2KnockoutMatchFromJSONTyped,
    V2KnockoutMatchToJSON,
} from './V2KnockoutMatch';
import {
    V2KnockoutTeam,
    V2KnockoutTeamFromJSON,
    V2KnockoutTeamFromJSONTyped,
    V2KnockoutTeamToJSON,
} from './V2KnockoutTeam';

/**
 * 
 * @export
 * @interface V2KnockoutGroup
 */
export interface V2KnockoutGroup {
    /**
     * 
     * @type {string}
     * @memberof V2KnockoutGroup
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof V2KnockoutGroup
     */
    order?: number;
    /**
     * 
     * @type {Array<V2KnockoutTeam>}
     * @memberof V2KnockoutGroup
     */
    teams?: Array<V2KnockoutTeam>;
    /**
     * 
     * @type {Array<V2KnockoutMatch>}
     * @memberof V2KnockoutGroup
     */
    matches?: Array<V2KnockoutMatch>;
    /**
     * 
     * @type {string}
     * @memberof V2KnockoutGroup
     */
    childObjectId?: string;
}

export function V2KnockoutGroupFromJSON(json: any): V2KnockoutGroup {
    return V2KnockoutGroupFromJSONTyped(json, false);
}

export function V2KnockoutGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2KnockoutGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'teams': !exists(json, 'teams') ? undefined : ((json['teams'] as Array<any>).map(V2KnockoutTeamFromJSON)),
        'matches': !exists(json, 'matches') ? undefined : ((json['matches'] as Array<any>).map(V2KnockoutMatchFromJSON)),
        'childObjectId': !exists(json, 'child_object_id') ? undefined : json['child_object_id'],
    };
}

export function V2KnockoutGroupToJSON(value?: V2KnockoutGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'order': value.order,
        'teams': value.teams === undefined ? undefined : ((value.teams as Array<any>).map(V2KnockoutTeamToJSON)),
        'matches': value.matches === undefined ? undefined : ((value.matches as Array<any>).map(V2KnockoutMatchToJSON)),
        'child_object_id': value.childObjectId,
    };
}

