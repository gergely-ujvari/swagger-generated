/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V2SquadPlayerInput
 */
export interface V2SquadPlayerInput {
    /**
     * 
     * @type {string}
     * @memberof V2SquadPlayerInput
     */
    playerId?: string;
    /**
     * 
     * @type {string}
     * @memberof V2SquadPlayerInput
     */
    status?: V2SquadPlayerInputStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof V2SquadPlayerInput
     */
    contractType?: V2SquadPlayerInputContractTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof V2SquadPlayerInput
     */
    startDate?: string;
    /**
     * 
     * @type {string}
     * @memberof V2SquadPlayerInput
     */
    endDate?: string;
    /**
     * 
     * @type {number}
     * @memberof V2SquadPlayerInput
     */
    shirtNumber?: number;
}


/**
 * @export
 */
export const V2SquadPlayerInputStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE'
} as const;
export type V2SquadPlayerInputStatusEnum = typeof V2SquadPlayerInputStatusEnum[keyof typeof V2SquadPlayerInputStatusEnum];

/**
 * @export
 */
export const V2SquadPlayerInputContractTypeEnum = {
    Permanent: 'PERMANENT',
    Loan: 'LOAN',
    Unknown: 'UNKNOWN'
} as const;
export type V2SquadPlayerInputContractTypeEnum = typeof V2SquadPlayerInputContractTypeEnum[keyof typeof V2SquadPlayerInputContractTypeEnum];


export function V2SquadPlayerInputFromJSON(json: any): V2SquadPlayerInput {
    return V2SquadPlayerInputFromJSONTyped(json, false);
}

export function V2SquadPlayerInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2SquadPlayerInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'playerId': !exists(json, 'player_id') ? undefined : json['player_id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'contractType': !exists(json, 'contract_type') ? undefined : json['contract_type'],
        'startDate': !exists(json, 'start_date') ? undefined : json['start_date'],
        'endDate': !exists(json, 'end_date') ? undefined : json['end_date'],
        'shirtNumber': !exists(json, 'shirt_number') ? undefined : json['shirt_number'],
    };
}

export function V2SquadPlayerInputToJSON(value?: V2SquadPlayerInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'player_id': value.playerId,
        'status': value.status,
        'contract_type': value.contractType,
        'start_date': value.startDate,
        'end_date': value.endDate,
        'shirt_number': value.shirtNumber,
    };
}

