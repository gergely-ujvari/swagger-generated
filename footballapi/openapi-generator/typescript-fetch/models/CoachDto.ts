/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CountryDto,
    CountryDtoFromJSON,
    CountryDtoFromJSONTyped,
    CountryDtoToJSON,
} from './CountryDto';

/**
 * 
 * @export
 * @interface CoachDto
 */
export interface CoachDto {
    /**
     * 
     * @type {number}
     * @memberof CoachDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CoachDto
     */
    name?: string;
    /**
     * 
     * @type {CountryDto}
     * @memberof CoachDto
     */
    country?: CountryDto;
    /**
     * 
     * @type {string}
     * @memberof CoachDto
     */
    birthdate?: string;
    /**
     * 
     * @type {string}
     * @memberof CoachDto
     */
    gender?: CoachDtoGenderEnum;
}


/**
 * @export
 */
export const CoachDtoGenderEnum = {
    Male: 'MALE',
    Female: 'FEMALE'
} as const;
export type CoachDtoGenderEnum = typeof CoachDtoGenderEnum[keyof typeof CoachDtoGenderEnum];


export function CoachDtoFromJSON(json: any): CoachDto {
    return CoachDtoFromJSONTyped(json, false);
}

export function CoachDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoachDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'country': !exists(json, 'country') ? undefined : CountryDtoFromJSON(json['country']),
        'birthdate': !exists(json, 'birthdate') ? undefined : json['birthdate'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
    };
}

export function CoachDtoToJSON(value?: CoachDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'country': CountryDtoToJSON(value.country),
        'birthdate': value.birthdate,
        'gender': value.gender,
    };
}

