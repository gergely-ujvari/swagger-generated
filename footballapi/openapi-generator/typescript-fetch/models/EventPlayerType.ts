/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EventPlayerType
 */
export interface EventPlayerType {
    /**
     * Indicates what part of the lineup the player belongs to
     * @type {string}
     * @memberof EventPlayerType
     */
    category: EventPlayerTypeCategoryEnum;
    /**
     * Human readable name of the type
     * @type {string}
     * @memberof EventPlayerType
     */
    name: string;
    /**
     * Internal unique code to identify the type
     * @type {string}
     * @memberof EventPlayerType
     */
    code: string;
}


/**
 * @export
 */
export const EventPlayerTypeCategoryEnum = {
    Miss: 'miss',
    Sub: 'sub',
    Start: 'start',
    Unknown: 'unknown'
} as const;
export type EventPlayerTypeCategoryEnum = typeof EventPlayerTypeCategoryEnum[keyof typeof EventPlayerTypeCategoryEnum];


export function EventPlayerTypeFromJSON(json: any): EventPlayerType {
    return EventPlayerTypeFromJSONTyped(json, false);
}

export function EventPlayerTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventPlayerType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': json['category'],
        'name': json['name'],
        'code': json['code'],
    };
}

export function EventPlayerTypeToJSON(value?: EventPlayerType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': value.category,
        'name': value.name,
        'code': value.code,
    };
}

