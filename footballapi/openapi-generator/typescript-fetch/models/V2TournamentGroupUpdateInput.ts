/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TournamentItemDto,
    TournamentItemDtoFromJSON,
    TournamentItemDtoFromJSONTyped,
    TournamentItemDtoToJSON,
} from './TournamentItemDto';

/**
 * 
 * @export
 * @interface V2TournamentGroupUpdateInput
 */
export interface V2TournamentGroupUpdateInput {
    /**
     * 
     * @type {string}
     * @memberof V2TournamentGroupUpdateInput
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof V2TournamentGroupUpdateInput
     */
    description?: string;
    /**
     * 
     * @type {Array<TournamentItemDto>}
     * @memberof V2TournamentGroupUpdateInput
     */
    tournaments?: Array<TournamentItemDto>;
}

export function V2TournamentGroupUpdateInputFromJSON(json: any): V2TournamentGroupUpdateInput {
    return V2TournamentGroupUpdateInputFromJSONTyped(json, false);
}

export function V2TournamentGroupUpdateInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2TournamentGroupUpdateInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'tournaments': !exists(json, 'tournaments') ? undefined : ((json['tournaments'] as Array<any>).map(TournamentItemDtoFromJSON)),
    };
}

export function V2TournamentGroupUpdateInputToJSON(value?: V2TournamentGroupUpdateInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'tournaments': value.tournaments === undefined ? undefined : ((value.tournaments as Array<any>).map(TournamentItemDtoToJSON)),
    };
}

