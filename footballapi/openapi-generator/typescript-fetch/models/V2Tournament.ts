/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V2Country,
    V2CountryFromJSON,
    V2CountryFromJSONTyped,
    V2CountryToJSON,
} from './V2Country';

/**
 * 
 * @export
 * @interface V2Tournament
 */
export interface V2Tournament {
    /**
     * 
     * @type {string}
     * @memberof V2Tournament
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof V2Tournament
     */
    name?: string;
    /**
     * 
     * @type {V2Country}
     * @memberof V2Tournament
     */
    country?: V2Country;
    /**
     * 
     * @type {string}
     * @memberof V2Tournament
     */
    gender?: V2TournamentGenderEnum;
    /**
     * 
     * @type {string}
     * @memberof V2Tournament
     */
    type?: V2TournamentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof V2Tournament
     */
    region?: V2TournamentRegionEnum;
}


/**
 * @export
 */
export const V2TournamentGenderEnum = {
    Male: 'MALE',
    Female: 'FEMALE'
} as const;
export type V2TournamentGenderEnum = typeof V2TournamentGenderEnum[keyof typeof V2TournamentGenderEnum];

/**
 * @export
 */
export const V2TournamentTypeEnum = {
    Cup: 'CUP',
    League: 'LEAGUE'
} as const;
export type V2TournamentTypeEnum = typeof V2TournamentTypeEnum[keyof typeof V2TournamentTypeEnum];

/**
 * @export
 */
export const V2TournamentRegionEnum = {
    Domestic: 'DOMESTIC',
    International: 'INTERNATIONAL'
} as const;
export type V2TournamentRegionEnum = typeof V2TournamentRegionEnum[keyof typeof V2TournamentRegionEnum];


export function V2TournamentFromJSON(json: any): V2Tournament {
    return V2TournamentFromJSONTyped(json, false);
}

export function V2TournamentFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2Tournament {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'country': !exists(json, 'country') ? undefined : V2CountryFromJSON(json['country']),
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'region': !exists(json, 'region') ? undefined : json['region'],
    };
}

export function V2TournamentToJSON(value?: V2Tournament | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'country': V2CountryToJSON(value.country),
        'gender': value.gender,
        'type': value.type,
        'region': value.region,
    };
}

