/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TournamentSeason,
    TournamentSeasonFromJSON,
    TournamentSeasonFromJSONTyped,
    TournamentSeasonToJSON,
} from './TournamentSeason';

/**
 * 
 * @export
 * @interface TournamentWithSeasonsAllOf
 */
export interface TournamentWithSeasonsAllOf {
    /**
     * List of seasons available for the Tournament
     * @type {Array<TournamentSeason>}
     * @memberof TournamentWithSeasonsAllOf
     */
    seasons: Array<TournamentSeason>;
}

export function TournamentWithSeasonsAllOfFromJSON(json: any): TournamentWithSeasonsAllOf {
    return TournamentWithSeasonsAllOfFromJSONTyped(json, false);
}

export function TournamentWithSeasonsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): TournamentWithSeasonsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'seasons': ((json['seasons'] as Array<any>).map(TournamentSeasonFromJSON)),
    };
}

export function TournamentWithSeasonsAllOfToJSON(value?: TournamentWithSeasonsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'seasons': ((value.seasons as Array<any>).map(TournamentSeasonToJSON)),
    };
}

