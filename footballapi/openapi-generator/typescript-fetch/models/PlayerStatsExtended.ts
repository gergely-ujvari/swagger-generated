/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlayerStatsBasic,
    PlayerStatsBasicFromJSON,
    PlayerStatsBasicFromJSONTyped,
    PlayerStatsBasicToJSON,
} from './PlayerStatsBasic';
import {
    PlayerStatsExtendedAllOf,
    PlayerStatsExtendedAllOfFromJSON,
    PlayerStatsExtendedAllOfFromJSONTyped,
    PlayerStatsExtendedAllOfToJSON,
} from './PlayerStatsExtendedAllOf';

/**
 * 
 * @export
 * @interface PlayerStatsExtended
 */
export interface PlayerStatsExtended {
    /**
     * Total goals scored
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    goals: number;
    /**
     * Total games played
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    played: number;
    /**
     * Total minutes played
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    minutes: number;
    /**
     * Number of red cards
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    redCards: number;
    /**
     * Number of yellow cards
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    yellowCards: number;
    /**
     * Number of assists
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    assists?: number;
    /**
     * Goals conceded (Goalkeeper)
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    conceded?: number;
    /**
     * Games started as a substitute
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    substitute?: number;
    /**
     * Games without allowing a goal (Goalkeeper)
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    cleansheets?: number;
    /**
     * Games where the player has come on
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    substituteIn?: number;
    /**
     * Games where the player has come off
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    substituteOut?: number;
    /**
     * Minutes played after coming on as a substitute
     * @type {number}
     * @memberof PlayerStatsExtended
     */
    minutesSubstitute?: number;
}

export function PlayerStatsExtendedFromJSON(json: any): PlayerStatsExtended {
    return PlayerStatsExtendedFromJSONTyped(json, false);
}

export function PlayerStatsExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerStatsExtended {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'goals': json['goals'],
        'played': json['played'],
        'minutes': json['minutes'],
        'redCards': json['red_cards'],
        'yellowCards': json['yellow_cards'],
        'assists': !exists(json, 'assists') ? undefined : json['assists'],
        'conceded': !exists(json, 'conceded') ? undefined : json['conceded'],
        'substitute': !exists(json, 'substitute') ? undefined : json['substitute'],
        'cleansheets': !exists(json, 'cleansheets') ? undefined : json['cleansheets'],
        'substituteIn': !exists(json, 'substitute_in') ? undefined : json['substitute_in'],
        'substituteOut': !exists(json, 'substitute_out') ? undefined : json['substitute_out'],
        'minutesSubstitute': !exists(json, 'minutes_substitute') ? undefined : json['minutes_substitute'],
    };
}

export function PlayerStatsExtendedToJSON(value?: PlayerStatsExtended | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'goals': value.goals,
        'played': value.played,
        'minutes': value.minutes,
        'red_cards': value.redCards,
        'yellow_cards': value.yellowCards,
        'assists': value.assists,
        'conceded': value.conceded,
        'substitute': value.substitute,
        'cleansheets': value.cleansheets,
        'substitute_in': value.substituteIn,
        'substitute_out': value.substituteOut,
        'minutes_substitute': value.minutesSubstitute,
    };
}

