/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PartialPerson,
    PartialPersonFromJSON,
    PartialPersonFromJSONTyped,
    PartialPersonToJSON,
} from './PartialPerson';

/**
 * 
 * @export
 * @interface TopscorerStandingDataAllOf
 */
export interface TopscorerStandingDataAllOf {
    /**
     * 
     * @type {PartialPerson}
     * @memberof TopscorerStandingDataAllOf
     */
    player: PartialPerson;
    /**
     * Number of goals scored
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    goals: number;
    /**
     * Total games played
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    played?: number;
    /**
     * Number of assists
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    assists?: number;
    /**
     * Total number of minutes played
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    minutes?: number;
    /**
     * Number of goals scored from the penalty spot
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    penalties?: number;
    /**
     * Number of red cards
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    redCards?: number;
    /**
     * Number of times the player scored first for the team
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    scoredFirst?: number;
    /**
     * Number of yellow cards
     * @type {number}
     * @memberof TopscorerStandingDataAllOf
     */
    yellowCards?: number;
}

export function TopscorerStandingDataAllOfFromJSON(json: any): TopscorerStandingDataAllOf {
    return TopscorerStandingDataAllOfFromJSONTyped(json, false);
}

export function TopscorerStandingDataAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopscorerStandingDataAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'player': PartialPersonFromJSON(json['player']),
        'goals': json['goals'],
        'played': !exists(json, 'played') ? undefined : json['played'],
        'assists': !exists(json, 'assists') ? undefined : json['assists'],
        'minutes': !exists(json, 'minutes') ? undefined : json['minutes'],
        'penalties': !exists(json, 'penalties') ? undefined : json['penalties'],
        'redCards': !exists(json, 'red_cards') ? undefined : json['red_cards'],
        'scoredFirst': !exists(json, 'scored_first') ? undefined : json['scored_first'],
        'yellowCards': !exists(json, 'yellow_cards') ? undefined : json['yellow_cards'],
    };
}

export function TopscorerStandingDataAllOfToJSON(value?: TopscorerStandingDataAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'player': PartialPersonToJSON(value.player),
        'goals': value.goals,
        'played': value.played,
        'assists': value.assists,
        'minutes': value.minutes,
        'penalties': value.penalties,
        'red_cards': value.redCards,
        'scored_first': value.scoredFirst,
        'yellow_cards': value.yellowCards,
    };
}

