/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V2MappingRequestDto
 */
export interface V2MappingRequestDto {
    /**
     * 
     * @type {string}
     * @memberof V2MappingRequestDto
     */
    entityType: V2MappingRequestDtoEntityTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof V2MappingRequestDto
     */
    providerId: string;
}


/**
 * @export
 */
export const V2MappingRequestDtoEntityTypeEnum = {
    Player: 'PLAYER',
    Team: 'TEAM',
    Coach: 'COACH',
    Match: 'MATCH',
    Season: 'SEASON',
    Venue: 'VENUE',
    Referee: 'REFEREE',
    Tournament: 'TOURNAMENT',
    City: 'CITY',
    President: 'PRESIDENT',
    Stage: 'STAGE',
    Group: 'GROUP',
    Country: 'COUNTRY',
    OddProvider: 'ODD_PROVIDER'
} as const;
export type V2MappingRequestDtoEntityTypeEnum = typeof V2MappingRequestDtoEntityTypeEnum[keyof typeof V2MappingRequestDtoEntityTypeEnum];


export function V2MappingRequestDtoFromJSON(json: any): V2MappingRequestDto {
    return V2MappingRequestDtoFromJSONTyped(json, false);
}

export function V2MappingRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2MappingRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entityType': json['entity_type'],
        'providerId': json['provider_id'],
    };
}

export function V2MappingRequestDtoToJSON(value?: V2MappingRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entity_type': value.entityType,
        'provider_id': value.providerId,
    };
}

