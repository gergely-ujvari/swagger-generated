/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlayerEditSocialDto,
    PlayerEditSocialDtoFromJSON,
    PlayerEditSocialDtoFromJSONTyped,
    PlayerEditSocialDtoToJSON,
} from './PlayerEditSocialDto';
import {
    PlayerProfileDto,
    PlayerProfileDtoFromJSON,
    PlayerProfileDtoFromJSONTyped,
    PlayerProfileDtoToJSON,
} from './PlayerProfileDto';
import {
    V2City,
    V2CityFromJSON,
    V2CityFromJSONTyped,
    V2CityToJSON,
} from './V2City';
import {
    V2Country,
    V2CountryFromJSON,
    V2CountryFromJSONTyped,
    V2CountryToJSON,
} from './V2Country';
import {
    V2PlayerActiveClub,
    V2PlayerActiveClubFromJSON,
    V2PlayerActiveClubFromJSONTyped,
    V2PlayerActiveClubToJSON,
} from './V2PlayerActiveClub';

/**
 * 
 * @export
 * @interface V2PlayerProfile
 */
export interface V2PlayerProfile {
    /**
     * 
     * @type {string}
     * @memberof V2PlayerProfile
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof V2PlayerProfile
     */
    name?: string;
    /**
     * 
     * @type {V2Country}
     * @memberof V2PlayerProfile
     */
    country?: V2Country;
    /**
     * 
     * @type {boolean}
     * @memberof V2PlayerProfile
     */
    active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof V2PlayerProfile
     */
    birthdate?: string;
    /**
     * 
     * @type {V2City}
     * @memberof V2PlayerProfile
     */
    birthCity?: V2City;
    /**
     * 
     * @type {PlayerProfileDto}
     * @memberof V2PlayerProfile
     */
    profile?: PlayerProfileDto;
    /**
     * 
     * @type {PlayerEditSocialDto}
     * @memberof V2PlayerProfile
     */
    social?: PlayerEditSocialDto;
    /**
     * 
     * @type {string}
     * @memberof V2PlayerProfile
     */
    position?: string;
    /**
     * 
     * @type {Array<V2PlayerActiveClub>}
     * @memberof V2PlayerProfile
     */
    teams?: Array<V2PlayerActiveClub>;
    /**
     * 
     * @type {string}
     * @memberof V2PlayerProfile
     */
    gender?: V2PlayerProfileGenderEnum;
}


/**
 * @export
 */
export const V2PlayerProfileGenderEnum = {
    Male: 'MALE',
    Female: 'FEMALE'
} as const;
export type V2PlayerProfileGenderEnum = typeof V2PlayerProfileGenderEnum[keyof typeof V2PlayerProfileGenderEnum];


export function V2PlayerProfileFromJSON(json: any): V2PlayerProfile {
    return V2PlayerProfileFromJSONTyped(json, false);
}

export function V2PlayerProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2PlayerProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'country': !exists(json, 'country') ? undefined : V2CountryFromJSON(json['country']),
        'active': !exists(json, 'active') ? undefined : json['active'],
        'birthdate': !exists(json, 'birthdate') ? undefined : json['birthdate'],
        'birthCity': !exists(json, 'birth_city') ? undefined : V2CityFromJSON(json['birth_city']),
        'profile': !exists(json, 'profile') ? undefined : PlayerProfileDtoFromJSON(json['profile']),
        'social': !exists(json, 'social') ? undefined : PlayerEditSocialDtoFromJSON(json['social']),
        'position': !exists(json, 'position') ? undefined : json['position'],
        'teams': !exists(json, 'teams') ? undefined : ((json['teams'] as Array<any>).map(V2PlayerActiveClubFromJSON)),
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
    };
}

export function V2PlayerProfileToJSON(value?: V2PlayerProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'country': V2CountryToJSON(value.country),
        'active': value.active,
        'birthdate': value.birthdate,
        'birth_city': V2CityToJSON(value.birthCity),
        'profile': PlayerProfileDtoToJSON(value.profile),
        'social': PlayerEditSocialDtoToJSON(value.social),
        'position': value.position,
        'teams': value.teams === undefined ? undefined : ((value.teams as Array<any>).map(V2PlayerActiveClubToJSON)),
        'gender': value.gender,
    };
}

