/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Player,
    PlayerFromJSON,
    PlayerFromJSONTyped,
    PlayerToJSON,
} from './Player';
import {
    TeamPlayerAllOf,
    TeamPlayerAllOfFromJSON,
    TeamPlayerAllOfFromJSONTyped,
    TeamPlayerAllOfToJSON,
} from './TeamPlayerAllOf';
import {
    TeamPlayerData,
    TeamPlayerDataFromJSON,
    TeamPlayerDataFromJSONTyped,
    TeamPlayerDataToJSON,
} from './TeamPlayerData';

/**
 * 
 * @export
 * @interface TeamPlayer
 */
export interface TeamPlayer {
    /**
     * Whether the person is currently part of the Team
     * @type {boolean}
     * @memberof TeamPlayer
     */
    active?: boolean;
    /**
     * Date when the Person joined the team
     * @type {Date}
     * @memberof TeamPlayer
     */
    startDate?: Date;
    /**
     * Date when the Person left the team (if any)
     * @type {Date}
     * @memberof TeamPlayer
     */
    endDate?: Date;
    /**
     * Shirt number which the player wears for the team
     * @type {number}
     * @memberof TeamPlayer
     */
    shirtNumber?: number;
    /**
     * Whether the player is on loan with the team
     * @type {boolean}
     * @memberof TeamPlayer
     */
    loan?: boolean;
    /**
     * 
     * @type {Player}
     * @memberof TeamPlayer
     */
    player: Player;
}

export function TeamPlayerFromJSON(json: any): TeamPlayer {
    return TeamPlayerFromJSONTyped(json, false);
}

export function TeamPlayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamPlayer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': !exists(json, 'active') ? undefined : json['active'],
        'startDate': !exists(json, 'start_date') ? undefined : (new Date(json['start_date'])),
        'endDate': !exists(json, 'end_date') ? undefined : (new Date(json['end_date'])),
        'shirtNumber': !exists(json, 'shirt_number') ? undefined : json['shirt_number'],
        'loan': !exists(json, 'loan') ? undefined : json['loan'],
        'player': PlayerFromJSON(json['player']),
    };
}

export function TeamPlayerToJSON(value?: TeamPlayer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'start_date': value.startDate === undefined ? undefined : (value.startDate.toISOString().substr(0,10)),
        'end_date': value.endDate === undefined ? undefined : (value.endDate.toISOString().substr(0,10)),
        'shirt_number': value.shirtNumber,
        'loan': value.loan,
        'player': PlayerToJSON(value.player),
    };
}

