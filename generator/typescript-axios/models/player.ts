/* tslint:disable */
/* eslint-disable */
/**
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Country } from './country';
/**
 * 
 * @export
 * @interface Player
 */
export interface Player {
    /**
     * Playing position of the player
     * @type {string}
     * @memberof Player
     */
    position?: PlayerPositionEnum;
    /**
     * 
     * @type {Country}
     * @memberof Player
     */
    country: Country;
    /**
     * Date when the person was born
     * @type {string}
     * @memberof Player
     */
    birthdate?: string;
    /**
     * Human readable first(given) name
     * @type {string}
     * @memberof Player
     */
    firstName?: string;
    /**
     * Human readable last(family) name
     * @type {string}
     * @memberof Player
     */
    lastName?: string;
    /**
     * True if currently active, false if retired
     * @type {boolean}
     * @memberof Player
     */
    active?: boolean;
    /**
     * Person's gender
     * @type {string}
     * @memberof Player
     */
    gender?: PlayerGenderEnum;
    /**
     * Unique identifier within the system
     * @type {number}
     * @memberof Player
     */
    id: number;
    /**
     * Human readable name of the Person
     * @type {string}
     * @memberof Player
     */
    name: string;
    /**
     * 150x150 face image of Person
     * @type {string}
     * @memberof Player
     */
    urlThumb?: string;
    /**
     * 277x338 full body image of Person
     * @type {string}
     * @memberof Player
     */
    urlImage?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum PlayerPositionEnum {
    Keeper = 'keeper',
    Defender = 'defender',
    Midfielder = 'midfielder',
    Forward = 'forward'
}
/**
    * @export
    * @enum {string}
    */
export enum PlayerGenderEnum {
    MALE = 'MALE',
    FEMALE = 'FEMALE'
}

