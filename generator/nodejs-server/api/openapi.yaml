openapi: 3.0.1
info:
  title: Football API
  description: "API for accessing various kinds of football data, updated in real\
    \ time."
  version: 0.0.1
servers:
- url: https://false/
security:
- basicAuth: []
paths:
  /countries:
    get:
      tags:
      - Countries
      description: Get a list of available Country resources
      operationId: countriesGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of available Country objects in the system
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Countries
  /events:
    get:
      tags:
      - Events
      description: Get a list of Events
      operationId: eventsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: from_time
        in: query
        description: "Filter events, which have a start_time after the specified date,\
          \ format is RFC 3339"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to_time
        in: query
        description: "Filter events, which have a start_time before the specified\
          \ date, format is RFC 3339"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: group_by
        in: query
        description: "Group events by a specified property. Event models are returned\
          \ as an 'items' array inside the property object. Can be used to return\
          \ events in a more convenient format for displaying. NOTE: when using this\
          \ parameter the response schema changes."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ""
          - tournament_season_stage
      - name: client_order
        in: query
        description: Order matching events for a specific client
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - sportalios
      responses:
        "200":
          description: List of event objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Events
  /events/since:
    get:
      tags:
      - Events
      description: Get a list of events which have been updated since the specified
        timestamp
      operationId: eventsSinceGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: last_update
        in: query
        description: "Filter events, have been updated after the specified date-time.\
          \ By default will return updated Events during the last hour"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: List of matching Event objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Events
  /events/{id}:
    get:
      tags:
      - Events
      operationId: eventsIdGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: expand
        in: query
        description: Specifies additional information to include with the standing
          response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - form
          - form.events
      responses:
        "200":
          description: Event object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Event'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Events
  /teams/{id}/events:
    get:
      tags:
      - Teams
      description: Get a list of events in which a team with a specified id has participated
      operationId: teamsIdEventsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: from_time
        in: query
        description: "Filter events, which have a start_time after the specified date,\
          \ format is RFC 3339"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to_time
        in: query
        description: "Filter events, which have a start_time before the specified\
          \ date, format is RFC 3339"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: direction
        in: query
        description: Whether to sort the results by ascending or descending order
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - desc
      - name: tournament_season_stage_id
        in: query
        description: Filter events for a specific tournament_season_stage.id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of matching Event objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json; charset=utf-8
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Teams
  /events/by_teams:
    get:
      tags:
      - Events
      description: Get a list of events by home and away team id
      operationId: eventsBy_teamsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: home_id
        in: query
        description: Filter events with home team id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: away_id
        in: query
        description: Filter events with away team id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Event object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Event'
      x-swagger-router-controller: Events
  /events/live:
    get:
      tags:
      - Events
      description: Get a list of events which are currently live
      operationId: eventsLiveGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: group_by
        in: query
        description: "Group events by a specified property. Event models are returned\
          \ as an 'items' array inside the property object. Can be used to return\
          \ events in a more convenient format for displaying. NOTE: when using this\
          \ parameter the response schema changes."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - tournament_season_stage
      responses:
        "200":
          description: List of event objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Events
  /matches:
    get:
      tags:
      - Events
      description: Get a list of matches for team/between teams
      operationId: matchesGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: from_start_time
        in: query
        description: Return matches with start_time >= from_start_time. RFC 3339 format
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to_start_time
        in: query
        description: Return matches with start_time <= from_start_time. RFC 3339 format
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: team_ids
        in: query
        description: "List for team IDs separated by commas. In case of one ID, it\
          \ will return all matches for a selected team, in case of multiple - it\
          \ will return matches between selected teams."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: match_ids
        in: query
        description: List for match IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tournament_ids
        in: query
        description: List for tournament IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: stage_ids
        in: query
        description: List for stage IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: rounds
        in: query
        description: List for rounds separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: season_ids
        in: query
        description: List for season IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status_types
        in: query
        description: List of status types.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - finished
          - notstarted
          - inprogress
          - interrupted
          - cancelled
      - name: offset
        in: query
        description: Results offset
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Results limit
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: tournament_order
        in: query
        description: Tournament filtering and ordering.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: referee_id
        in: query
        description: Filter matches by referee
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: venue_id
        in: query
        description: Filter matches by venue
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status_code
        in: query
        description: Filter matches by event_status.code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_direction
        in: query
        description: Result ordering - asc/desc
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: List of event objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Events
  /matches/{id}/commentary:
    get:
      tags:
      - Matches
      description: Get a list of live commentaries with specified match id and language
      operationId: matchesIdCommentaryGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Return translations depending on language code
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Match comentary details
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveCommentaryOutputDto'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Matches
  /events/{id}/incidents:
    get:
      tags:
      - Events
      description: "Get a list of EventIncident for a specified Event (goal, subs,\
        \ red cards, penalties, etc)."
      operationId: eventsIdIncidentsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: group_by
        in: query
        description: "Group results by a property. If 'team' is used the json object\
          \ has 'home_team' and 'away_team', each containing an array of EventIncident\
          \ objects"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - team
      - name: direction
        in: query
        description: Whether to sort the results by ascending or descending order
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: List of EventIncident objects related to the specifed event
            id.
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventIncident'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Events
  /event_incidents:
    get:
      tags:
      - EventIncidents
      description: "Get a list of EventIncident for a specified Event (goal, subs,\
        \ red cards, penalties, etc)."
      operationId: event_incidentsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: last_update
        in: query
        description: "Filter events, have been updated after the specified date-time.\
          \ By default will return updates modified in the last 24 hours"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: List of EventIncident which have been updated after a specified
            time
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventIncident'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: EventIncidents
  /events/{id}/players:
    get:
      tags:
      - Events
      description: Get a list of players which are involved in an Event. The list
        can be used to build lineups for the teams
      operationId: eventsIdPlayersGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: group_by
        in: query
        description: "Group results by a property. If 'team' is used the json object\
          \ has 'home_team' and 'away_team', each containing an array of EventPlayer\
          \ objects"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - team
      responses:
        "200":
          description: List of EventPlayers which form the lineups of the two teams
            in the Event
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventPlayer'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Events
  /events/{id}/lineups:
    get:
      tags:
      - Events
      description: "Get lineup information for an event. Includes players, formation\
        \ and coach"
      operationId: eventsIdLineupsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Event.id for which lineups are requested
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 835
      responses:
        "200":
          description: Lineup information for the home and away team
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Lineup'
        "404":
          description: No lineup information found for the event
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Events
  /lineups:
    get:
      tags:
      - Lineups
      description: "Get lineup information. Includes players, formation and coach"
      operationId: lineupsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: last_update
        in: query
        description: Filter lineups which have updates only after the specified time
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Lineup information for the home and away team
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lineup'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Lineups
  /event_player_types:
    get:
      tags:
      - EventPlayerType
      description: Get a list of available EventPlayerType objects in the system
      operationId: event_player_typesGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of EventPlayerType objects available in the system
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventPlayerType'
      x-swagger-router-controller: EventPlayerType
  /event_status:
    get:
      tags:
      - EventStatus
      description: Get a list of available EventStatus objects in the system
      operationId: event_statusGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of EventStatus objects available in the system
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventStatus'
      x-swagger-router-controller: EventStatus
  /events/{id}/teamstats:
    get:
      tags:
      - TeamStats
      description: Get statistics for the performance of each team involved in the
        event
      operationId: eventsIdTeamstatsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Event.id for which team stats are requested
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 835
      responses:
        "200":
          description: Statistics about each of the teams involved in the event
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventTeamStats'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: TeamStats
  /event_teamstats:
    get:
      tags:
      - TeamStats
      description: Get statistics for the performance of each team involved in the
        event
      operationId: event_teamstatsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: last_update
        in: query
        description: "Filter events, have been updated after the specified date-time.\
          \ By default will return updates modified in the last 24 hours"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Statistics about each of the teams involved in the event
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventTeamStats'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: TeamStats
  /mappings/sportal:
    get:
      tags:
      - Mappings
      description: Get FootballApi ID to Sportal ID maps for various types of objects
      operationId: mappingsSportalGET
      parameters:
      - name: object
        in: query
        description: Filter ID maps by a specific object type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - player
          - team
          - tournament
          - tournament_season
          - tournament_season_stage
      - name: id
        in: query
        description: Return single Sportal ID for the specified FootballAPI 'id'
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: ID mappings for objects where key=FotballAPI ID and value=Sportal
            ID
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Mappings
  /mappings/sportal/reverse:
    get:
      tags:
      - Mappings
      description: Get Sportal to Football API ID maps for various types of objects
      operationId: mappingsSportalReverseGET
      parameters:
      - name: object
        in: query
        description: Filter ID maps by a specific object type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - player
          - team
          - tournament
          - tournament_season
          - tournament_season_stage
      - name: id
        in: query
        description: Return single FotballApi ID for the specified Sportal 'id'
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: 'ID mappings for objects where key=Sportal ID and value=FootballAPI
            ID '
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Mappings
  /odd_providers:
    get:
      tags:
      - Odds
      description: Return a list of OddProviders available in the system. If X-Odd-Client
        is specified they will be filtered and ordered by the client configuration.
      operationId: odd_providersGET
      parameters:
      - name: X-Odd-Client
        in: header
        description: Identifies the client for which to return filtered bookmakers
          with affiliate URLs. Without the parameter can not sort odd_providers or
          provide affiliate links. Instead it will sometimes give a 'coupon' key with
          the odds fo building URLs.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of OddProvider objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OddProvider'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Odds
  /events/{id}/pregameodds:
    get:
      tags:
      - Odds
      - Events
      description: Get available pre-game odds for an Event
      operationId: eventsIdPregameoddsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: X-Odd-Client
        in: header
        description: Identifies the client for which to return filtered bookmakers
          with affiliate URLs. Without the parameter can not sort odd_providers or
          provide affiliate links. Instead it will sometimes give a 'coupon' key with
          the odds fo building URLs.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of pre-game odds
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Odd'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Odds
  /pregameodds:
    get:
      tags:
      - Odds
      description: Returns a list of Odd Providers which have odds available for a
        given Event
      operationId: pregameoddsGET
      parameters:
      - name: from_time
        in: query
        description: Return odds for Events with start_time >= from_time. RFC 3339
          format
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to_time
        in: query
        description: Return odds for Events with start_time <= to_time. RFC 3339 format
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: X-Odd-Client
        in: header
        description: Identifies the client for which to return filtered bookmakers
          with affiliate URLs. Without the parameter can not sort odd_providers or
          provide affiliate links. Instead it will sometimes give a 'coupon' key with
          the odds fo building URLs.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Odds grouped by event id
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Odd'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Odds
  /liveodds:
    get:
      tags:
      - Odds
      description: Get a list of liveodds available in the system
      operationId: liveoddsGET
      parameters:
      - name: X-Odd-Client
        in: header
        description: Identifies the client for which to return filtered bookmakers
          with affiliate URLs. Without the parameter can not sort odd_providers or
          provide affiliate links. Instead it will sometimes give a 'coupon' key with
          the odds fo building URLs.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of liveodds grouped by event id
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Odd'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Odds
  /events/{id}/liveodds:
    get:
      tags:
      - Odds
      description: Get available liveodds for an event
      operationId: eventsIdLiveoddsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: X-Odd-Client
        in: header
        description: Identifies the client for which to return filtered bookmakers
          with affiliate URLs. Without the parameter can not sort odd_providers or
          provide affiliate links. Instead it will sometimes give a 'coupon' key with
          the odds fo building URLs.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of liveodds for an event
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Odd'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Odds
  /events/{id}/odds:
    get:
      tags:
      - Odds
      description: Get a list of odds available in the system
      operationId: eventsIdOddsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: X-Odd-Client
        in: header
        description: Identifies the client for which to return filtered bookmakers
          with affiliate URLs. Without the parameter can not sort odd_providers or
          provide affiliate links. Instead it will sometimes give a 'coupon' key with
          the odds fo building URLs.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of odds grouped by event id
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Odd'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Odds
  /odds:
    get:
      tags:
      - Odds
      description: Returns a list of Odds
      operationId: oddsGET
      parameters:
      - name: from_event_start_time
        in: query
        description: Return odds for Events with start_time >= from_event_start_time.
          RFC 3339 format
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to_event_start_time
        in: query
        description: Return odds for Events with start_time <= to_event_start_time.
          RFC 3339 format
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: odd_client
        in: query
        description: Odd client code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: team_id
        in: query
        description: Team ID
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: team_ids
        in: query
        description: List for team IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_order
        in: query
        description: Order matching events for a specific client
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sport_type
        in: query
        description: Sport type filter
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - football
      - name: match_ids
        in: query
        description: List for match IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tournament_ids
        in: query
        description: List for tournament IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: season_ids
        in: query
        description: List for season IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: event_type
        in: query
        description: Event type filter
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - match
      - name: odds_type
        in: query
        description: Pregame or live odds selector.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - prematch
          - live
          - all
      responses:
        "200":
          description: Odds grouped by event id
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Odd'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Odds
  /players:
    get:
      tags:
      - Players
      description: Search player list by parameters
      operationId: playersGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: name
        in: query
        description: Filter players by names. Length must be >= 4. The filter matches
          on a per word basis. If you query for 'Ronaldo' it will match both 'Cristiono
          Ronaldo' and 'Ronaldo'
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: max_results
        in: query
        description: Limit the number of results returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: team_id
        in: query
        description: Return only players which are currently in the specified team's
          squad
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of matching Players
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Players
  /players/{id}:
    get:
      tags:
      - Players
      description: Get information about a specific Player
      operationId: playersIdGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: expand
        in: query
        description: Specify additional information to include in the response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - club
          - "club,current_league"
      responses:
        "200":
          description: Player information
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PlayerProfile'
        "404":
          description: No Player with id found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Players
  /players/{id}/teams:
    get:
      tags:
      - Players
      description: Get the Teams in which a Player has participated during his career
      operationId: playersIdTeamsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Player information
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerTeam'
                x-content-type: application/json; charset=utf-8
        "404":
          description: No Player with specifed id found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Players
  /players/{id}/statistics:
    get:
      tags:
      - Players
      description: Returns statistics throughout a Player's career
      operationId: playersIdStatisticsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: type
        in: query
        description: Filter statistics for different types of team and competition
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - club
          - national
          - league
      - name: group_by
        in: query
        description: Group response by a given property
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - tournament
          - team
      responses:
        "200":
          description: Player statistics information
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerStatistics'
                x-content-type: application/json; charset=utf-8
        "404":
          description: No Player with specifed id found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Players
  /stages:
    get:
      tags:
      - Stages
      description: Listing for Stages resources
      operationId: stagesGET
      parameters:
      - name: team_id
        in: query
        description: Filter stages by a team which is participating in the stage
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: tournament_ids
        in: query
        description: CSV list of tournament.id values to filter stages
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of StageDTO objects matching criteria
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StageDto'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Stages
  /standing_rules:
    get:
      tags:
      - StandingRule
      description: Get a list of available StandingRule objects in the system
      operationId: standing_rulesGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of StandingRule objects available in the system
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StandingRule'
      x-swagger-router-controller: StandingRule
  /statistics/players:
    get:
      tags:
      - PlayerStatistic
      operationId: statisticsPlayersGET
      parameters:
      - name: player_ids
        in: query
        description: List for player IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: season_ids
        in: query
        description: List for season IDs separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: team_id
        in: query
        description: Return only statistics for players which are currently in the
          specified team's squad
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: language_code
        in: query
        description: Return translations depending on language code
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of player statistics
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputDto'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: PlayerStatistic
  /teams/{id}/form:
    get:
      tags:
      - Teams
      description: Get Team form information accross all tournaments
      operationId: teamsIdFormGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: expand
        in: query
        description: Whether to include information about every event in the TeamForm
          response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - events
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: List of Team Form information
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamForm'
                x-content-type: application/json; charset=utf-8
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Teams
  /countries/{id}/teams:
    get:
      tags:
      - Teams
      description: Get Teams for a specific Country.id
      operationId: countriesIdTeamsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: national
        in: query
        description: Filter teams for different types of national and non national
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "1"
          - "0"
          - "true"
          - "false"
      responses:
        "200":
          description: List of Teams from specified Country
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
                x-content-type: application/json; charset=utf-8
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Teams
  /teams/{id}:
    get:
      tags:
      - Teams
      description: Get information about a specific Team
      operationId: teamsIdGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: expand
        in: query
        description: Specifies additional information to include with the Team response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - form
          - form.events
          - "form.events,next_event"
      responses:
        "200":
          description: Team object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Team'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Teams
  /teams/{id}/players:
    get:
      tags:
      - Teams
      description: Get the current squad for a Team
      operationId: teamsIdPlayersGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: group_by
        in: query
        description: Group players by a specific property
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - position
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: List of TeamPlayer objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamPlayer'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Teams
  /teams/{id}/players/statistics:
    get:
      tags:
      - Teams
      description: Get player statistics for the current season in the Team's League
      operationId: teamsIdPlayersStatisticsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: group_by
        in: query
        description: Group the response by a specific property
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - player.position
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Player statistics grouped by TournamentSeason
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TeamPlayerSeasonStatistics'
      x-swagger-router-controller: Teams
  /teams/{id}/players/statistics/seasons:
    get:
      tags:
      - Teams
      description: Get a list of TournamentSeasons for which Player Statistics are
        available
      operationId: teamsIdPlayersStatisticsSeasonsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: List of TournamentSeasons which Player Statistics are available
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TournamentSeasonWithTournament'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Teams
  /teams/{id}/players/statistics/seasons/{seasonId}:
    get:
      tags:
      - Teams
      description: Get player statistics for the current season in the Team's League
      operationId: teamsIdPlayersStatisticsSeasonsSeasonIdGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: seasonId
        in: path
        description: Unique identifier of the TournamentSeason resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 14
      - name: group_by
        in: query
        description: Group the response by a specific property
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - player.position
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Player statistics grouped by TournamentSeason
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TeamPlayerSeasonStatistics'
      x-swagger-router-controller: Teams
  /teams/{id}/statistics/league:
    get:
      tags:
      - Teams
      description: Get the statistics for the latest League the team participates
        in
      operationId: teamsIdStatisticsLeagueGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: standing
        in: query
        description: Select whether to include a full league standing or just the
          team's position
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: full
          enum:
          - team
          - full
      responses:
        "200":
          description: Returns relevant team performance stats for the current League
            season
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TeamSeasonStatistics'
        "404":
          description: Current league for the given team not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Teams
  /teams:
    get:
      tags:
      - Teams
      description: Search all teams by parameters
      operationId: teamsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: name
        in: query
        description: Filter by team. Length must be >= 4. The filter matches on a
          per word basis. If you query for 'United' it will match both 'West Ham United'
          and 'Newcastle United'
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: max_results
        in: query
        description: Limit the number of results returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: country_id
        in: query
        description: Filter teams just from the specified country
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of matching Teams
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Teams
  /tournaments:
    get:
      tags:
      - Tournaments
      description: Get a list of available Tournament resources
      operationId: tournamentsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: country_id
        in: query
        description: Get Tournaments from a specific Country.id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: client_order
        in: query
        description: Get Tournaments ordered for a specific client
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - sportalios
      - name: expand_client_sortorder
        in: query
        description: Include extra information with Tournament response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - sportalios
      responses:
        "200":
          description: List of Tournament objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Tournaments
  /tournaments/{id}:
    get:
      tags:
      - Tournaments
      operationId: tournamentsIdGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Tournament object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TournamentWithSeasons'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/{id}/seasons:
    get:
      tags:
      - Tournaments
      description: Get a list of seasons for a given Tournament id
      operationId: tournamentsIdSeasonsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: List of TournamentSeason objects which are part of the Tournament
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TournamentSeason'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Tournaments
  /tournaments/{id}/seasons/latest:
    get:
      tags:
      - Tournaments
      description: "Get information for the latest season for a given Tournament.\
        \ This is an alias to whatever resource is first in /tournaments/{id}/seasons"
      operationId: tournamentsIdSeasonsLatestGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the Tournament resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 27
      responses:
        "200":
          description: Object giving information for the latest season of the specified
            Tournament id
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TournamentSeasonWithStages'
        "404":
          description: Indicates that the specified Tournament id does not exist or
            the Tournament has no seasons
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/{id}:
    get:
      tags:
      - Tournaments
      description: Get information for a given TournamentSeason resource id.
      operationId: tournamentsSeasonsIdGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the TournamentSeason resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 52
      responses:
        "200":
          description: Information about the specified TournamentSeason resource
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TournamentSeasonWithStages'
        "404":
          description: Indicates no TournamentSeason resource with the specified id
            is found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/{id}/topscorer:
    get:
      tags:
      - Tournaments
      description: Get a list of topscorers for a specific TournamentSeason resource.
      operationId: tournamentsSeasonsIdTopscorerGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the TournamentSeason resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 52
      responses:
        "200":
          description: List of topscorers
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopscorerStandingData'
                x-content-type: application/json; charset=utf-8
        "404":
          description: Indicates no TournamentSeason resource with the specified id
            is found or a topscorer list is currently not available for this Resource
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/{id}/cardlist:
    get:
      tags:
      - Tournaments
      description: "Get a standing by red,yellow cards for a specific TournamentSeason\
        \ resource."
      operationId: tournamentsSeasonsIdCardlistGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the TournamentSeason resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 52
      responses:
        "200":
          description: "Standing of Players based on red,yellow cards"
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardlistStandingData'
                x-content-type: application/json; charset=utf-8
        "404":
          description: Indicates no TournamentSeason resource with the specified id
            is found or no card ranking is currently not available for this Resource
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/{id}/teams:
    get:
      tags:
      - Tournaments
      - Teams
      description: "Get a list of Teams, which are participating in a given TournamentSeason"
      operationId: tournamentsSeasonsIdTeamsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the TournamentSeason resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 52
      responses:
        "200":
          description: List of participating Teams
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartialTeam'
                x-content-type: application/json; charset=utf-8
        "404":
          description: No TournamentSeason with the specified id is found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/{id}/events:
    get:
      tags:
      - Tournaments
      description: "Get a list of Events, for a given TournamentSeason"
      operationId: tournamentsSeasonsIdEventsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the TournamentSeason resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 52
      - name: group_by
        in: query
        description: Whether to group events by date
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - date
      responses:
        "200":
          description: List of events in the season
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json; charset=utf-8
        "404":
          description: No TournamentSeason with the specified id is found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/{id}/standing:
    get:
      tags:
      - Tournaments
      description: Get Standing for a TournamentSeasonStage Resource
      operationId: tournamentsSeasonsStagesIdStandingGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the TournamentSeasonStage resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 57
      - name: expand
        in: query
        description: Specify additional information to include with the response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - rules
          - "rules,form"
          - "rules,form.events"
          - form
          - form.events
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Standing information for the given TournamentSeaonStage resource
            if available
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeagueStandingData'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/{id}:
    get:
      tags:
      - Tournaments
      description: Get information for a TournamentSeasonStage Resource
      operationId: tournamentsSeasonsStagesIdGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the TournamentSeasonStage resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 57
      - name: expand
        in: query
        description: Specify additional information to include with the response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - standing
          - standing.rules
          - "standing.rules,standing.form"
          - "standing.rules,standing.form.events"
          - standing.form
          - standing.form.events
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Information about the given TournamentSeasonStage and Standing
            information (if available and requested)
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TournamentSeasonStageWithStandingGroups'
        "404":
          description: A TournamentSeasonStage resource with the specified id is not
            found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/{id}/rounds:
    get:
      tags:
      - Tournaments
      description: Get a list of rounds for a specific TournamentSeasonStage
      operationId: tournamentsSeasonsStagesIdRoundsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the TournamentSeasonStage resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 57
      - name: expand
        in: query
        description: Specify what additional information to include with the response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - events
      responses:
        "200":
          description: "List of rounds, their start and end times for a TournamentSeasonStage"
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Round'
                x-content-type: application/json; charset=utf-8
        "404":
          description: A TournamentSeasonStage resource with the specified id is not
            found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/{id}/events:
    get:
      tags:
      - Tournaments
      - Events
      description: Get a list of events which are fixtures in a given TournamentSeasonStage
        resource
      operationId: tournamentsSeasonsStagesIdEventsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the TournamentSeasonStage resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 57
      - name: round
        in: query
        description: Filter the event list by a specific round
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_direction
        in: query
        description: Sort results by date in ascending or descending order
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: asc
          enum:
          - asc
          - desc
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of events which are fixtures in a TournamentSeasonStage
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventsByDate'
                x-content-type: application/json; charset=utf-8
        "404":
          description: A TournamentSeasonStage resource with the specified id is not
            found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/{id}/teams:
    get:
      tags:
      - Tournaments
      - Teams
      description: "Get a list of Teams, which are participating in a given TournamentSeasonStage"
      operationId: tournamentsSeasonsStagesIdTeamsGET
      parameters:
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the TournamentSeasonStage resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 57
      responses:
        "200":
          description: List of participating Teams
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartialTeam'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/groups/{id}:
    get:
      tags:
      - Tournaments
      description: Get information for a StageGroup Resource
      operationId: tournamentsSeasonsStagesGroupsIdGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the StageGroup resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 313
      - name: expand
        in: query
        description: Specify additional information to include with the response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - standing
          - standing.rules
          - "standing.rules,standing.form"
          - "standing.rules,standing.form.events"
          - standing.form
          - standing.form.events
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Information about the given StageGroup and Standing information
            (if available and requested)
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/StageGroupWithStandingTournamentSeasonStage'
        "404":
          description: A StageGroup resource with the specified id is not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/groups/{id}/standing:
    get:
      tags:
      - Tournaments
      description: Get Standing for a StageGroup Resource
      operationId: tournamentsSeasonsStagesGroupsIdStandingGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the StageGroup resource
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 313
      - name: expand
        in: query
        description: Specify additional information to include with the response
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - rules
          - "rules,form"
          - "rules,form.events"
          - form
          - form.events
      - name: Accept-Language
        in: header
        description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Standing information for the given StageGroup resource if available
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeagueStandingData'
                x-content-type: application/json; charset=utf-8
        "404":
          description: A StageGroup resource with the specified id is not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Tournaments
  /tournaments/seasons/stages/active:
    get:
      tags:
      - Tournaments
      description: Get all currently active tournament season stages
      operationId: tournamentsSeasonsStagesActiveGET
      responses:
        "200":
          description: ""
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TournamentSeasonStage'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Tournaments
  /v2/assets:
    post:
      tags:
      - Assets
      description: Bulk Upsert assets
      operationId: v2AssetsPOST
      requestBody:
        description: Array of assets
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/v2_AssetInput'
        required: false
      responses:
        "200":
          description: Assets successfuly saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_Asset'
      x-codegen-request-body-name: assets
      x-swagger-router-controller: Assets
    delete:
      tags:
      - Assets
      description: Bulk delete assets
      operationId: v2AssetsDELETE
      requestBody:
        description: Array of assets
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/v2_AssetInput'
        required: false
      responses:
        "200":
          description: Assets successfully deleted.
          content: {}
      x-codegen-request-body-name: assets
      x-swagger-router-controller: Assets
  /v2/blacklist/search:
    post:
      tags:
      - Blacklist
      description: Bulk find in blacklist table and return matching entries by the
        unique blacklist key.
      operationId: v2BlacklistSearchPOST
      requestBody:
        description: Array of blacklistsKeys
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BlacklistKeyDto'
        required: false
      responses:
        "200":
          description: List of blacklist objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlacklistDto'
                x-content-type: application/json; charset=utf-8
      x-codegen-request-body-name: blacklistKeys
      x-swagger-router-controller: Blacklist
  /v2/blacklist/{id}:
    delete:
      tags:
      - Blacklist
      summary: Remove the specified resource from storage.
      description: Remove blacklist record by id.
      operationId: v2BlacklistIdDELETE
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "204":
          description: Blacklist deleted
          content: {}
        "404":
          description: No Blacklist with id found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Blacklist
  /v2/cities:
    post:
      tags:
      - Cities
      description: Store a newly created city in storage
      operationId: v2CitiesPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityEditDto'
        required: false
      responses:
        "200":
          description: "City successfuly saved, returns city information"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CityDto'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: city
      x-swagger-router-controller: Cities
  /v2/cities/{id}:
    put:
      tags:
      - Cities
      description: Update city information
      operationId: v2CitiesIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: City information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityEditDto'
        required: false
      responses:
        "200":
          description: Updated city object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityDto'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: city
      x-swagger-router-controller: Cities
  /v2/coaches:
    get:
      tags:
      - Coaches
      description: List coaches with offset and limit parameters
      operationId: v2CoachesGET
      parameters:
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of results returned
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of coaches
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CoachPageDto'
      x-swagger-router-controller: Coaches
    post:
      tags:
      - Coaches
      description: Store a newly created coach in storage
      operationId: v2CoachesPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachEditDto'
        required: false
      responses:
        "200":
          description: "Coach successfuly saved, returns coach information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachDto'
      x-codegen-request-body-name: coach
      x-swagger-router-controller: Coaches
  /v2/coaches/{id}:
    get:
      tags:
      - Coaches
      description: Find coach by id
      operationId: v2CoachesIdGET
      parameters:
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Coach data
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoachDto'
                x-content-type: application/json; charset=utf-8
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Coaches
    put:
      tags:
      - Coaches
      description: Update coach information
      operationId: v2CoachesIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Coach information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachEditDto'
        required: false
      responses:
        "200":
          description: Updated coach object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachDto'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: coach
      x-swagger-router-controller: Coaches
  /v2/knockout-schemes/{stage_id}:
    get:
      tags:
      - Knockout Scheme
      operationId: v2Knockout_schemesStage_idGET
      parameters:
      - name: stage_id
        in: path
        description: Get knockout schemes for given stage id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of knockout schemes if any are found for the ID.
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v2_KnockoutScheme'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: KnockoutScheme
  /v2/languages:
    get:
      tags:
      - Languages
      description: Get all possible languages.
      operationId: v2LanguagesGET
      responses:
        "200":
          description: List of language objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageDto'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Languages
  /v2/matches/{id}/lineups:
    get:
      tags:
      - Lineups
      description: Get lineups by match id
      operationId: v2MatchesIdLineupsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Lineups data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_Lineup'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Lineups
    put:
      tags:
      - Lineups
      description: Update Lineup information
      operationId: v2MatchesIdLineupsPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Lineup information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_LineupInput'
        required: true
      responses:
        "200":
          description: Lineup successfuly saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_Lineup'
        "404":
          description: No Lineup with id found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: lineup
      x-swagger-router-controller: Lineups
  /v2/matches/{id}:
    get:
      tags:
      - Matches
      operationId: v2MatchesIdGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Match object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_Match'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Matches
    put:
      tags:
      - Matches
      operationId: v2MatchesIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Match information to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_MatchInput'
        required: true
      responses:
        "200":
          description: Match object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_Match'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: match
      x-swagger-router-controller: Matches
  /v2/matches:
    get:
      tags:
      - Matches
      description: Get a list of matches
      operationId: v2MatchesGET
      parameters:
      - name: tournament_ids
        in: query
        description: "Filter matches, which have been played as part of the listed\
          \ tournaments"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: season_ids
        in: query
        description: "Filter matches, which have been played as part of the listed\
          \ tournament seasons"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: stage_ids
        in: query
        description: "Filter matches, which have been played as part of the listed\
          \ tournament stages"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: group_ids
        in: query
        description: "Filter matches, which have been played as part of the listed\
          \ tournament groups"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: round_ids
        in: query
        description: "Filter matches, which have been played as part of the listed\
          \ tournament rounds"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: round_filter
        in: query
        description: "Filter matches by combinations of stage_id and round_id. Format:\
          \ {stage_id}:{round_id}"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: from_kickoff_time
        in: query
        description: "Filter matches, which have a start_time after the specified\
          \ date, format is ISO 8601"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to_kickoff_time
        in: query
        description: "Filter matches, which have a start_time before the specified\
          \ date, format is ISO 8601"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: team_ids
        in: query
        description: Filter matches by teams which have taken part in them
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: status_types
        in: query
        description: Filter matches by their status types
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: status_codes
        in: query
        description: Filter matches by their status codes
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: referee_id
        in: query
        description: Filter matches by the referee who has taken part in them
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: venue_id
        in: query
        description: Filter matches by the venue that has hosted them
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort_direction
        in: query
        description: Sort matches in asc|desc order by start_time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Select an upper limit for the matches that would be returned
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Select an offset for the matches that would be returned
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of match objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v2_Match'
                x-content-type: application/json; charset=utf-8
        "400":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Matches
    post:
      tags:
      - Matches
      operationId: v2MatchesPOST
      requestBody:
        description: Match information to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_MatchInput'
        required: true
      responses:
        "200":
          description: Match object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_Match'
      x-codegen-request-body-name: match
      x-swagger-router-controller: Matches
  /v2/matches/livescore:
    get:
      tags:
      - Matches
      description: Get a list of matches
      operationId: v2MatchesLivescoreGET
      parameters:
      - name: match_ids
        in: query
        description: Filter matches by their IDs
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: date
        in: query
        description: "Filter matches by the date when they were played, format is\
          \ ISO 8601"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: utc_offset
        in: query
        description: "Filter matches by date and UTC offset, allowed value range:\
          \ [-12,14]"
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: tournament_group
        in: query
        description: Filter matches by a tournament group code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status_types
        in: query
        description: Filter matches by status types
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - FINISHED
            - NOT_STARTED
            - LIVE
            - INTERRUPTED
            - CANCELLED
            - UNKNOWN
      - name: selection_filter
        in: query
        description: Fetch selected matches for specific date and tournament_group
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ENABLED
          enum:
          - ENABLED
          - DISABLED
      responses:
        "200":
          description: List of match objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v2_Match'
                x-content-type: application/json; charset=utf-8
        "400":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Matches
  /v2/matches/{id}/events:
    get:
      tags:
      - MatchEvents
      description: Get match events by match id
      operationId: v2MatchesIdEventsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: list of events for given match
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_MatchEventProfile'
      x-swagger-router-controller: MatchEvents
    put:
      tags:
      - MatchEvents
      description: Replaces all match events with the given input
      operationId: v2MatchesIdEventsPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Match event information to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_MatchEventInputWrapper'
        required: true
      responses:
        "200":
          description: list of events for given match
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_MatchEventProfile'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: matchEvents
      x-swagger-router-controller: MatchEvents
  /v2/players:
    get:
      tags:
      - Players
      description: Search player list by parameters
      operationId: v2PlayersGET
      parameters:
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of results returned
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of matching Players and meta data.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PlayerPageDto'
      x-swagger-router-controller: Players
    post:
      tags:
      - Players
      description: Store a newly created player in storage.
      operationId: v2PlayersPOST
      requestBody:
        description: PlayerEditDto object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerEditDto'
        required: false
      responses:
        "200":
          description: "Player successfuly saved, returns Player information"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PlayerDto'
      x-codegen-request-body-name: player
      x-swagger-router-controller: Players
  /v2/players/{id}:
    get:
      tags:
      - Players
      description: Get player by id
      operationId: v2PlayersIdGET
      parameters:
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Player data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_PlayerProfile'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Players
    put:
      tags:
      - Players
      description: Update Player information
      operationId: v2PlayersIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Player information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerEditDto'
        required: true
      responses:
        "200":
          description: Player successfuly saved
          content: {}
        "404":
          description: No Player with id found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: player
      x-swagger-router-controller: Players
  /v2/players/{id}/clubs/active:
    put:
      tags:
      - Players
      description: Update the active clubs of a player
      operationId: v2PlayersIdClubsActivePUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Active clubs input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_ActiveClubsInput'
        required: false
      responses:
        "200":
          description: Updated active clubs
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v2_PlayerActiveClub'
                x-content-type: application/json; charset=utf-8
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: clubs
      x-swagger-router-controller: Players
  /v2/statistics/players/match:
    put:
      tags:
      - PlayerStatistic
      description: Bulk Upsert player statistics
      operationId: v2StatisticsPlayersMatchPUT
      requestBody:
        description: Array of player match statistics
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/v2_PlayerStatisticInput'
        required: false
      responses:
        "200":
          description: Player Statistics successfuly saved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v2_PlayerStatisticOutput'
                x-content-type: application/json
        "404":
          description: No entity with id found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: player_statistics
      x-swagger-router-controller: PlayerStatistic
  /v2/statistics/players/season:
    get:
      tags:
      - PlayerStatistic
      description: "Retrieve player statistics, grouped by player and season"
      operationId: v2StatisticsPlayersSeasonGET
      parameters:
      - name: player_ids
        in: query
        description: CSV list of player id values
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: season_ids
        in: query
        description: CSV list of tournament season id values
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: team_id
        in: query
        description: Team unique identifier
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Player Statistics successfuly retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v2_PlayerSeasonStatisticOutputCollection'
                x-content-type: application/json
      x-swagger-router-controller: PlayerStatistic
  /v2/presidents:
    post:
      tags:
      - Presidents
      description: Store a newly created president in storage
      operationId: v2PresidentsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_PresidentInput'
        required: false
      responses:
        "200":
          description: "President successfuly saved, returns president information"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_President'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: president
      x-swagger-router-controller: Presidents
  /v2/presidents/{id}:
    put:
      tags:
      - Presidents
      description: Update president information
      operationId: v2PresidentsIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: President information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_PresidentUpdate'
        required: false
      responses:
        "200":
          description: Updated president object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_President'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: president
      x-swagger-router-controller: Presidents
  /v2/mappings/search:
    post:
      tags:
      - ProviderMappings
      description: Bulk find provider to internal ID mappings by their provider ID
        and entity type.
      operationId: v2MappingsSearchPOST
      requestBody:
        description: Data entity provider name and array of mapping requests
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mappings_search_body'
        required: false
      responses:
        "200":
          description: List of mapping objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v2_MappingDto'
                x-content-type: application/json; charset=utf-8
        "400":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: mapping_request
      x-swagger-router-controller: ProviderMappings
  /v2/referees:
    get:
      tags:
      - Referees
      description: List referees with offset and limit parameters
      operationId: v2RefereesGET
      parameters:
      - name: season_ids
        in: query
        description: Filter referees which have refereed matches in the specified
          CSV season_ids
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of results returned
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of referees
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RefereePageDto'
      x-swagger-router-controller: Referees
    post:
      tags:
      - Referees
      description: Store a newly created referee in storage
      operationId: v2RefereesPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefereeEditDto'
        required: false
      responses:
        "200":
          description: "Referee successfuly saved, returns referee information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefereeDto'
      x-codegen-request-body-name: referee
      x-swagger-router-controller: Referees
  /v2/referees/{id}:
    get:
      tags:
      - Referees
      description: Get referee by id
      operationId: v2RefereesIdGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Referee data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RefereeDto'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Referees
    put:
      tags:
      - Referees
      description: Update referee information
      operationId: v2RefereesIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Referee information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefereeEditDto'
        required: false
      responses:
        "200":
          description: Updated referee object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefereeDto'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: referee
      x-swagger-router-controller: Referees
  /v2/rounds:
    get:
      tags:
      - Rounds
      description: Get a list of rounds per season
      operationId: v2RoundsGET
      parameters:
      - name: season_id
        in: query
        description: Filter round types per a season ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Round types object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_RoundTypes'
        "400":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Rounds
  /v2/stages/{id}/rounds:
    get:
      tags:
      - Rounds
      description: Get a list of rounds per stage
      operationId: v2StagesIdRoundsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Round types object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_RoundTypes'
        "400":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Rounds
  /v2/seasons:
    get:
      tags:
      - Season
      description: "Get seasons by tournament_id, team_id and status"
      operationId: v2SeasonsGET
      parameters:
      - name: tournament_id
        in: query
        description: Required only if no other parameters are provided
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: team_id
        in: query
        description: Required only if no other paramenters are provided
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Required only if no other parameters are provided
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ACTIVE
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Seasons details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_SeasonList'
      x-swagger-router-controller: Season
    post:
      tags:
      - Season
      description: Create a new season
      operationId: v2SeasonsPOST
      requestBody:
        description: Season information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TournamentSeasonInsertInput'
        required: true
      responses:
        "200":
          description: Seasons details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_Season'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: Resource already exists
          content: {}
      x-codegen-request-body-name: season
      x-swagger-router-controller: Season
  /v2/seasons/{id}:
    put:
      tags:
      - Season
      description: Update an existing season
      operationId: v2SeasonsIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Season name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TournamentSeasonUpdateInput'
        required: true
      responses:
        "200":
          description: Seasons details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_Season'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: Resource already exists
          content: {}
      x-codegen-request-body-name: name
      x-swagger-router-controller: Season
  /v2/tournaments/{id}/seasons/current:
    patch:
      tags:
      - Season
      description: Set the current season as active and change all other seasons in
        the tournament to inactive
      operationId: v2TournamentsIdSeasonsCurrentPATCH
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Season unique identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TournamentSeasonStatusInput'
        required: true
      responses:
        "200":
          description: Seasons details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_Season'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: Season not part of tournament
          content: {}
      x-codegen-request-body-name: season_id
      x-swagger-router-controller: Season
  /v2/seasons/details:
    get:
      tags:
      - Season
      description: "Get the details of a season by season_id, or by tournament_id\
        \ and active status"
      operationId: v2SeasonsDetailsGET
      parameters:
      - name: season_id
        in: query
        description: The ID of the season of interest
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tournament_id
        in: query
        description: The ID of the tournament whose active season is of interest
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Required only when the tournament_id parameter is provided
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CURRENT
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Seasons details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_SeasonDetails'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "422":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Season
  /v2/seasons/{id}/stages:
    get:
      tags:
      - Season
      description: List all stages for specific season
      operationId: v2SeasonsIdStagesGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Stages successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_SeasonStageCollection'
        "404":
          description: Season not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Season
    post:
      tags:
      - Season
      description: Create or update multiple stages
      operationId: v2SeasonsIdStagesPOST
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: List of stages to be updated or created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/v2_SeasonStage'
        required: true
      responses:
        "200":
          description: Stages successfully created/updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_SeasonStageCollection'
        "404":
          description: Season or stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: "Season has enetpulse mapping | Duplicate parameter (name,\
            \ order_in_season) | Duplicate item"
          content: {}
      x-codegen-request-body-name: stages
      x-swagger-router-controller: Season
  /v2/stages/{id}:
    delete:
      tags:
      - Season
      description: Permanently delete stage
      operationId: v2StagesIdDELETE
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Stage successfully deleted
          content: {}
        "400":
          description: Stage has enetpulse mapping | Stage has match link
          content: {}
        "404":
          description: Stage not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Season
  /v2/stages/{id}/groups:
    get:
      tags:
      - Stages
      description: List all groups for specific stage
      operationId: v2StagesIdGroupsGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Groups successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_StageGroupCollection'
        "404":
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Stages
    post:
      tags:
      - Stages
      description: Create or update multiple groups
      operationId: v2StagesIdGroupsPOST
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: List of groups to be updated or created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/v2_StageGroup'
        required: true
      responses:
        "200":
          description: Groups successfully created/updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_StageGroupCollection'
        "404":
          description: Stage or group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: Stage has enetpulse mapping | Duplicate item
          content: {}
      x-codegen-request-body-name: groups
      x-swagger-router-controller: Stages
  /v2/groups/{id}:
    delete:
      tags:
      - Stages
      description: Permanently delete group
      operationId: v2GroupsIdDELETE
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Group successfully deleted
          content: {}
        "400":
          description: Group has enetpulse mapping | Group has match link
          content: {}
        "404":
          description: Group not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Stages
  /v2/stages/{id}/teams:
    put:
      tags:
      - Stages
      description: Replace teams in stage
      operationId: v2StagesIdTeamsPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: List of team ids
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/v2_StageTeamInput'
        required: true
      responses:
        "204":
          description: Teams in stage successfully replaced
          content: {}
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: Resource already exists
          content: {}
      x-codegen-request-body-name: team_id
      x-swagger-router-controller: Stages
  /v2/standings/league/{entity}/{id}:
    put:
      tags:
      - Standings
      description: Update a league standing table
      operationId: v2StandingsLeagueEntityIdPUT
      parameters:
      - name: entity
        in: path
        description: type of entity to attach standing to
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - season
          - stage
          - group
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: List of all entries for the standing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_LeagueStandingInput'
        required: true
      responses:
        "204":
          description: Standing saved
          content: {}
      x-codegen-request-body-name: standingEntries
      x-swagger-router-controller: Standings
  /v2/standings/topscorer/{entity}/{id}:
    put:
      tags:
      - Standings
      description: Update a topscorer standing table
      operationId: v2StandingsTopscorerEntityIdPUT
      parameters:
      - name: entity
        in: path
        description: type of entity to attach standing to
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - season
          - stage
          - group
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: List of all entries for the standing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TopScorerStandingInput'
        required: true
      responses:
        "204":
          description: Standing saved
          content: {}
      x-codegen-request-body-name: standingEntries
      x-swagger-router-controller: Standings
  /v2/standings/league/{entity}/{id}/rules:
    put:
      tags:
      - Standings
      description: Attach standing rules to a league standing
      operationId: v2StandingsLeagueEntityIdRulesPUT
      parameters:
      - name: entity
        in: path
        description: type of entity to attach standing to
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - season
          - stage
          - group
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: list of rules for every rank
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_StandingEntryRuleWrapper'
        required: true
      responses:
        "204":
          description: Standing rules saved
          content: {}
      x-codegen-request-body-name: standingRules
      x-swagger-router-controller: Standings
  /v2/teams:
    get:
      tags:
      - Teams
      description: Get teams list
      operationId: v2TeamsGET
      parameters:
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of results returned
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of matching teams and meta data.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TeamPageDto'
      x-swagger-router-controller: Teams
    post:
      tags:
      - Teams
      description: Manually insert team.
      operationId: v2TeamsPOST
      requestBody:
        description: TeamEditDto object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamEditDto'
        required: false
      responses:
        "200":
          description: Team data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_TeamProfile'
      x-codegen-request-body-name: teamEditDto
      x-swagger-router-controller: Teams
  /v2/teams/{id}:
    get:
      tags:
      - Teams
      description: Get team by id
      operationId: v2TeamsIdGET
      parameters:
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Team data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_TeamProfile'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Teams
    put:
      tags:
      - Teams
      description: Update Team information
      operationId: v2TeamsIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Team information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamEditDto'
        required: true
      responses:
        "200":
          description: Team successfuly saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_TeamProfile'
        "404":
          description: No Team with id found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: team
      x-swagger-router-controller: Teams
  /v2/teams/colors:
    post:
      tags:
      - Teams
      description: Manually insert team colors by team or event.
      operationId: v2TeamsColorsPOST
      requestBody:
        description: Team shirt colors data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TeamColors'
        required: false
      responses:
        "200":
          description: Team shirt colors data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_TeamColors'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: teamColorsDto
      x-swagger-router-controller: Teams
  /v2/teams/{id}/squad:
    get:
      tags:
      - TeamSquad
      description: Get teams squad
      operationId: v2TeamsIdSquadGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: memberStatus
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ALL
          enum:
          - ALL
          - ACTIVE
          - INACTIVE
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Team Squad details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_TeamSquad'
      x-swagger-router-controller: TeamSquad
    patch:
      tags:
      - TeamSquad
      description: Update TeamSquad members
      operationId: v2TeamsIdSquadPATCH
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: TeamSquad members to update. Null value for a property means
          no update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TeamSquadInput'
        required: true
      responses:
        "200":
          description: Squad successfuly saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_TeamSquad'
      x-codegen-request-body-name: squadMembers
      x-swagger-router-controller: TeamSquad
  /v2/tournaments/groups:
    get:
      tags:
      - TournamentGroups
      description: List all tournament groups
      operationId: v2TournamentsGroupsGET
      responses:
        "200":
          description: Tournament groups successfully retrieved
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_TournamentGroupCollection'
      x-swagger-router-controller: TournamentGroups
    post:
      tags:
      - TournamentGroups
      description: Create a new tournament group
      operationId: v2TournamentsGroupsPOST
      requestBody:
        description: Tournament group information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TournamentGroupInsertInput'
        required: true
      responses:
        "200":
          description: Tournament group successfully created
          content: {}
        "404":
          description: Tournament not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: Tournament group with code/name already exists
          content: {}
      x-codegen-request-body-name: group
      x-swagger-router-controller: TournamentGroups
  /v2/tournaments/groups/{code}:
    get:
      tags:
      - TournamentGroups
      description: List all tournaments for a given group name and their order
      operationId: v2TournamentsGroupsCodeGET
      parameters:
      - name: code
        in: path
        description: Tournament group code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: All tournaments for a given group successfully retrieved
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_TournamentGroupGetOutput'
        "404":
          description: Tournament group not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: TournamentGroups
    put:
      tags:
      - TournamentGroups
      description: Update an existing tournament group
      operationId: v2TournamentsGroupsCodePUT
      parameters:
      - name: code
        in: path
        description: Tournament group unique code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Tournament group information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_TournamentGroupUpdateInput'
        required: true
      responses:
        "200":
          description: Tournament group successfully updated
          content: {}
        "404":
          description: Tournament not found | Tournament group not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "400":
          description: Tournament group with name already exists
          content: {}
      x-codegen-request-body-name: group
      x-swagger-router-controller: TournamentGroups
  /v2/tournaments/groups/{code}/selection/{date}:
    post:
      tags:
      - TournamentGroups
      operationId: v2TournamentsGroupsCodeSelectionDatePOST
      parameters:
      - name: code
        in: path
        description: Client code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: date
        in: path
        description: Date in ISO 8601 format (Y-m-d)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: date
      requestBody:
        description: Array of match ids
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/v2_TournamentGroupSelection'
        required: false
      responses:
        "204":
          description: Tournament group selection successfully inserted
          content: {}
        "400":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: match_ids
      x-swagger-router-controller: TournamentGroups
  /v2/translations:
    post:
      tags:
      - Translations
      description: Bulk Upsert translations by primary key
      operationId: v2TranslationsPOST
      requestBody:
        description: Array of translations
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TranslationDto'
        required: false
      responses:
        "200":
          description: "Translations successfuly saved, returns translations information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationDto'
      x-codegen-request-body-name: translations
      x-swagger-router-controller: Translations
  /v2/translations/search:
    post:
      tags:
      - Translations
      description: Bulk find in translations table and return matching entries by
        the unique translation key.
      operationId: v2TranslationsSearchPOST
      requestBody:
        description: Array of translationKeys
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TranslationKeyDto'
        required: false
      responses:
        "200":
          description: List of translation objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslationDto'
                x-content-type: application/json; charset=utf-8
      x-codegen-request-body-name: translationKeys
      x-swagger-router-controller: Translations
  /v2/translations/entities:
    get:
      tags:
      - Translations
      description: Get all possible translation entities.
      operationId: v2TranslationsEntitiesGET
      responses:
        "200":
          description: List of translation entities objects
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslationEntityDto'
                x-content-type: application/json; charset=utf-8
      x-swagger-router-controller: Translations
  /v2/venues:
    get:
      tags:
      - Venues
      description: List venues with offset and limit parameters
      operationId: v2VenuesGET
      parameters:
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of results returned
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: season_ids
        in: query
        description: Filter venues which have hosted matches in the specified CSV
          season_ids
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: List of venues
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_VenuesList'
      x-swagger-router-controller: Venues
    post:
      tags:
      - Venues
      description: Store a newly created venue in storage
      operationId: v2VenuesPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_post_venues'
        required: false
      responses:
        "200":
          description: "Venue successfuly saved, returns venue information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_Venues'
      x-codegen-request-body-name: venue
      x-swagger-router-controller: Venues
  /v2/venues/{id}:
    get:
      tags:
      - Venues
      description: Get venue by id
      operationId: v2VenuesIdGET
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: language_code
        in: query
        description: Returns translated response based on the language code
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: en
      responses:
        "200":
          description: Venue data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/v2_VenuesGetId'
        "404":
          description: Resource not found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-swagger-router-controller: Venues
    put:
      tags:
      - Venues
      description: Update venue information
      operationId: v2VenuesIdPUT
      parameters:
      - name: id
        in: path
        description: Unique identifier of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Venue information to save in persistance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2_put_venues'
        required: false
      responses:
        "200":
          description: "Venue successfuly saved, returns venue information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2_VenuesPut'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-codegen-request-body-name: venue
      x-swagger-router-controller: Venues
components:
  schemas:
    v2_LeagueStandingInput:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/v2_LeagueEntryInput'
    v2_TopScorerStandingInput:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/v2_TopScorerEntryInput'
    v2_StandingEntryRuleWrapper:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/v2_StandingEntryRuleInput'
    NotFoundError:
      type: object
      properties:
        message:
          type: string
          example: Resource with identifier 1 not found.
    v2_AssetDeleteInput:
      type: object
      properties:
        entity:
          type: string
        entity_id:
          type: string
        type:
          type: string
        context_type:
          type: string
        context_id:
          type: string
    v2_AssetInput:
      type: object
      properties:
        entity:
          type: string
        entity_id:
          type: string
        type:
          type: string
        path:
          type: string
        context_type:
          type: string
        context_id:
          type: string
    v2_AssetCollection:
      type: object
    v2_Asset:
      type: object
      properties:
        entity:
          type: string
        entity_id:
          type: string
        type:
          type: string
        path:
          type: string
        context_type:
          type: string
        context_id:
          type: string
      example:
        path: path
        context_type: context_type
        context_id: context_id
        entity_id: entity_id
        type: type
        entity: entity
    BlacklistDto:
      type: object
      properties:
        id:
          type: string
        key:
          $ref: '#/components/schemas/BlacklistKeyDto'
      example:
        id: id
        key:
          context: context
          type: TRANSLATION
          entity_id: entity_id
          entity: TEAM
    BlacklistKeyDto:
      type: object
      properties:
        type:
          type: string
          enum:
          - TRANSLATION
          - ASSET
          - RELATION
          - ENTITY
        entity:
          type: string
          enum:
          - TEAM
          - TOURNAMENT
          - SEASON
          - GROUP
          - STAGE
          - COUNTRY
          - PLAYER
          - COACH
          - LINEUP_PLAYER_TYPE
          - MATCH_STATUS
          - VENUE
          - REFEREE
          - CITY
          - PRESIDENT
          - LINEUP
          - MATCH
          - ASSET
          - STANDING_RULE
          - ROUND_TYPE
        entity_id:
          type: string
        context:
          type: string
      example:
        context: context
        type: TRANSLATION
        entity_id: entity_id
        entity: TEAM
    CityDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryDto'
      example:
        country:
          code: code
          name: name
          id: id
        name: name
        id: id
    CityEditDto:
      type: object
      properties:
        name:
          type: string
        country_id:
          type: string
    v2_City:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
      example:
        country: null
        name: name
        id: id
    CoachDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryDto'
        birthdate:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        country:
          code: code
          name: name
          id: id
        birthdate: birthdate
        gender: MALE
        name: name
        id: 0
    CoachEditDto:
      type: object
      properties:
        name:
          type: string
        country_id:
          type: string
        birthdate:
          type: string
          format: date
    CoachPageDto:
      type: object
      properties:
        coaches:
          type: array
          items:
            $ref: '#/components/schemas/CoachDto'
        page_meta:
          $ref: '#/components/schemas/PageMetaDto'
      example:
        coaches:
        - country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          gender: MALE
          name: name
          id: 0
        - country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          gender: MALE
          name: name
          id: 0
        page_meta:
          total: 6
          offset: 1
          limit: 5
    v2_Coach:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
        birthdate:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        country:
          code: code
          name: name
          id: id
        birthdate: birthdate
        gender: MALE
        name: name
        id: id
    CountryDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
      example:
        code: code
        name: name
        id: id
    v2_Country:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
      example:
        code: code
        name: name
        id: id
    v2_StageGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        order_in_stage:
          type: integer
    v2_Group:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        order_in_stage:
          type: integer
      example:
        name: name
        order_in_stage: 0
        id: id
    v2_StageGroupCollection:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v2_Group'
      example:
        groups:
        - name: name
          order_in_stage: 0
          id: id
        - name: name
          order_in_stage: 0
          id: id
    v2_KnockoutEdgeRound:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    v2_KnockoutGroup:
      type: object
      properties:
        id:
          type: string
        order:
          type: integer
        teams:
          type: array
          items:
            $ref: '#/components/schemas/v2_KnockoutTeam'
        matches:
          type: array
          items:
            $ref: '#/components/schemas/v2_KnockoutMatch'
        child_object_id:
          type: string
      example:
        teams:
        - three_letter_code: three_letter_code
          gender: gender
          name: name
          id: id
          type: type
        - three_letter_code: three_letter_code
          gender: gender
          name: name
          id: id
          type: type
        child_object_id: child_object_id
        id: id
        matches:
        - score:
            total:
              away: 5
              home: 1
            half_time: null
            penalty_shootout: null
            regular_time: null
            extra_time: null
            aggregate: null
          home_team_id: home_team_id
          kickoff_time: 2000-01-23T04:56:07.000+00:00
          id: id
          away_team_id: away_team_id
        - score:
            total:
              away: 5
              home: 1
            half_time: null
            penalty_shootout: null
            regular_time: null
            extra_time: null
            aggregate: null
          home_team_id: home_team_id
          kickoff_time: 2000-01-23T04:56:07.000+00:00
          id: id
          away_team_id: away_team_id
        order: 6
    v2_KnockoutMatch:
      type: object
      properties:
        id:
          type: string
        kickoff_time:
          type: string
          format: date-time
        score:
          $ref: '#/components/schemas/v2_MatchScore'
        home_team_id:
          type: string
        away_team_id:
          type: string
      example:
        score:
          total:
            away: 5
            home: 1
          half_time: null
          penalty_shootout: null
          regular_time: null
          extra_time: null
          aggregate: null
        home_team_id: home_team_id
        kickoff_time: 2000-01-23T04:56:07.000+00:00
        id: id
        away_team_id: away_team_id
    v2_KnockoutRound:
      type: object
      properties:
        name:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v2_KnockoutGroup'
      example:
        name: name
        groups:
        - teams:
          - three_letter_code: three_letter_code
            gender: gender
            name: name
            id: id
            type: type
          - three_letter_code: three_letter_code
            gender: gender
            name: name
            id: id
            type: type
          child_object_id: child_object_id
          id: id
          matches:
          - score:
              total:
                away: 5
                home: 1
              half_time: null
              penalty_shootout: null
              regular_time: null
              extra_time: null
              aggregate: null
            home_team_id: home_team_id
            kickoff_time: 2000-01-23T04:56:07.000+00:00
            id: id
            away_team_id: away_team_id
          - score:
              total:
                away: 5
                home: 1
              half_time: null
              penalty_shootout: null
              regular_time: null
              extra_time: null
              aggregate: null
            home_team_id: home_team_id
            kickoff_time: 2000-01-23T04:56:07.000+00:00
            id: id
            away_team_id: away_team_id
          order: 6
        - teams:
          - three_letter_code: three_letter_code
            gender: gender
            name: name
            id: id
            type: type
          - three_letter_code: three_letter_code
            gender: gender
            name: name
            id: id
            type: type
          child_object_id: child_object_id
          id: id
          matches:
          - score:
              total:
                away: 5
                home: 1
              half_time: null
              penalty_shootout: null
              regular_time: null
              extra_time: null
              aggregate: null
            home_team_id: home_team_id
            kickoff_time: 2000-01-23T04:56:07.000+00:00
            id: id
            away_team_id: away_team_id
          - score:
              total:
                away: 5
                home: 1
              half_time: null
              penalty_shootout: null
              regular_time: null
              extra_time: null
              aggregate: null
            home_team_id: home_team_id
            kickoff_time: 2000-01-23T04:56:07.000+00:00
            id: id
            away_team_id: away_team_id
          order: 6
    v2_KnockoutScheme:
      type: object
      properties:
        start_round:
          $ref: '#/components/schemas/v2_KnockoutEdgeRound'
        end_round:
          $ref: '#/components/schemas/v2_KnockoutEdgeRound'
        small_final:
          type: boolean
        stage:
          $ref: '#/components/schemas/v2_MatchStage'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/v2_KnockoutRound'
      example:
        start_round:
          name: name
        small_final: true
        stage:
          end_date: 2000-01-23
          coverage: coverage
          name: name
          id: id
          type: GROUP
          order_in_season: 0
          start_date: 2000-01-23
          status: ACTIVE
        end_round: null
        rounds:
        - name: name
          groups:
          - teams:
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            child_object_id: child_object_id
            id: id
            matches:
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            order: 6
          - teams:
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            child_object_id: child_object_id
            id: id
            matches:
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            order: 6
        - name: name
          groups:
          - teams:
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            child_object_id: child_object_id
            id: id
            matches:
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            order: 6
          - teams:
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            - three_letter_code: three_letter_code
              gender: gender
              name: name
              id: id
              type: type
            child_object_id: child_object_id
            id: id
            matches:
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            - score:
                total:
                  away: 5
                  home: 1
                half_time: null
                penalty_shootout: null
                regular_time: null
                extra_time: null
                aggregate: null
              home_team_id: home_team_id
              kickoff_time: 2000-01-23T04:56:07.000+00:00
              id: id
              away_team_id: away_team_id
            order: 6
    v2_KnockoutTeam:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        three_letter_code:
          type: string
        gender:
          type: string
        type:
          type: string
      example:
        three_letter_code: three_letter_code
        gender: gender
        name: name
        id: id
        type: type
    LanguageDto:
      type: object
      properties:
        code:
          type: string
      example:
        code: code
    v2_LineupInput:
      type: object
      properties:
        status:
          type: string
          enum:
          - CONFIRMED
          - UNCONFIRMED
        home_team:
          $ref: '#/components/schemas/v2_LineupTeamInput'
        away_team:
          $ref: '#/components/schemas/v2_LineupTeamInput'
    v2_LineupPlayerInput:
      type: object
      properties:
        type_id:
          type: string
        player_id:
          type: string
        position_x:
          type: integer
        position_y:
          type: integer
        shirt_number:
          type: integer
    v2_LineupTeamInput:
      type: object
      properties:
        formation:
          type: string
        coach_id:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/v2_LineupPlayerInput'
    v2_Lineup:
      type: object
      properties:
        match_id:
          type: string
        status:
          type: string
          enum:
          - CONFIRMED
          - UNCONFIRMED
          - NOT_AVAILABLE
        home_team:
          $ref: '#/components/schemas/v2_LineupTeamDto'
        away_team:
          $ref: '#/components/schemas/v2_LineupTeamDto'
      example:
        match_id: match_id
        home_team:
          players:
          - position_x: 0
            position_y: 6
            type: {}
            shirt_number: 1
            player:
              country: null
              birthdate: birthdate
              birth_city:
                country: null
                name: name
                id: id
              gender: MALE
              social:
                wikipedia_id: wikipedia_id
                web: web
                youtube_channel_id: youtube_channel_id
                twitter_id: twitter_id
                facebook_id: facebook_id
                instagram_id: instagram_id
              profile:
                weight: weight
                height: height
              name: name
              active: true
              id: id
              position: position
          - position_x: 0
            position_y: 6
            type: {}
            shirt_number: 1
            player:
              country: null
              birthdate: birthdate
              birth_city:
                country: null
                name: name
                id: id
              gender: MALE
              social:
                wikipedia_id: wikipedia_id
                web: web
                youtube_channel_id: youtube_channel_id
                twitter_id: twitter_id
                facebook_id: facebook_id
                instagram_id: instagram_id
              profile:
                weight: weight
                height: height
              name: name
              active: true
              id: id
              position: position
          formation: formation
          team_id: team_id
          coach:
            country:
              code: code
              name: name
              id: id
            birthdate: birthdate
            gender: MALE
            name: name
            id: id
        status: CONFIRMED
        away_team: null
    v2_LineupPlayerDto:
      type: object
      properties:
        type:
          type: object
        player:
          $ref: '#/components/schemas/v2_Player'
        position_x:
          type: integer
        position_y:
          type: integer
        shirt_number:
          type: integer
      example:
        position_x: 0
        position_y: 6
        type: {}
        shirt_number: 1
        player:
          country: null
          birthdate: birthdate
          birth_city:
            country: null
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            youtube_channel_id: youtube_channel_id
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          profile:
            weight: weight
            height: height
          name: name
          active: true
          id: id
          position: position
    v2_LineupTeamDto:
      type: object
      properties:
        formation:
          type: string
        coach:
          $ref: '#/components/schemas/v2_Coach'
        team_id:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/v2_LineupPlayerDto'
      example:
        players:
        - position_x: 0
          position_y: 6
          type: {}
          shirt_number: 1
          player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
        - position_x: 0
          position_y: 6
          type: {}
          shirt_number: 1
          player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
        formation: formation
        team_id: team_id
        coach:
          country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          gender: MALE
          name: name
          id: id
    LiveCommentaryOutputDto:
      type: object
      properties:
        type:
          type: string
        template_text:
          type: string
        auto_text:
          type: string
        elapsed:
          type: integer
        details:
          type: array
          items:
            type: object
            properties: {}
            example: {}
        incident_timestamp:
          type: string
          format: date-time
      example:
        elapsed: 0
        template_text: template_text
        incident_timestamp: 2000-01-23T04:56:07.000+00:00
        auto_text: auto_text
        details:
        - {}
        - {}
        type: type
    v2_MatchInput:
      type: object
      properties:
        status_id:
          type: string
        kickoff_time:
          type: string
          format: date-time
        stage_id:
          type: string
        home_team_id:
          type: string
        away_team_id:
          type: string
        round_key:
          type: string
        group_id:
          type: string
        venue_id:
          type: string
        referees:
          type: array
          items:
            $ref: '#/components/schemas/v2_MatchRefereeInput'
        score:
          $ref: '#/components/schemas/v2_MatchScoreInput'
        spectators:
          type: integer
        coverage:
          type: string
          enum:
          - LIVE
          - NOT_LIVE
          - UNKNOWN
        finished_at:
          type: string
          format: date-time
        phase_started_at:
          type: string
          format: date-time
    v2_MatchRefereeInput:
      type: object
      properties:
        referee_id:
          type: string
        role:
          type: string
          enum:
          - REFEREE
    v2_MatchScoreInput:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/v2_TeamScoreInput'
        half_time:
          $ref: '#/components/schemas/v2_TeamScoreInput'
        regular_time:
          $ref: '#/components/schemas/v2_TeamScoreInput'
        extra_time:
          $ref: '#/components/schemas/v2_TeamScoreInput'
        penalty_shootout:
          $ref: '#/components/schemas/v2_TeamScoreInput'
        aggregate:
          $ref: '#/components/schemas/v2_TeamScoreInput'
    v2_TeamScoreInput:
      type: object
      properties:
        home:
          type: integer
        away:
          type: integer
    v2_Match:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/v2_MatchStatus'
        kickoff_time:
          type: string
          format: date-time
        stage:
          $ref: '#/components/schemas/v2_MatchStage'
        season:
          $ref: '#/components/schemas/v2_Season'
        group:
          $ref: '#/components/schemas/v2_Group'
        round:
          $ref: '#/components/schemas/v2_MatchRound'
        home_team:
          $ref: '#/components/schemas/v2_MatchTeamDto'
        away_team:
          $ref: '#/components/schemas/v2_MatchTeamDto'
        referees:
          type: array
          items:
            $ref: '#/components/schemas/v2_MatchReferee'
        venue:
          $ref: '#/components/schemas/v2_MatchVenue'
        spectators:
          type: integer
        coverage:
          type: string
          enum:
          - LIVE
          - NOT_LIVE
          - UNKNOWN
        minute:
          $ref: '#/components/schemas/v2_MatchMinute'
        phase_started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        score:
          $ref: '#/components/schemas/v2_MatchScore'
      example:
        coverage: LIVE
        venue:
          name: name
          id: id
        phase_started_at: 2000-01-23T04:56:07.000+00:00
        finished_at: 2000-01-23T04:56:07.000+00:00
        kickoff_time: 2000-01-23T04:56:07.000+00:00
        spectators: 6
        away_team: null
        minute:
          injury_time: 5
          regular_time: 1
        score:
          total:
            away: 5
            home: 1
          half_time: null
          penalty_shootout: null
          regular_time: null
          extra_time: null
          aggregate: null
        stage:
          end_date: 2000-01-23
          coverage: coverage
          name: name
          id: id
          type: GROUP
          order_in_season: 0
          start_date: 2000-01-23
          status: ACTIVE
        round:
          name: name
          type: type
          key: key
        season:
          name: name
          id: id
          tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          status: ACTIVE
        id: id
        home_team:
          three_letter_code: three_letter_code
          gender: gender
          name: name
          short_name: short_name
          id: id
          type: PLACEHOLDER
          $shirt_color: $shirt_color
        referees:
        - role: REFEREE
          gender: MALE
          name: name
          id: id
        - role: REFEREE
          gender: MALE
          name: name
          id: id
        status:
          code: code
          name: name
          short_name: short_name
          id: id
          type: FINISHED
        group:
          name: name
          order_in_stage: 0
          id: id
    v2_MatchMinute:
      type: object
      properties:
        regular_time:
          type: integer
        injury_time:
          type: integer
      example:
        injury_time: 5
        regular_time: 1
    v2_MatchReferee:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        role:
          type: string
          enum:
          - REFEREE
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        role: REFEREE
        gender: MALE
        name: name
        id: id
    v2_MatchScore:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/v2_TeamScore'
        half_time:
          $ref: '#/components/schemas/v2_TeamScore'
        regular_time:
          $ref: '#/components/schemas/v2_TeamScore'
        extra_time:
          $ref: '#/components/schemas/v2_TeamScore'
        penalty_shootout:
          $ref: '#/components/schemas/v2_TeamScore'
        aggregate:
          $ref: '#/components/schemas/v2_TeamScore'
      example:
        total:
          away: 5
          home: 1
        half_time: null
        penalty_shootout: null
        regular_time: null
        extra_time: null
        aggregate: null
    v2_TeamScore:
      type: object
      properties:
        home:
          type: integer
        away:
          type: integer
      example:
        away: 5
        home: 1
    v2_MatchTeamDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        three_letter_code:
          type: string
        gender:
          type: string
        short_name:
          type: string
        type:
          type: string
          enum:
          - PLACEHOLDER
          - NATIONAL
          - CLUB
        $shirt_color:
          type: string
      example:
        three_letter_code: three_letter_code
        gender: gender
        name: name
        short_name: short_name
        id: id
        type: PLACEHOLDER
        $shirt_color: $shirt_color
    v2_MatchVenue:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        name: name
        id: id
    v2_Matches:
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/v2_Match'
        page_meta:
          $ref: '#/components/schemas/PageMetaDto'
    v2_MatchesLivescore:
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/v2_Match'
    v2_MatchEventInputWrapper:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/v2_MatchEventInput'
    v2_MatchEventInput:
      type: object
      properties:
        id:
          type: string
        type_code:
          type: string
          enum:
          - YELLOW_RED_CARD
          - PENALTY_SHOOTOUT_MISSED
          - PENALTY_SHOOTOUT_SCORED
          - SUBSTITUTION
          - GOAL
          - RED_CARD
          - PENALTY_MISS
          - YELLOW_CARD
          - ASSIST
          - PENALTY_GOAL
          - OWN_GOAL
        team_position:
          type: string
          enum:
          - HOME
          - AWAY
        minute:
          type: integer
        primary_player_id:
          type: string
        secondary_player_id:
          type: string
        sort_order:
          type: integer
          description: "Property is used to determine the order of events, if two\
            \ or more events have the same minute"
    v2_MatchEvent:
      type: object
      properties:
        id:
          type: string
        match_id:
          type: string
        type_code:
          type: string
          enum:
          - YELLOW_RED_CARD
          - PENALTY_SHOOTOUT_MISSED
          - PENALTY_SHOOTOUT_SCORED
          - SUBSTITUTION
          - GOAL
          - RED_CARD
          - PENALTY_MISS
          - YELLOW_CARD
          - ASSIST
          - PENALTY_GOAL
          - OWN_GOAL
        team_position:
          type: string
          enum:
          - HOME
          - AWAY
        minute:
          type: integer
        team_id:
          type: string
        primary_player:
          $ref: '#/components/schemas/v2_Player'
        secondary_player:
          $ref: '#/components/schemas/v2_Player'
        score:
          $ref: '#/components/schemas/v2_TeamScore'
      example:
        score:
          away: 5
          home: 1
        team_position: HOME
        primary_player:
          country: null
          birthdate: birthdate
          birth_city:
            country: null
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            youtube_channel_id: youtube_channel_id
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          profile:
            weight: weight
            height: height
          name: name
          active: true
          id: id
          position: position
        match_id: match_id
        id: id
        team_id: team_id
        secondary_player: null
        type_code: YELLOW_RED_CARD
        minute: 0
    v2_MatchEventProfile:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/v2_MatchEvent'
      example:
        events:
        - score:
            away: 5
            home: 1
          team_position: HOME
          primary_player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
          match_id: match_id
          id: id
          team_id: team_id
          secondary_player: null
          type_code: YELLOW_RED_CARD
          minute: 0
        - score:
            away: 5
            home: 1
          team_position: HOME
          primary_player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
          match_id: match_id
          id: id
          team_id: team_id
          secondary_player: null
          type_code: YELLOW_RED_CARD
          minute: 0
    v2_MatchStatus:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        short_name:
          type: string
        type:
          type: string
          enum:
          - FINISHED
          - NOT_STARTED
          - LIVE
          - INTERRUPTED
          - CANCELLED
          - UNKNOWN
        code:
          type: string
      example:
        code: code
        name: name
        short_name: short_name
        id: id
        type: FINISHED
    PlayerDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryDto'
        active:
          type: boolean
        birthdate:
          type: string
        birth_city:
          $ref: '#/components/schemas/CityDto'
        profile:
          $ref: '#/components/schemas/PlayerProfileDto'
        social:
          $ref: '#/components/schemas/PlayerEditSocialDto'
        position:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        country:
          code: code
          name: name
          id: id
        birthdate: birthdate
        birth_city:
          country:
            code: code
            name: name
            id: id
          name: name
          id: id
        gender: MALE
        social:
          wikipedia_id: wikipedia_id
          web: web
          youtube_channel_id: youtube_channel_id
          twitter_id: twitter_id
          facebook_id: facebook_id
          instagram_id: instagram_id
        profile:
          weight: weight
          height: height
        name: name
        active: true
        id: id
        position: position
    PlayerEditDto:
      type: object
      properties:
        name:
          type: string
        country_id:
          type: string
        active:
          type: boolean
        birthdate:
          type: string
        birth_city_id:
          type: string
        profile:
          $ref: '#/components/schemas/PlayerProfileDto'
        social:
          $ref: '#/components/schemas/PlayerEditSocialDto'
        position:
          type: string
    PlayerEditSocialDto:
      type: object
      properties:
        web:
          type: string
        twitter_id:
          type: string
        facebook_id:
          type: string
        instagram_id:
          type: string
        wikipedia_id:
          type: string
        youtube_channel_id:
          type: string
      example:
        wikipedia_id: wikipedia_id
        web: web
        youtube_channel_id: youtube_channel_id
        twitter_id: twitter_id
        facebook_id: facebook_id
        instagram_id: instagram_id
    PlayerPageDto:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerDto'
        page_meta:
          $ref: '#/components/schemas/PageMetaDto'
      example:
        players:
        - country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          birth_city:
            country:
              code: code
              name: name
              id: id
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            youtube_channel_id: youtube_channel_id
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          profile:
            weight: weight
            height: height
          name: name
          active: true
          id: id
          position: position
        - country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          birth_city:
            country:
              code: code
              name: name
              id: id
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            youtube_channel_id: youtube_channel_id
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          profile:
            weight: weight
            height: height
          name: name
          active: true
          id: id
          position: position
        page_meta:
          total: 6
          offset: 1
          limit: 5
    PlayerProfileDto:
      type: object
      properties:
        height:
          type: string
        weight:
          type: string
      example:
        weight: weight
        height: height
    v2_ActiveClubsInput:
      type: object
      properties:
        clubs:
          type: array
          items:
            $ref: '#/components/schemas/v2_ActiveTeamInput'
    v2_ActiveTeamInput:
      type: object
      properties:
        team_id:
          type: string
        contract_type:
          type: string
        start_date:
          type: string
        shirt_number:
          type: integer
    v2_Player:
      required:
      - country
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
        active:
          type: boolean
        birthdate:
          type: string
        birth_city:
          $ref: '#/components/schemas/v2_City'
        profile:
          $ref: '#/components/schemas/PlayerProfileDto'
        social:
          $ref: '#/components/schemas/PlayerEditSocialDto'
        position:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        country: null
        birthdate: birthdate
        birth_city:
          country: null
          name: name
          id: id
        gender: MALE
        social:
          wikipedia_id: wikipedia_id
          web: web
          youtube_channel_id: youtube_channel_id
          twitter_id: twitter_id
          facebook_id: facebook_id
          instagram_id: instagram_id
        profile:
          weight: weight
          height: height
        name: name
        active: true
        id: id
        position: position
    v2_PlayerProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
        active:
          type: boolean
        birthdate:
          type: string
        birth_city:
          $ref: '#/components/schemas/v2_City'
        profile:
          $ref: '#/components/schemas/PlayerProfileDto'
        social:
          $ref: '#/components/schemas/PlayerEditSocialDto'
        position:
          type: string
        teams:
          type: array
          items:
            $ref: '#/components/schemas/v2_PlayerActiveClub'
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        country:
          code: code
          name: name
          id: id
        birthdate: birthdate
        birth_city:
          country: null
          name: name
          id: id
        teams:
        - contract_type: contract_type
          team:
            three_letter_code: three_letter_code
            country: null
            venue:
              country: null
              city: null
              profile:
                lng: 6.0274563
                lat: 0.8008282
                capacity: 1
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            name: name
            founded: 5
            short_name: short_name
            id: id
            type: PLACEHOLDER
          shirt_number: shirt_number
          start_date: start_date
          status: ACTIVE
        - contract_type: contract_type
          team:
            three_letter_code: three_letter_code
            country: null
            venue:
              country: null
              city: null
              profile:
                lng: 6.0274563
                lat: 0.8008282
                capacity: 1
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            name: name
            founded: 5
            short_name: short_name
            id: id
            type: PLACEHOLDER
          shirt_number: shirt_number
          start_date: start_date
          status: ACTIVE
        gender: MALE
        social:
          wikipedia_id: wikipedia_id
          web: web
          youtube_channel_id: youtube_channel_id
          twitter_id: twitter_id
          facebook_id: facebook_id
          instagram_id: instagram_id
        profile:
          weight: weight
          height: height
        name: name
        active: true
        id: id
        position: position
    v2_PlayerActiveClub:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/v2_Team'
        contract_type:
          type: string
        start_date:
          type: string
        shirt_number:
          type: string
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
      example:
        contract_type: contract_type
        team:
          three_letter_code: three_letter_code
          country: null
          venue:
            country: null
            city: null
            profile:
              lng: 6.0274563
              lat: 0.8008282
              capacity: 1
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          name: name
          founded: 5
          short_name: short_name
          id: id
          type: PLACEHOLDER
        shirt_number: shirt_number
        start_date: start_date
        status: ACTIVE
    v2_PlayerStatisticInput:
      type: object
      properties:
        player_id:
          type: string
        match_id:
          type: string
        team_id:
          type: string
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/PlayerStatisticItem'
        origin:
          type: string
    PlayerStatisticItem:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    v2_PlayerSeasonStatisticOutput:
      type: object
      properties:
        player:
          $ref: '#/components/schemas/v2_Player'
        teams:
          type: array
          items:
            $ref: '#/components/schemas/v2_Team'
        season:
          $ref: '#/components/schemas/v2_Season'
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/v2_StatisticItem'
      example:
        teams:
        - three_letter_code: three_letter_code
          country: null
          venue:
            country: null
            city: null
            profile:
              lng: 6.0274563
              lat: 0.8008282
              capacity: 1
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          name: name
          founded: 5
          short_name: short_name
          id: id
          type: PLACEHOLDER
        - three_letter_code: three_letter_code
          country: null
          venue:
            country: null
            city: null
            profile:
              lng: 6.0274563
              lat: 0.8008282
              capacity: 1
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          name: name
          founded: 5
          short_name: short_name
          id: id
          type: PLACEHOLDER
        season:
          name: name
          id: id
          tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          status: ACTIVE
        player:
          country: null
          birthdate: birthdate
          birth_city:
            country: null
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            youtube_channel_id: youtube_channel_id
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          profile:
            weight: weight
            height: height
          name: name
          active: true
          id: id
          position: position
        statistics:
        - name: name
          value: value
        - name: name
          value: value
    v2_PlayerSeasonStatisticOutputCollection:
      type: object
      properties:
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/v2_PlayerSeasonStatisticOutput'
      example:
        statistics:
        - teams:
          - three_letter_code: three_letter_code
            country: null
            venue:
              country: null
              city: null
              profile:
                lng: 6.0274563
                lat: 0.8008282
                capacity: 1
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            name: name
            founded: 5
            short_name: short_name
            id: id
            type: PLACEHOLDER
          - three_letter_code: three_letter_code
            country: null
            venue:
              country: null
              city: null
              profile:
                lng: 6.0274563
                lat: 0.8008282
                capacity: 1
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            name: name
            founded: 5
            short_name: short_name
            id: id
            type: PLACEHOLDER
          season:
            name: name
            id: id
            tournament:
              country:
                code: code
                name: name
                id: id
              gender: MALE
              name: name
              id: id
              type: CUP
              region: DOMESTIC
            status: ACTIVE
          player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
          statistics:
          - name: name
            value: value
          - name: name
            value: value
        - teams:
          - three_letter_code: three_letter_code
            country: null
            venue:
              country: null
              city: null
              profile:
                lng: 6.0274563
                lat: 0.8008282
                capacity: 1
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            name: name
            founded: 5
            short_name: short_name
            id: id
            type: PLACEHOLDER
          - three_letter_code: three_letter_code
            country: null
            venue:
              country: null
              city: null
              profile:
                lng: 6.0274563
                lat: 0.8008282
                capacity: 1
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            name: name
            founded: 5
            short_name: short_name
            id: id
            type: PLACEHOLDER
          season:
            name: name
            id: id
            tournament:
              country:
                code: code
                name: name
                id: id
              gender: MALE
              name: name
              id: id
              type: CUP
              region: DOMESTIC
            status: ACTIVE
          player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
          statistics:
          - name: name
            value: value
          - name: name
            value: value
    v2_StatisticItem:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      example:
        name: name
        value: value
    v2_PlayerStatisticOutput:
      type: object
      properties:
        player_id:
          type: string
        match_id:
          type: string
        team_id:
          type: string
        statistics:
          type: object
        origin:
          type: string
      example:
        player_id: player_id
        match_id: match_id
        origin: origin
        team_id: team_id
        statistics: {}
    v2_PresidentInput:
      type: object
      properties:
        name:
          type: string
    v2_PresidentUpdate:
      type: object
      properties:
        name:
          type: string
    v2_President:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        name: name
        id: id
    v2_MappingRequestsDto:
      required:
      - mapping_requests
      type: object
      properties:
        provider:
          type: string
        mapping_requests:
          type: array
          items:
            $ref: '#/components/schemas/v2_MappingRequestDto'
    v2_MappingRequestDto:
      required:
      - entity_type
      - provider_id
      type: object
      properties:
        entity_type:
          type: string
          enum:
          - PLAYER
          - TEAM
          - COACH
          - MATCH
          - SEASON
          - VENUE
          - REFEREE
          - TOURNAMENT
          - CITY
          - PRESIDENT
          - STAGE
          - GROUP
          - COUNTRY
          - ODD_PROVIDER
        provider_id:
          type: string
    v2_MappingsDto:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/v2_MappingDto'
    v2_MappingDto:
      type: object
      properties:
        provider:
          type: string
        entity_type:
          type: string
          enum:
          - PLAYER
          - TEAM
          - COACH
          - MATCH
          - SEASON
          - VENUE
          - REFEREE
          - TOURNAMENT
          - CITY
          - PRESIDENT
          - STAGE
          - GROUP
          - COUNTRY
          - ODD_PROVIDER
        domain_id:
          type: string
        provider_id:
          type: string
      example:
        domain_id: domain_id
        entity_type: PLAYER
        provider: provider
        provider_id: provider_id
    RefereeDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryDto'
        birthdate:
          type: string
        active:
          type: boolean
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        country:
          code: code
          name: name
          id: id
        birthdate: birthdate
        gender: MALE
        name: name
        active: true
        id: id
    RefereeEditDto:
      type: object
      properties:
        name:
          type: string
        country_id:
          type: string
        birthdate:
          type: string
          format: date-time
        active:
          type: boolean
    RefereePageDto:
      type: object
      properties:
        referees:
          type: array
          items:
            $ref: '#/components/schemas/RefereeDto'
        page_meta:
          $ref: '#/components/schemas/PageMetaDto'
      example:
        referees:
        - country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          gender: MALE
          name: name
          active: true
          id: id
        - country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          gender: MALE
          name: name
          active: true
          id: id
        page_meta:
          total: 6
          offset: 1
          limit: 5
    v2_RoundTypes:
      type: object
      properties:
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/v2_RoundWithStatus'
      example:
        rounds:
        - end_date: end_date
          name: name
          id: id
          type: type
          key: key
          start_date: start_date
          status: status
        - end_date: end_date
          name: name
          id: id
          type: type
          key: key
          start_date: start_date
          status: status
    v2_MatchRound:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          type: string
      example:
        name: name
        type: type
        key: key
    v2_RoundWithStatus:
      type: object
      properties:
        start_date:
          type: string
        end_date:
          type: string
        status:
          type: string
          description: Not available at endpoint /v2/rounds
        id:
          type: string
        key:
          type: string
        name:
          type: string
        type:
          type: string
      example:
        end_date: end_date
        name: name
        id: id
        type: type
        key: key
        start_date: start_date
        status: status
    v2_TournamentSeasonInsertInput:
      type: object
      properties:
        tournament_id:
          type: string
        name:
          type: string
    v2_TournamentSeasonStatusInput:
      type: object
      properties:
        season_id:
          type: string
    v2_TournamentSeasonUpdateInput:
      type: object
      properties:
        name:
          type: string
    v2_SeasonDetails:
      type: object
      properties:
        season:
          $ref: '#/components/schemas/v2_Season'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/v2_StageDetails'
      example:
        stages:
        - stage:
            end_date: 2000-01-23
            coverage: coverage
            name: name
            id: id
            type: GROUP
            order_in_season: 0
            start_date: 2000-01-23
            status: ACTIVE
          rounds:
          - end_date: end_date
            name: name
            id: id
            type: type
            key: key
            start_date: start_date
            status: status
          - end_date: end_date
            name: name
            id: id
            type: type
            key: key
            start_date: start_date
            status: status
        - stage:
            end_date: 2000-01-23
            coverage: coverage
            name: name
            id: id
            type: GROUP
            order_in_season: 0
            start_date: 2000-01-23
            status: ACTIVE
          rounds:
          - end_date: end_date
            name: name
            id: id
            type: type
            key: key
            start_date: start_date
            status: status
          - end_date: end_date
            name: name
            id: id
            type: type
            key: key
            start_date: start_date
            status: status
        season:
          name: name
          id: id
          tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          status: ACTIVE
    v2_Season:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tournament:
          $ref: '#/components/schemas/v2_Tournament'
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
      example:
        name: name
        id: id
        tournament:
          country:
            code: code
            name: name
            id: id
          gender: MALE
          name: name
          id: id
          type: CUP
          region: DOMESTIC
        status: ACTIVE
    v2_SeasonList:
      required:
      - seasons
      type: object
      properties:
        seasons:
          type: array
          items:
            $ref: '#/components/schemas/v2_Season'
      example:
        seasons:
        - name: name
          id: id
          tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          status: ACTIVE
        - name: name
          id: id
          tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          status: ACTIVE
    v2_StageDetails:
      type: object
      properties:
        stage:
          $ref: '#/components/schemas/v2_MatchStage'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/v2_RoundWithStatus'
      example:
        stage:
          end_date: 2000-01-23
          coverage: coverage
          name: name
          id: id
          type: GROUP
          order_in_season: 0
          start_date: 2000-01-23
          status: ACTIVE
        rounds:
        - end_date: end_date
          name: name
          id: id
          type: type
          key: key
          start_date: start_date
          status: status
        - end_date: end_date
          name: name
          id: id
          type: type
          key: key
          start_date: start_date
          status: status
    PageMetaDto:
      type: object
      properties:
        total:
          type: integer
        offset:
          type: integer
        limit:
          type: integer
      example:
        total: 6
        offset: 1
        limit: 5
    v2_SeasonStage:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
          - GROUP
          - LEAGUE
          - KNOCK_OUT
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        order_in_season:
          type: integer
        coverage:
          type: string
    v2_MatchStage:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
          - GROUP
          - LEAGUE
          - KNOCK_OUT
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        order_in_season:
          type: integer
        coverage:
          type: string
        status:
          type: string
          description: "Available only for /v2/seasons/{id}/stages"
          enum:
          - ACTIVE
          - INACTIVE
      example:
        end_date: 2000-01-23
        coverage: coverage
        name: name
        id: id
        type: GROUP
        order_in_season: 0
        start_date: 2000-01-23
        status: ACTIVE
    v2_SeasonStageCollection:
      type: object
      properties:
        stages:
          type: array
          items:
            $ref: '#/components/schemas/v2_MatchStage'
      example:
        stages:
        - end_date: 2000-01-23
          coverage: coverage
          name: name
          id: id
          type: GROUP
          order_in_season: 0
          start_date: 2000-01-23
          status: ACTIVE
        - end_date: 2000-01-23
          coverage: coverage
          name: name
          id: id
          type: GROUP
          order_in_season: 0
          start_date: 2000-01-23
          status: ACTIVE
    v2_StageTeamInput:
      type: object
      properties:
        team_id:
          type: string
    v2_LeagueEntryInput:
      type: object
      properties:
        rank:
          type: integer
        team_id:
          type: string
        played:
          type: integer
        wins:
          type: integer
        draws:
          type: integer
        losses:
          type: integer
        points:
          type: integer
        goals_for:
          type: integer
        goals_against:
          type: integer
    v2_TopScorerEntryInput:
      type: object
      properties:
        team_id:
          type: string
        player_id:
          type: string
        rank:
          type: integer
        goals:
          type: integer
        played:
          type: integer
        assists:
          type: integer
        scored_first:
          type: integer
        minutes:
          type: integer
        penalties:
          type: integer
        yellow_cards:
          type: integer
        red_cards:
          type: integer
    v2_StandingEntryRuleInput:
      type: object
      properties:
        standing_rule_id:
          type: string
        rank:
          type: integer
    v2_TeamColors:
      required:
      - colors
      - entity_id
      - entity_type
      type: object
      properties:
        entity_type:
          type: string
        entity_id:
          type: string
        colors:
          type: array
          items:
            $ref: '#/components/schemas/v2_TeamColors_colors'
      example:
        entity_type: entity_type
        entity_id: entity_id
        colors:
        - type: type
          color_code: color_code
        - type: type
          color_code: color_code
    TeamPageDto:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/v2_Team'
        page_meta:
          $ref: '#/components/schemas/PageMetaDto'
      example:
        teams:
        - three_letter_code: three_letter_code
          country: null
          venue:
            country: null
            city: null
            profile:
              lng: 6.0274563
              lat: 0.8008282
              capacity: 1
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          name: name
          founded: 5
          short_name: short_name
          id: id
          type: PLACEHOLDER
        - three_letter_code: three_letter_code
          country: null
          venue:
            country: null
            city: null
            profile:
              lng: 6.0274563
              lat: 0.8008282
              capacity: 1
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          name: name
          founded: 5
          short_name: short_name
          id: id
          type: PLACEHOLDER
        page_meta:
          total: 6
          offset: 1
          limit: 5
    TeamSocialDto:
      type: object
      properties:
        web:
          type: string
        twitter_id:
          type: string
        facebook_id:
          type: string
        instagram_id:
          type: string
        wikipedia_id:
          type: string
      example:
        wikipedia_id: wikipedia_id
        web: web
        twitter_id: twitter_id
        facebook_id: facebook_id
        instagram_id: instagram_id
    TeamEditDto:
      required:
      - country_id
      - name
      - type
      type: object
      properties:
        name:
          type: string
        three_letter_code:
          type: string
        short_name:
          type: string
        type:
          type: string
        country_id:
          type: string
        venue_id:
          type: string
        president_id:
          type: string
        coach_id:
          type: string
        social:
          $ref: '#/components/schemas/TeamSocialDto'
        founded:
          type: integer
        gender:
          type: string
    v2_Team:
      required:
      - country
      - id
      - name
      - type
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        three_letter_code:
          type: string
        short_name:
          type: string
        type:
          type: string
          enum:
          - PLACEHOLDER
          - NATIONAL
          - CLUB
        country:
          $ref: '#/components/schemas/v2_Country'
        venue:
          $ref: '#/components/schemas/v2_VenuesGetId'
        social:
          $ref: '#/components/schemas/TeamSocialDto'
        founded:
          type: integer
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
      example:
        three_letter_code: three_letter_code
        country: null
        venue:
          country: null
          city: null
          profile:
            lng: 6.0274563
            lat: 0.8008282
            capacity: 1
          name: name
          id: id
        gender: MALE
        social:
          wikipedia_id: wikipedia_id
          web: web
          twitter_id: twitter_id
          facebook_id: facebook_id
          instagram_id: instagram_id
        name: name
        founded: 5
        short_name: short_name
        id: id
        type: PLACEHOLDER
    v2_TeamProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        three_letter_code:
          type: string
        short_name:
          type: string
        type:
          type: string
        founded:
          type: integer
        country:
          $ref: '#/components/schemas/v2_Country'
        venue:
          $ref: '#/components/schemas/v2_VenuesGetId'
        social:
          $ref: '#/components/schemas/TeamSocialDto'
        coach:
          $ref: '#/components/schemas/v2_Coach'
        president:
          $ref: '#/components/schemas/v2_President'
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        active_seasons:
          type: array
          items:
            $ref: '#/components/schemas/v2_Season'
        shirt_colors:
          type: array
          items:
            $ref: '#/components/schemas/v2_TeamColors_colors'
      example:
        country:
          code: code
          name: name
          id: id
        venue:
          country: null
          city: null
          profile:
            lng: 6.0274563
            lat: 0.8008282
            capacity: 1
          name: name
          id: id
        gender: MALE
        social:
          wikipedia_id: wikipedia_id
          web: web
          twitter_id: twitter_id
          facebook_id: facebook_id
          instagram_id: instagram_id
        founded: 0
        active_seasons:
        - name: name
          id: id
          tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          status: ACTIVE
        - name: name
          id: id
          tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          status: ACTIVE
        type: type
        three_letter_code: three_letter_code
        name: name
        short_name: short_name
        id: id
        shirt_colors:
        - type: type
          color_code: color_code
        - type: type
          color_code: color_code
        coach:
          country:
            code: code
            name: name
            id: id
          birthdate: birthdate
          gender: MALE
          name: name
          id: id
        president:
          name: name
          id: id
    v2_TeamSquadInput:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/v2_SquadPlayerInput'
    v2_SquadPlayerInput:
      type: object
      properties:
        player_id:
          type: string
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        contract_type:
          type: string
          enum:
          - PERMANENT
          - LOAN
          - UNKNOWN
        start_date:
          type: string
        end_date:
          type: string
        shirt_number:
          type: integer
    v2_TeamSquad:
      required:
      - players
      - team
      type: object
      properties:
        team:
          $ref: '#/components/schemas/v2_Team'
        players:
          type: array
          items:
            $ref: '#/components/schemas/v2_SquadPlayer'
      example:
        players:
        - end_date: end_date
          contract_type: PERMANENT
          shirt_number: 0
          player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
          status: ACTIVE
          start_date: start_date
        - end_date: end_date
          contract_type: PERMANENT
          shirt_number: 0
          player:
            country: null
            birthdate: birthdate
            birth_city:
              country: null
              name: name
              id: id
            gender: MALE
            social:
              wikipedia_id: wikipedia_id
              web: web
              youtube_channel_id: youtube_channel_id
              twitter_id: twitter_id
              facebook_id: facebook_id
              instagram_id: instagram_id
            profile:
              weight: weight
              height: height
            name: name
            active: true
            id: id
            position: position
          status: ACTIVE
          start_date: start_date
        team:
          three_letter_code: three_letter_code
          country: null
          venue:
            country: null
            city: null
            profile:
              lng: 6.0274563
              lat: 0.8008282
              capacity: 1
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          name: name
          founded: 5
          short_name: short_name
          id: id
          type: PLACEHOLDER
    v2_SquadPlayer:
      required:
      - player
      - status
      type: object
      properties:
        player:
          $ref: '#/components/schemas/v2_Player'
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        contract_type:
          type: string
          enum:
          - PERMANENT
          - LOAN
          - UNKNOWN
        start_date:
          type: string
        end_date:
          type: string
        shirt_number:
          type: integer
      example:
        end_date: end_date
        contract_type: PERMANENT
        shirt_number: 0
        player:
          country: null
          birthdate: birthdate
          birth_city:
            country: null
            name: name
            id: id
          gender: MALE
          social:
            wikipedia_id: wikipedia_id
            web: web
            youtube_channel_id: youtube_channel_id
            twitter_id: twitter_id
            facebook_id: facebook_id
            instagram_id: instagram_id
          profile:
            weight: weight
            height: height
          name: name
          active: true
          id: id
          position: position
        status: ACTIVE
        start_date: start_date
    v2_Tournament:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        type:
          type: string
          enum:
          - CUP
          - LEAGUE
        region:
          type: string
          enum:
          - DOMESTIC
          - INTERNATIONAL
      example:
        country:
          code: code
          name: name
          id: id
        gender: MALE
        name: name
        id: id
        type: CUP
        region: DOMESTIC
    v2_TournamentGroupInsertInput:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        tournaments:
          type: array
          items:
            $ref: '#/components/schemas/TournamentItemDto'
    TournamentItemDto:
      type: object
      properties:
        tournament_id:
          type: string
        sort_order:
          type: integer
    v2_TournamentGroupUpdateInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tournaments:
          type: array
          items:
            $ref: '#/components/schemas/TournamentItemDto'
    v2_TournamentGroupGetOutput:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        tournaments:
          type: array
          items:
            $ref: '#/components/schemas/v2_TournamentItemOutput'
      example:
        tournaments:
        - tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          sort_order: 0
        - tournament:
            country:
              code: code
              name: name
              id: id
            gender: MALE
            name: name
            id: id
            type: CUP
            region: DOMESTIC
          sort_order: 0
        code: code
        name: name
        description: description
    v2_TournamentItemOutput:
      type: object
      properties:
        tournament:
          $ref: '#/components/schemas/v2_Tournament'
        sort_order:
          type: integer
      example:
        tournament:
          country:
            code: code
            name: name
            id: id
          gender: MALE
          name: name
          id: id
          type: CUP
          region: DOMESTIC
        sort_order: 0
    v2_TournamentGroupCollection:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Dto'
      example:
        groups:
        - code: code
          name: name
          description: description
        - code: code
          name: name
          description: description
    Dto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
      example:
        code: code
        name: name
        description: description
    v2_TournamentGroupSelection:
      type: object
      properties:
        match_id:
          type: string
    TranslationContentDto:
      type: object
      properties:
        name:
          type: string
        three_letter_code:
          type: string
        short_name:
          type: string
      example:
        three_letter_code: three_letter_code
        name: name
        short_name: short_name
    TranslationDto:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/TranslationKeyDto'
        content:
          $ref: '#/components/schemas/TranslationContentDto'
      example:
        key:
          language: language
          entity_id: entity_id
          entity: LINEUP_PLAYER_TYPE
        content:
          three_letter_code: three_letter_code
          name: name
          short_name: short_name
    TranslationEntityDto:
      type: object
      properties:
        entity:
          type: string
          enum:
          - LINEUP_PLAYER_TYPE
          - COACH
          - VENUE
          - TOURNAMENT
          - TEAM
          - COUNTRY
          - MATCH_STATUS
          - STAGE
          - PLAYER
          - REFEREE
          - CITY
          - PRESIDENT
          - STANDING_RULE
          - GROUP
          - SEASON
          - ROUND_TYPE
      example:
        entity: LINEUP_PLAYER_TYPE
    TranslationKeyDto:
      type: object
      properties:
        entity:
          type: string
          enum:
          - LINEUP_PLAYER_TYPE
          - COACH
          - VENUE
          - TOURNAMENT
          - TEAM
          - COUNTRY
          - MATCH_STATUS
          - STAGE
          - PLAYER
          - REFEREE
          - CITY
          - PRESIDENT
          - STANDING_RULE
          - GROUP
          - SEASON
          - ROUND_TYPE
        entity_id:
          type: string
        language:
          type: string
      example:
        language: language
        entity_id: entity_id
        entity: LINEUP_PLAYER_TYPE
    VenueDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryDto'
        city:
          $ref: '#/components/schemas/CityDto'
        profile:
          $ref: '#/components/schemas/VenueProfileDto'
    VenueEditDto:
      required:
      - country_id
      - name
      type: object
      properties:
        name:
          type: string
        country_id:
          type: string
        city_id:
          type: string
        profile:
          $ref: '#/components/schemas/VenueProfileDto'
    VenuePageDto:
      type: object
      properties:
        venues:
          type: array
          items:
            $ref: '#/components/schemas/VenueDto'
        page_meta:
          $ref: '#/components/schemas/PageMetaDto'
    VenueProfileDto:
      type: object
      properties:
        lat:
          type: number
          format: float
        lng:
          type: number
          format: float
        capacity:
          type: integer
      example:
        lng: 6.0274563
        lat: 0.8008282
        capacity: 1
    v2_post_venues:
      required:
      - country_id
      - name
      type: object
      properties:
        name:
          type: string
        country_id:
          type: string
        city_id:
          type: string
        profile:
          $ref: '#/components/schemas/VenueProfileDto'
    v2_put_venues:
      required:
      - country_id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country_id:
          type: string
        city_id:
          type: string
        profile:
          $ref: '#/components/schemas/VenueProfileDto'
    v2_Venues:
      required:
      - country
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
        city:
          $ref: '#/components/schemas/v2_City'
        profile:
          $ref: '#/components/schemas/VenueProfileDto'
      example:
        country:
          code: code
          name: name
          id: id
        city:
          country: null
          name: name
          id: id
        profile:
          lng: 6.0274563
          lat: 0.8008282
          capacity: 1
        name: name
        id: id
    v2_VenuesGetId:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
        city:
          $ref: '#/components/schemas/v2_City'
        profile:
          $ref: '#/components/schemas/VenueProfileDto'
      example:
        country: null
        city: null
        profile:
          lng: 6.0274563
          lat: 0.8008282
          capacity: 1
        name: name
        id: id
    v2_VenuesList:
      type: object
      properties:
        venues:
          type: array
          items:
            $ref: '#/components/schemas/ListVenueDto'
        page_meta:
          $ref: '#/components/schemas/PageMetaDto'
      example:
        venues:
        - country:
            code: code
            name: name
            id: id
          city:
            country:
              code: code
              name: name
              id: id
            name: name
            id: id
          profile: {}
          name: name
          id: id
        - country:
            code: code
            name: name
            id: id
          city:
            country:
              code: code
              name: name
              id: id
            name: name
            id: id
          profile: {}
          name: name
          id: id
        page_meta:
          total: 6
          offset: 1
          limit: 5
    ListVenueDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryDto'
        city:
          $ref: '#/components/schemas/CityDto'
        profile:
          type: object
      example:
        country:
          code: code
          name: name
          id: id
        city:
          country:
            code: code
            name: name
            id: id
          name: name
          id: id
        profile: {}
        name: name
        id: id
    v2_VenuesPut:
      required:
      - country
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          $ref: '#/components/schemas/v2_Country'
        city:
          $ref: '#/components/schemas/v2_City'
        profile:
          $ref: '#/components/schemas/VenueProfileDto'
      example:
        country:
          code: code
          name: name
          id: id
        city:
          country: null
          name: name
          id: id
        profile:
          lng: 6.0274563
          lat: 0.8008282
          capacity: 1
        name: name
        id: id
    v1_CountryDto:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url_flag:
          type: string
      example:
        name: name
        url_flag: url_flag
        id: 5
    SeasonDto:
      required:
      - active
      - id
      - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
      example:
        name: name
        active: true
        id: 6
    StageDto:
      required:
      - cup
      - id
      - name
      - season
      - tournament
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        cup:
          type: boolean
        season:
          $ref: '#/components/schemas/SeasonDto'
        tournament:
          $ref: '#/components/schemas/TournamentDto'
        start_date:
          type: string
        end_date:
          type: string
        live:
          type: boolean
        stage_groups:
          type: integer
      example:
        end_date: end_date
        name: name
        season:
          name: name
          active: true
          id: 6
        stage_groups: 5
        id: 0
        tournament:
          country:
            name: name
            url_flag: url_flag
            id: 5
          url_logo: url_logo
          name: name
          regional_league: true
          id: 1
        live: true
        cup: true
        start_date: start_date
    OutputDto:
      required:
      - player
      - season
      - team
      - tournament
      type: object
      properties:
        player:
          $ref: '#/components/schemas/PartialPerson'
        team:
          $ref: '#/components/schemas/PartialTeam'
        season:
          $ref: '#/components/schemas/TournamentSeason'
        tournament:
          $ref: '#/components/schemas/Tournament'
      example:
        season:
          name: 2015/2016
          active: true
          id: 0
        team:
          url_logo: http://football-api.devks.msk.bg/assets/image.png
          gender: MALE
          undecided: true
          name: Real Madrid
          national: true
          threeLetterCode: RMA
          id: 6
          shortName: Loko Plovdiv
          type: placeholder
        tournament:
          country:
            code: code
            name: England
            url_flag: http://football-api.devks.msk.bg/assets/image.png
            id: 0
          url_logo: http://football-api.devks.msk.bg/assets/image.png
          gender: Male
          name: Champions League
          regional_league: true
          client_sortorder: 1
          id: 6
          type: League
          region: Regional
        player:
          name: Cristiano Ronaldo
          id: 5
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
    TournamentDto:
      required:
      - country
      - id
      - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        country:
          $ref: '#/components/schemas/v1_CountryDto'
        regional_league:
          type: boolean
        url_logo:
          type: string
      description: "Resource representing a Football Tournament such as A Grupa, Premier\
        \ League, Champions League, World Cup, etc. Does not represent a specific\
        \ season such as Premier League 2015/2016."
      example:
        country:
          name: name
          url_flag: url_flag
          id: 5
        url_logo: url_logo
        name: name
        regional_league: true
        id: 1
    BasicPlayerStats:
      properties:
        player:
          $ref: '#/components/schemas/Player'
        shirt_number:
          type: integer
          description: Player's shirt number during the season
      example:
        shirt_number: 5
        player:
          country:
            code: code
            name: England
            url_flag: http://football-api.devks.msk.bg/assets/image.png
            id: 0
          birthdate: 1985-02-05T00:00:00.000+00:00
          gender: MALE
          name: Cristiano Ronaldo
          last_name: Ronaldo
          active: true
          position: keeper
          id: 0
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          first_name: Cristiano
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
      allOf:
      - $ref: '#/components/schemas/PlayerStatsExtended'
    Coach:
      required:
      - name
      type: object
      properties:
        url_image:
          type: string
          description: 277x338 full body image of Person
          example: http://football-api.devks.msk.bg/assets/image.jpeg
        country:
          $ref: '#/components/schemas/Country'
        birthdate:
          type: string
          description: Date when the person was born
          format: date
          example: 1985-02-05
        first_name:
          type: string
          description: Human readable first(given) name
          example: Cristiano
        last_name:
          type: string
          description: Human readable last(family) name
          example: Ronaldo
        active:
          type: boolean
          description: "True if currently active, false if retired"
        gender:
          type: string
          description: Person's gender
          enum:
          - MALE
          - FEMALE
        id:
          type: integer
          description: Unique identifier within the system
        name:
          type: string
          description: Human readable name of the Person
          example: Cristiano Ronaldo
        url_thumb:
          type: string
          description: 150x150 face image of Person
          example: http://football-api.devks.msk.bg/assets/image.jpeg
      example:
        country: null
        birthdate: 1985-02-05T00:00:00.000+00:00
        gender: MALE
        name: Cristiano Ronaldo
        last_name: Ronaldo
        active: true
        id: 0
        url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
        first_name: Cristiano
        url_image: http://football-api.devks.msk.bg/assets/image.jpeg
    Country:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the object within the system
        name:
          type: string
          description: Human known name of the Country
          example: England
        code:
          type: string
          description: 2 letter country code if available
        url_flag:
          type: string
          description: Image of the flag for the Country
          example: http://football-api.devks.msk.bg/assets/image.png
      example:
        code: code
        name: England
        url_flag: http://football-api.devks.msk.bg/assets/image.png
        id: 0
    EventsByDate:
      required:
      - date
      - items
      type: object
      properties:
        date:
          type: string
          format: date
          example: 2016-08-13
        items:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      example:
        date: 2016-08-13T00:00:00.000+00:00
        items:
        - penalty_away: 4
          venue:
            country: null
            lng: 3.6160767
            city: city
            name: name
            id: 2
            lat: 9.301444
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
            capacity: 7
          goal_away: 1
          teamstats_available: true
          stage_group:
            name: name
            order_in_stage: 5
            id: 1
          home_score:
            half_time: 4
            ordinary_time: 7
            penalty_shootout: 1
            extra_time: 1
          away_score: null
          spectators: 95554
          referee:
            name: Cristiano Ronaldo
            id: 5
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
          minute: 85
          away_team: null
          start_time: 2000-01-23T04:56:07.000+00:00
          penalty_home: 5
          agg_away: 2
          goal_home: 2
          incidents: 2
          live_updates: true
          started_at: 2000-01-23T04:56:07.000+00:00
          tournament_season_stage:
            country:
              code: code
              name: England
              url_flag: http://football-api.devks.msk.bg/assets/image.png
              id: 0
            name: Champions League Final Stages
            id: 1
            tournament_season_id: 0
            cup: true
            tournament_id: 6
            confederation: confederation
          id: 1
          home_team:
            url_logo: http://football-api.devks.msk.bg/assets/image.png
            gender: MALE
            undecided: true
            name: Real Madrid
            national: true
            threeLetterCode: RMA
            id: 6
            shortName: Loko Plovdiv
            type: placeholder
          lineup_available: true
          event_status:
            code: finished
            name: Finished
            short_name: FIN
            type: finished
          agg_home: 4
        - penalty_away: 4
          venue:
            country: null
            lng: 3.6160767
            city: city
            name: name
            id: 2
            lat: 9.301444
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
            capacity: 7
          goal_away: 1
          teamstats_available: true
          stage_group:
            name: name
            order_in_stage: 5
            id: 1
          home_score:
            half_time: 4
            ordinary_time: 7
            penalty_shootout: 1
            extra_time: 1
          away_score: null
          spectators: 95554
          referee:
            name: Cristiano Ronaldo
            id: 5
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
          minute: 85
          away_team: null
          start_time: 2000-01-23T04:56:07.000+00:00
          penalty_home: 5
          agg_away: 2
          goal_home: 2
          incidents: 2
          live_updates: true
          started_at: 2000-01-23T04:56:07.000+00:00
          tournament_season_stage:
            country:
              code: code
              name: England
              url_flag: http://football-api.devks.msk.bg/assets/image.png
              id: 0
            name: Champions League Final Stages
            id: 1
            tournament_season_id: 0
            cup: true
            tournament_id: 6
            confederation: confederation
          id: 1
          home_team:
            url_logo: http://football-api.devks.msk.bg/assets/image.png
            gender: MALE
            undecided: true
            name: Real Madrid
            national: true
            threeLetterCode: RMA
            id: 6
            shortName: Loko Plovdiv
            type: placeholder
          lineup_available: true
          event_status:
            code: finished
            name: Finished
            short_name: FIN
            type: finished
          agg_home: 4
    Event:
      required:
      - away_team
      - event_status
      - home_team
      - id
      - start_time
      - tournament_season_stage
      type: object
      properties:
        spectators:
          type: integer
          description: Number of spectators at the event
          example: 95554
        tournament_season_stage:
          $ref: '#/components/schemas/PartialTournamentSeasonStage'
        minute:
          type: integer
          description: Live minute ticker. Only available if the event_status.type
            is 'inprogress'
          example: 85
        stage_group:
          $ref: '#/components/schemas/StageGroup'
        referee:
          $ref: '#/components/schemas/PartialPerson'
        venue:
          $ref: '#/components/schemas/Venue'
        incidents:
          type: integer
          description: "Number of incidents which have occured in the Event (goals,\
            \ red cards, yellow cards, etc)."
        lineup_available:
          type: boolean
          description: Indicates whether player lineup information is available or
            not
        live_updates:
          type: boolean
          description: Indicates whether the event has livescore updates. If false
            the event will be updated after FT.
        teamstats_available:
          type: boolean
          description: Indicates whether teamstats are available for this event
        home_score:
          $ref: '#/components/schemas/TeamScore'
        away_score:
          $ref: '#/components/schemas/TeamScore'
        started_at:
          type: string
          description: "timestamp when the current phase (1st_half, 2nd_half, et,\
            \ etc) has started. Can be used for calculating the minute ticker"
          format: date-time
        id:
          type: integer
          description: Unique identifier
        event_status:
          $ref: '#/components/schemas/EventStatus'
        start_time:
          type: string
          description: Timestamp when the event is scheduled to start
          format: date-time
        goal_home:
          type: integer
          description: Goals scored by the home team
          example: 2
        goal_away:
          type: integer
          description: Goals scored by the away team
          example: 1
        penalty_home:
          type: integer
          description: Penalties scored by the home team. Available only if the game
            goes to penalty shootouts
          example: 5
        penalty_away:
          type: integer
          description: Penalties scored by the away team. Available only if the game
            goes to penalty shootouts
          example: 4
        agg_home:
          type: integer
          description: Goals scored by home team over 1 or more legs. Available only
            if the tie has mutliple legs
          example: 4
        agg_away:
          type: integer
          description: Goals scored by home team over 1 or more legs. Available only
            if the tie has mutliple legs
          example: 2
        home_team:
          $ref: '#/components/schemas/PartialTeam'
        away_team:
          $ref: '#/components/schemas/PartialTeam'
      example:
        penalty_away: 4
        venue:
          country: null
          lng: 3.6160767
          city: city
          name: name
          id: 2
          lat: 9.301444
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
          capacity: 7
        goal_away: 1
        teamstats_available: true
        stage_group:
          name: name
          order_in_stage: 5
          id: 1
        home_score:
          half_time: 4
          ordinary_time: 7
          penalty_shootout: 1
          extra_time: 1
        away_score: null
        spectators: 95554
        referee:
          name: Cristiano Ronaldo
          id: 5
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        minute: 85
        away_team: null
        start_time: 2000-01-23T04:56:07.000+00:00
        penalty_home: 5
        agg_away: 2
        goal_home: 2
        incidents: 2
        live_updates: true
        started_at: 2000-01-23T04:56:07.000+00:00
        tournament_season_stage:
          country:
            code: code
            name: England
            url_flag: http://football-api.devks.msk.bg/assets/image.png
            id: 0
          name: Champions League Final Stages
          id: 1
          tournament_season_id: 0
          cup: true
          tournament_id: 6
          confederation: confederation
        id: 1
        home_team:
          url_logo: http://football-api.devks.msk.bg/assets/image.png
          gender: MALE
          undecided: true
          name: Real Madrid
          national: true
          threeLetterCode: RMA
          id: 6
          shortName: Loko Plovdiv
          type: placeholder
        lineup_available: true
        event_status:
          code: finished
          name: Finished
          short_name: FIN
          type: finished
        agg_home: 4
    EventIncident:
      required:
      - event_id
      - home_team
      - id
      - minute
      - type
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        event_id:
          type: integer
          description: Identifier of the event during which the incident occurred
          example: 1
        type:
          type: string
          description: The type of incident
          enum:
          - penalty_shootout_scored
          - yellow_card_red
          - penalty_shootout_missed
          - substitution
          - goal
          - red_card
          - penalty_miss
          - yellow_card
          - penalty_goal
          - own_goal
        home_team:
          type: boolean
          description: Whether the incident is related to the home or away team. true
            if home team
        minute:
          type: integer
          description: The minute when the incident occured
          example: 68
        team_id:
          type: integer
          description: Id of the team for which the incident is related
        goal_home:
          type: integer
          description: "Updated home team score if the incident changes the scoreline\
            \ (penalty, goal, own_goal, etc)"
          example: 2
        goal_away:
          type: integer
          description: "Updated away team score  if the incident changes the scoreline\
            \ (penalty, goal, own_goal, etc)"
          example: 1
        player:
          $ref: '#/components/schemas/PartialPerson'
        rel_player:
          $ref: '#/components/schemas/PartialPerson'
        deleted:
          type: boolean
          description: Whether the incident has been deleted or not - a disallowed
            goal for example
        sortorder:
          type: integer
          description: "If there are multiple incidents with the same minute, this\
            \ indicates how they are sorted"
      example:
        goal_away: 1
        event_id: 1
        deleted: true
        goal_home: 2
        rel_player: null
        sortorder: 6
        id: 1
        team_id: 0
        type: penalty_shootout_scored
        home_team: true
        minute: 68
        player:
          name: Cristiano Ronaldo
          id: 5
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
    EventPlayer:
      required:
      - event_player_type
      - home_team
      - id
      - player
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        player:
          $ref: '#/components/schemas/PartialPerson'
        event_player_type:
          $ref: '#/components/schemas/EventPlayerType'
        home_team:
          type: boolean
          description: Whether the player is from the home or the away team
        position_x:
          type: integer
          description: "Number indicating the player's vertical position on the field.\
            \ 1 = Goalkeeper, 2-5 = Defender, 6-9 = Midfielder, 10-11 = Forward, where\
            \ 5 is an offensive defender, 9 is an offensive midfielder, etc."
          example: 10
        position_y:
          type: integer
          description: "Number indicating the player's horizontal position on the\
            \ field. Ranges from 1-9, where 1 = furthest right, 9 = furthest left."
          example: 5
        position_number:
          type: integer
          description: "Number 1-11 indicating the player's position in the lineup.\
            \ 1 = goalkeeper, 2 = defender furthest right."
          example: 11
        shirt_number:
          type: integer
          description: The shirt number the player is wearing
          example: 9
      example:
        position_x: 10
        position_y: 5
        position_number: 11
        id: 0
        event_player_type:
          code: code
          name: name
          category: miss
        home_team: true
        shirt_number: 9
        player:
          name: Cristiano Ronaldo
          id: 5
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
    EventPlayerSubOn:
      required:
      - elapsed
      - player_name
      type: object
      properties:
        player_id:
          type: integer
          description: Id of the player that comes on
          example: 1
        player_name:
          type: string
          description: Name of the player that comes on
          example: Wayne Rooney
        elapsed:
          type: integer
          description: The minute when the substitued occured
          example: 68
    EventPlayerType:
      required:
      - category
      - code
      - name
      type: object
      properties:
        category:
          type: string
          description: Indicates what part of the lineup the player belongs to
          enum:
          - miss
          - sub
          - start
          - unknown
        name:
          type: string
          description: Human readable name of the type
        code:
          type: string
          description: Internal unique code to identify the type
      example:
        code: code
        name: name
        category: miss
    EventStatus:
      required:
      - code
      - name
      - type
      type: object
      properties:
        type:
          type: string
          description: Status classification
          enum:
          - finished
          - cancelled
          - notstarted
          - interrupted
          - inprogress
        name:
          type: string
          description: "Human readable name describing the status, can be translated"
          example: Finished
        short_name:
          type: string
          description: "Human readable short name describing the status, can be translated"
          example: FIN
        code:
          type: string
          description: Unique string used to identify the status
          enum:
          - finished
          - not_started
          - 1st_half
          - 2nd_half
      example:
        code: finished
        name: Finished
        short_name: FIN
        type: finished
    TeamStatistics:
      required:
      - corners
      - fouls_committed
      - goals
      - offside
      - possession
      - shots_blocked
      - shots_off
      - shots_on
      type: object
      properties:
        pass:
          type: integer
          description: Number of keys passes completed
        possession:
          type: integer
          description: Percentage of time the team possess the ball
        goals:
          type: integer
          description: Number of goals scored
        corners:
          type: integer
          description: Number of corners
        crosses:
          type: integer
          description: Number of crosses
        offside:
          type: integer
          description: Number of offsides
        shots_on:
          type: integer
          description: Shots on that have hit target
        shots_blocked:
          type: integer
          description: Number of shots that have been blocked by an opposition player
        shots_off:
          type: integer
          description: Shots outside the target
        throw_in:
          type: integer
          description: Number of throw ins taken
        goal_kicks:
          type: integer
          description: Number of goal kicks taken
        treatments:
          type: integer
          description: Number of treatments to injuries
        yellow_cards:
          type: integer
          description: Total numer of yellow cards
        substitutions:
          type: integer
          description: Number of substitutions
        counter_attacks:
          type: integer
          description: Number of counter attacks
        fouls_committed:
          type: integer
          description: Total number of fouls committed by the Team
      example:
        pass: 0
        possession: 6
        yellow_cards: 1
        crosses: 5
        treatments: 7
        corners: 5
        throw_in: 2
        offside: 2
        shots_on: 7
        substitutions: 1
        shots_off: 3
        counter_attacks: 1
        fouls_committed: 6
        shots_blocked: 9
        goal_kicks: 4
        goals: 1
    EventTeamStats:
      required:
      - home_team
      - statistics
      - team
      type: object
      properties:
        team:
          $ref: '#/components/schemas/PartialTeam'
        home_team:
          type: boolean
          description: Whether the stats are for the home or the away team
        statistics:
          $ref: '#/components/schemas/TeamStatistics'
        event_id:
          type: integer
          description: Identifier of the event the stat is related to
      example:
        event_id: 7
        team:
          url_logo: http://football-api.devks.msk.bg/assets/image.png
          gender: MALE
          undecided: true
          name: Real Madrid
          national: true
          threeLetterCode: RMA
          id: 6
          shortName: Loko Plovdiv
          type: placeholder
        home_team: true
        statistics:
          pass: 0
          possession: 6
          yellow_cards: 1
          crosses: 5
          treatments: 7
          corners: 5
          throw_in: 2
          offside: 2
          shots_on: 7
          substitutions: 1
          shots_off: 3
          counter_attacks: 1
          fouls_committed: 6
          shots_blocked: 9
          goal_kicks: 4
          goals: 1
    TeamLineup:
      type: object
      properties:
        team_id:
          type: integer
          description: resource id of the team
        players:
          type: array
          description: List of players involved for the team
          items:
            $ref: '#/components/schemas/EventPlayer'
        coach:
          $ref: '#/components/schemas/PartialPerson'
        formation:
          type: string
          description: Lineup formation
          example: 4-3-3
      example:
        players:
        - position_x: 10
          position_y: 5
          position_number: 11
          id: 0
          event_player_type:
            code: code
            name: name
            category: miss
          home_team: true
          shirt_number: 9
          player:
            name: Cristiano Ronaldo
            id: 5
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        - position_x: 10
          position_y: 5
          position_number: 11
          id: 0
          event_player_type:
            code: code
            name: name
            category: miss
          home_team: true
          shirt_number: 9
          player:
            name: Cristiano Ronaldo
            id: 5
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        team_id: 6
        formation: 4-3-3
        coach:
          name: Cristiano Ronaldo
          id: 5
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
    Lineup:
      required:
      - away_team
      - event_id
      - home_team
      type: object
      properties:
        event_id:
          type: integer
          description: Id of the event for which the lineup is for
        confirmed:
          type: boolean
          description: Whether the lineup is officially confirmed. Should be considered
            probable if != true
        home_team:
          $ref: '#/components/schemas/TeamLineup'
        away_team:
          $ref: '#/components/schemas/TeamLineup'
      example:
        event_id: 0
        home_team:
          players:
          - position_x: 10
            position_y: 5
            position_number: 11
            id: 0
            event_player_type:
              code: code
              name: name
              category: miss
            home_team: true
            shirt_number: 9
            player:
              name: Cristiano Ronaldo
              id: 5
              url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
              url_image: http://football-api.devks.msk.bg/assets/image.jpeg
          - position_x: 10
            position_y: 5
            position_number: 11
            id: 0
            event_player_type:
              code: code
              name: name
              category: miss
            home_team: true
            shirt_number: 9
            player:
              name: Cristiano Ronaldo
              id: 5
              url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
              url_image: http://football-api.devks.msk.bg/assets/image.jpeg
          team_id: 6
          formation: 4-3-3
          coach:
            name: Cristiano Ronaldo
            id: 5
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        confirmed: true
        away_team: null
    Odd:
      type: object
      properties:
        oddProvider:
          $ref: '#/components/schemas/OddProvider'
        eventId:
          type: integer
          description: Id of the event for which odds are provided
      example:
        eventId: 0
        oddProvider:
          country:
            code: code
            name: England
            url_flag: http://football-api.devks.msk.bg/assets/image.png
            id: 0
          url_logo: http://football-api.devks.msk.bg/assets/image.png
          name: name
          id: 0
          url: url
    OddProvider:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Resource identifier
        name:
          type: string
          description: Human readable name of the OddProvider
        url:
          type: string
          description: Homepage of the OddProvider
        country:
          $ref: '#/components/schemas/Country'
        url_logo:
          type: string
          example: http://football-api.devks.msk.bg/assets/image.png
      example:
        country:
          code: code
          name: England
          url_flag: http://football-api.devks.msk.bg/assets/image.png
          id: 0
        url_logo: http://football-api.devks.msk.bg/assets/image.png
        name: name
        id: 0
        url: url
    PartialEvent:
      required:
      - away_team
      - event_status
      - goal_away
      - goal_home
      - home_team
      - id
      - start_time
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        event_status:
          $ref: '#/components/schemas/EventStatus'
        start_time:
          type: string
          description: Timestamp when the event is scheduled to start
          format: date-time
        goal_home:
          type: integer
          description: Goals scored by the home team
          example: 2
        goal_away:
          type: integer
          description: Goals scored by the away team
          example: 1
        penalty_home:
          type: integer
          description: Penalties scored by the home team. Available only if the game
            goes to penalty shootouts
          example: 5
        penalty_away:
          type: integer
          description: Penalties scored by the away team. Available only if the game
            goes to penalty shootouts
          example: 4
        agg_home:
          type: integer
          description: Goals scored by home team over 1 or more legs. Available only
            if the tie has mutliple legs
          example: 4
        agg_away:
          type: integer
          description: Goals scored by home team over 1 or more legs. Available only
            if the tie has mutliple legs
          example: 2
        home_team:
          $ref: '#/components/schemas/PartialTeam'
        away_team:
          $ref: '#/components/schemas/PartialTeam'
      example:
        penalty_away: 4
        start_time: 2000-01-23T04:56:07.000+00:00
        goal_away: 1
        penalty_home: 5
        agg_away: 2
        goal_home: 2
        id: 0
        home_team:
          url_logo: http://football-api.devks.msk.bg/assets/image.png
          gender: MALE
          undecided: true
          name: Real Madrid
          national: true
          threeLetterCode: RMA
          id: 6
          shortName: Loko Plovdiv
          type: placeholder
        event_status:
          code: finished
          name: Finished
          short_name: FIN
          type: finished
        agg_home: 4
        away_team: null
    PartialPerson:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier within the system
        name:
          type: string
          description: Human readable name of the Person
          example: Cristiano Ronaldo
        url_thumb:
          type: string
          description: 150x150 face image of Person
          example: http://football-api.devks.msk.bg/assets/image.jpeg
        url_image:
          type: string
          description: 277x338 full body image of Person
          example: http://football-api.devks.msk.bg/assets/image.jpeg
      example:
        name: Cristiano Ronaldo
        id: 5
        url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
        url_image: http://football-api.devks.msk.bg/assets/image.jpeg
    PartialTournamentSeasonStage:
      required:
      - country
      - cup
      - id
      - name
      - tournament_id
      - tournament_season_id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        name:
          type: string
          description: Human readable name of the TournamentSeasonStage
          example: Champions League Final Stages
        cup:
          type: boolean
          description: "Whether the stage is a cup such as Champions League Knockout\
            \ stage, World Cup Final stages, etc"
        tournament_season_id:
          type: integer
          description: Id of the TournamentSeason in which the stage is part of
        tournament_id:
          type: integer
          description: Id of the Tournament in whicth the stage is part of
        country:
          $ref: '#/components/schemas/Country'
        confederation:
          type: string
          description: Indicates which confederation the stage is part of (for World
            Cup qualif.)
      example:
        country:
          code: code
          name: England
          url_flag: http://football-api.devks.msk.bg/assets/image.png
          id: 0
        name: Champions League Final Stages
        id: 1
        tournament_season_id: 0
        cup: true
        tournament_id: 6
        confederation: confederation
    PartialTeamWithForm:
      allOf:
      - $ref: '#/components/schemas/PartialTeam'
      - type: object
        properties:
          form:
            type: array
            description: Form guide for the Team if available and requested as an
              option
            items:
              $ref: '#/components/schemas/TeamForm'
    PartialTeam:
      required:
      - id
      - name
      type: object
      properties:
        national:
          type: boolean
          description: Whether the team is a football club(Barcelona) or national
            team(Spain)
        id:
          type: integer
          description: Unique identifier of the Team within the system
        name:
          type: string
          description: Human readable name of the team
          example: Real Madrid
        threeLetterCode:
          type: string
          description: 3 character name of team
          example: RMA
        shortName:
          type: string
          description: Manually inserted short name of team
          example: Loko Plovdiv
        undecided:
          type: boolean
          description: "If present and = true, the team can be one of two teams. This\
            \ occurs in cup competitions when some games are still not played"
        gender:
          type: string
          description: "Team gender, MALE, FEMALE or null"
          enum:
          - MALE
          - FEMALE
        url_logo:
          type: string
          example: http://football-api.devks.msk.bg/assets/image.png
        type:
          type: string
          enum:
          - placeholder
          - club
          - national
      example:
        url_logo: http://football-api.devks.msk.bg/assets/image.png
        gender: MALE
        undecided: true
        name: Real Madrid
        national: true
        threeLetterCode: RMA
        id: 6
        shortName: Loko Plovdiv
        type: placeholder
    Player:
      required:
      - country
      - id
      - name
      type: object
      properties:
        position:
          type: string
          description: Playing position of the player
          enum:
          - keeper
          - defender
          - midfielder
          - forward
        country:
          $ref: '#/components/schemas/Country'
        birthdate:
          type: string
          description: Date when the person was born
          format: date
          example: 1985-02-05
        first_name:
          type: string
          description: Human readable first(given) name
          example: Cristiano
        last_name:
          type: string
          description: Human readable last(family) name
          example: Ronaldo
        active:
          type: boolean
          description: "True if currently active, false if retired"
        gender:
          type: string
          description: Person's gender
          enum:
          - MALE
          - FEMALE
        id:
          type: integer
          description: Unique identifier within the system
        name:
          type: string
          description: Human readable name of the Person
          example: Cristiano Ronaldo
        url_thumb:
          type: string
          description: 150x150 face image of Person
          example: http://football-api.devks.msk.bg/assets/image.jpeg
        url_image:
          type: string
          description: 277x338 full body image of Person
          example: http://football-api.devks.msk.bg/assets/image.jpeg
      example:
        country:
          code: code
          name: England
          url_flag: http://football-api.devks.msk.bg/assets/image.png
          id: 0
        birthdate: 1985-02-05T00:00:00.000+00:00
        gender: MALE
        name: Cristiano Ronaldo
        last_name: Ronaldo
        active: true
        position: keeper
        id: 0
        url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
        first_name: Cristiano
        url_image: http://football-api.devks.msk.bg/assets/image.jpeg
    PlayerProfile:
      properties:
        current_league:
          $ref: '#/components/schemas/TournamentSeasonWithTournament'
        club:
          $ref: '#/components/schemas/PlayerTeam'
        nationalTeam:
          $ref: '#/components/schemas/PlayerTeam'
        position_display:
          type: string
          description: Display name of the player position
      example:
        club:
          end_date: 2016-06-21T00:00:00.000+00:00
          active: true
          start_date: 2015-06-20T00:00:00.000+00:00
        position_display: position_display
        current_league: ""
        nationalTeam: null
      allOf:
      - $ref: '#/components/schemas/Player'
    TeamPlayerSeasonStatistics:
      allOf:
      - $ref: '#/components/schemas/TournamentSeasonWithTournament'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/TeamPlayerStatistics'
    TeamPlayerStatistics:
      allOf:
      - $ref: '#/components/schemas/PlayerStatsExtended'
      - required:
        - player
        type: object
        properties:
          player:
            $ref: '#/components/schemas/Player'
          team:
            $ref: '#/components/schemas/Team'
          shirt_number:
            type: integer
    PlayerStatsBasic:
      required:
      - goals
      - minutes
      - played
      - red_cards
      - yellow_cards
      type: object
      properties:
        goals:
          type: integer
          description: Total goals scored
        played:
          type: integer
          description: Total games played
        minutes:
          type: integer
          description: Total minutes played
        red_cards:
          type: integer
          description: Number of red cards
        yellow_cards:
          type: integer
          description: Number of yellow cards
        assists:
          type: integer
          description: Number of assists
    PlayerStatsExtended:
      allOf:
      - $ref: '#/components/schemas/PlayerStatsBasic'
      - type: object
        properties:
          conceded:
            type: integer
            description: Goals conceded (Goalkeeper)
          substitute:
            type: integer
            description: Games started as a substitute
          cleansheets:
            type: integer
            description: Games without allowing a goal (Goalkeeper)
          substitute_in:
            type: integer
            description: Games where the player has come on
          substitute_out:
            type: integer
            description: Games where the player has come off
          minutes_substitute:
            type: integer
            description: Minutes played after coming on as a substitute
    PlayerStatistics:
      properties:
        tournament_season:
          $ref: '#/components/schemas/TournamentSeasonWithTournament'
        player:
          $ref: '#/components/schemas/PartialPerson'
        team:
          $ref: '#/components/schemas/PartialTeam'
        shirtNumber:
          type: integer
          description: Shirt number of the player during the TournamentSeason
        position:
          type: string
          description: Position of the player during the TournamentSeason
      example:
        shirtNumber: 0
        tournament_season: ""
        team:
          url_logo: http://football-api.devks.msk.bg/assets/image.png
          gender: MALE
          undecided: true
          name: Real Madrid
          national: true
          threeLetterCode: RMA
          id: 6
          shortName: Loko Plovdiv
          type: placeholder
        position: position
        player:
          name: Cristiano Ronaldo
          id: 5
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
      allOf:
      - $ref: '#/components/schemas/PlayerStatsExtended'
    Round:
      required:
      - end_time
      - round
      - start_time
      type: object
      properties:
        round:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        events:
          type: array
          items:
            $ref: '#/components/schemas/PartialEvent'
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        round: round
        end_time: 2000-01-23T04:56:07.000+00:00
        events:
        - penalty_away: 4
          start_time: 2000-01-23T04:56:07.000+00:00
          goal_away: 1
          penalty_home: 5
          agg_away: 2
          goal_home: 2
          id: 0
          home_team:
            url_logo: http://football-api.devks.msk.bg/assets/image.png
            gender: MALE
            undecided: true
            name: Real Madrid
            national: true
            threeLetterCode: RMA
            id: 6
            shortName: Loko Plovdiv
            type: placeholder
          event_status:
            code: finished
            name: Finished
            short_name: FIN
            type: finished
          agg_home: 4
          away_team: null
        - penalty_away: 4
          start_time: 2000-01-23T04:56:07.000+00:00
          goal_away: 1
          penalty_home: 5
          agg_away: 2
          goal_home: 2
          id: 0
          home_team:
            url_logo: http://football-api.devks.msk.bg/assets/image.png
            gender: MALE
            undecided: true
            name: Real Madrid
            national: true
            threeLetterCode: RMA
            id: 6
            shortName: Loko Plovdiv
            type: placeholder
          event_status:
            code: finished
            name: Finished
            short_name: FIN
            type: finished
          agg_home: 4
          away_team: null
    StageGroupWithStanding:
      allOf:
      - $ref: '#/components/schemas/StageGroup'
      - type: object
        properties:
          standing:
            type: array
            description: League Standing for the StageGroup if available and requested
            items:
              $ref: '#/components/schemas/LeagueStandingData'
    StageGroupWithStandingTournamentSeasonStage:
      allOf:
      - $ref: '#/components/schemas/StageGroupWithStanding'
      - required:
        - tournament_season_stage
        type: object
        properties:
          tournament_season_stage:
            $ref: '#/components/schemas/TournamentSeasonStage'
    StageGroup:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique resource identifier
        name:
          type: string
          description: Human readable name of the Group
        order_in_stage:
          type: integer
          description: The order in the stage of the group
      example:
        name: name
        order_in_stage: 5
        id: 1
    TopscorerStandingData:
      allOf:
      - $ref: '#/components/schemas/StandingData'
      - required:
        - goals
        - player
        type: object
        properties:
          player:
            $ref: '#/components/schemas/PartialPerson'
          goals:
            type: integer
            description: Number of goals scored
          played:
            type: integer
            description: Total games played
          assists:
            type: integer
            description: Number of assists
          minutes:
            type: integer
            description: Total number of minutes played
          penalties:
            type: integer
            description: Number of goals scored from the penalty spot
          red_cards:
            type: integer
            description: Number of red cards
          scored_first:
            type: integer
            description: Number of times the player scored first for the team
          yellow_cards:
            type: integer
            description: Number of yellow cards
    CardlistStandingData:
      allOf:
      - $ref: '#/components/schemas/StandingData'
      - required:
        - first_yellow_cards
        - player
        - red_cards
        - total_cards
        - yellow_cards
        type: object
        properties:
          player:
            $ref: '#/components/schemas/PartialPerson'
          red_cards:
            type: integer
            description: Number of red cards
          total_cards:
            type: integer
            description: Total number of cards received
          yellow_cards:
            type: integer
            description: Total number of yellow cards
          first_yellow_cards:
            type: integer
            description: "Number of times the Player has been booked, with a first\
              \ yellow card"
    LeagueStandingData:
      allOf:
      - $ref: '#/components/schemas/StandingData'
      - required:
        - defeits
        - draws
        - goals_against
        - goals_for
        - played
        - points
        - wins
        type: object
        properties:
          team:
            $ref: '#/components/schemas/PartialTeamWithForm'
          wins:
            type: integer
            description: Games won
          draws:
            type: integer
            description: Games drawn
          played:
            type: integer
            description: Total games played
          points:
            type: integer
            description: Number of points
          defeits:
            type: integer
            description: Games lost
          goals_for:
            type: integer
            description: Total number of goals scored
          goals_against:
            type: integer
            description: Total number of goals conceded
    StandingData:
      required:
      - rank
      - team
      type: object
      properties:
        rank:
          type: integer
          description: Position of the team/player in the standing
        team:
          $ref: '#/components/schemas/PartialTeam'
        rules:
          type: array
          description: List of applicable rules to the current standing rank
          items:
            $ref: '#/components/schemas/StandingRule'
    StandingRule:
      required:
      - code
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: Human readable name describing the standing rule
          example: Champions League
        code:
          type: string
          description: Unique code identifying the standing rule
          example: championsleague
        type:
          type: string
          description: Type classification of the standing rule
          enum:
          - promotion
          - promotion_playoff
          - relegation
          - relegation_playoff
          - tiertwo
          - tiertwo_playoff
        description:
          type: string
          description: Detailed description of the standing rule
        id:
          type: integer
      example:
        code: championsleague
        name: Champions League
        description: description
        id: 0
        type: promotion
    Team:
      required:
      - country
      - id
      - name
      - national
      type: object
      properties:
        country:
          $ref: '#/components/schemas/Country'
        president:
          type: string
          description: Name of the president of the club
          example: Florentino Perez
        founded:
          type: integer
          description: Year the club was founded
          example: 1902
        venue:
          $ref: '#/components/schemas/Venue'
        coach:
          $ref: '#/components/schemas/Coach'
        current_league:
          $ref: '#/components/schemas/TournamentSeasonWithTournament'
        next_event:
          $ref: '#/components/schemas/Event'
        social:
          type: object
          properties: {}
          description: Various social links for the team
          example: {}
        url_home_kit:
          type: string
          example: http://football-api.devks.msk.bg/assets/home_kit.jpeg
        url_away_kit:
          type: string
          example: http://football-api.devks.msk.bg/assets/away_kit.jpeg
        url_squad_image:
          type: string
          description: Image of the team squad
          example: http://football-api.devks.msk.bg/assets/squad_image.jpeg
        national:
          type: boolean
          description: Whether the team is a football club(Barcelona) or national
            team(Spain)
        id:
          type: integer
          description: Unique identifier of the Team within the system
        name:
          type: string
          description: Human readable name of the team
          example: Real Madrid
        threeLetterCode:
          type: string
          description: 3 character name of team
          example: RMA
        shortName:
          type: string
          description: Manually inserted short name of team
          example: Loko Plovdiv
        undecided:
          type: boolean
          description: "If present and = true, the team can be one of two teams. This\
            \ occurs in cup competitions when some games are still not played"
        gender:
          type: string
          description: "Team gender, MALE, FEMALE or null"
          enum:
          - MALE
          - FEMALE
        form:
          type: array
          description: Form guide for the Team if available and requested as an option
          items:
            $ref: '#/components/schemas/TeamForm'
      example:
        country:
          code: code
          name: England
          url_flag: http://football-api.devks.msk.bg/assets/image.png
          id: 0
        venue:
          country: null
          lng: 3.6160767
          city: city
          name: name
          id: 2
          lat: 9.301444
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
          capacity: 7
        url_squad_image: http://football-api.devks.msk.bg/assets/squad_image.jpeg
        gender: MALE
        social: {}
        founded: 1902
        current_league: ""
        url_away_kit: http://football-api.devks.msk.bg/assets/away_kit.jpeg
        threeLetterCode: RMA
        form:
        - event:
            penalty_away: 4
            start_time: 2000-01-23T04:56:07.000+00:00
            goal_away: 1
            penalty_home: 5
            agg_away: 2
            goal_home: 2
            id: 0
            home_team:
              url_logo: http://football-api.devks.msk.bg/assets/image.png
              gender: MALE
              undecided: true
              name: Real Madrid
              national: true
              threeLetterCode: RMA
              id: 6
              shortName: Loko Plovdiv
              type: placeholder
            event_status:
              code: finished
              name: Finished
              short_name: FIN
              type: finished
            agg_home: 4
            away_team: null
          outcome: W
        - event:
            penalty_away: 4
            start_time: 2000-01-23T04:56:07.000+00:00
            goal_away: 1
            penalty_home: 5
            agg_away: 2
            goal_home: 2
            id: 0
            home_team:
              url_logo: http://football-api.devks.msk.bg/assets/image.png
              gender: MALE
              undecided: true
              name: Real Madrid
              national: true
              threeLetterCode: RMA
              id: 6
              shortName: Loko Plovdiv
              type: placeholder
            event_status:
              code: finished
              name: Finished
              short_name: FIN
              type: finished
            agg_home: 4
            away_team: null
          outcome: W
        url_home_kit: http://football-api.devks.msk.bg/assets/home_kit.jpeg
        undecided: true
        name: Real Madrid
        national: true
        id: 6
        shortName: Loko Plovdiv
        coach:
          country: null
          birthdate: 1985-02-05T00:00:00.000+00:00
          gender: MALE
          name: Cristiano Ronaldo
          last_name: Ronaldo
          active: true
          id: 0
          url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
          first_name: Cristiano
          url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        president: Florentino Perez
        next_event:
          penalty_away: 4
          venue:
            country: null
            lng: 3.6160767
            city: city
            name: name
            id: 2
            lat: 9.301444
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
            capacity: 7
          goal_away: 1
          teamstats_available: true
          stage_group:
            name: name
            order_in_stage: 5
            id: 1
          home_score:
            half_time: 4
            ordinary_time: 7
            penalty_shootout: 1
            extra_time: 1
          away_score: null
          spectators: 95554
          referee:
            name: Cristiano Ronaldo
            id: 5
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
          minute: 85
          away_team: null
          start_time: 2000-01-23T04:56:07.000+00:00
          penalty_home: 5
          agg_away: 2
          goal_home: 2
          incidents: 2
          live_updates: true
          started_at: 2000-01-23T04:56:07.000+00:00
          tournament_season_stage:
            country:
              code: code
              name: England
              url_flag: http://football-api.devks.msk.bg/assets/image.png
              id: 0
            name: Champions League Final Stages
            id: 1
            tournament_season_id: 0
            cup: true
            tournament_id: 6
            confederation: confederation
          id: 1
          home_team:
            url_logo: http://football-api.devks.msk.bg/assets/image.png
            gender: MALE
            undecided: true
            name: Real Madrid
            national: true
            threeLetterCode: RMA
            id: 6
            shortName: Loko Plovdiv
            type: placeholder
          lineup_available: true
          event_status:
            code: finished
            name: Finished
            short_name: FIN
            type: finished
          agg_home: 4
    TeamForm:
      required:
      - outcome
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PartialEvent'
        outcome:
          type: string
          description: Indicates outcome of the event for the given team
          enum:
          - W
          - D
          - L
      example:
        event:
          penalty_away: 4
          start_time: 2000-01-23T04:56:07.000+00:00
          goal_away: 1
          penalty_home: 5
          agg_away: 2
          goal_home: 2
          id: 0
          home_team:
            url_logo: http://football-api.devks.msk.bg/assets/image.png
            gender: MALE
            undecided: true
            name: Real Madrid
            national: true
            threeLetterCode: RMA
            id: 6
            shortName: Loko Plovdiv
            type: placeholder
          event_status:
            code: finished
            name: Finished
            short_name: FIN
            type: finished
          agg_home: 4
          away_team: null
        outcome: W
    TeamPlayer:
      properties:
        active:
          type: boolean
          description: Whether the person is currently part of the Team
        start_date:
          type: string
          description: Date when the Person joined the team
          format: date
          example: 2015-06-20
        end_date:
          type: string
          description: Date when the Person left the team (if any)
          format: date
          example: 2016-06-21
      example:
        end_date: 2016-06-21T00:00:00.000+00:00
        active: true
        start_date: 2015-06-20T00:00:00.000+00:00
      allOf:
      - $ref: '#/components/schemas/TeamPlayerData'
      - required:
        - player
        type: object
        properties:
          player:
            $ref: '#/components/schemas/Player'
    PlayerTeam:
      properties:
        active:
          type: boolean
          description: Whether the person is currently part of the Team
        start_date:
          type: string
          description: Date when the Person joined the team
          format: date
          example: 2015-06-20
        end_date:
          type: string
          description: Date when the Person left the team (if any)
          format: date
          example: 2016-06-21
      example:
        end_date: 2016-06-21T00:00:00.000+00:00
        active: true
        start_date: 2015-06-20T00:00:00.000+00:00
      allOf:
      - $ref: '#/components/schemas/TeamPlayerData'
      - required:
        - team
        type: object
        properties:
          team:
            $ref: '#/components/schemas/PartialTeam'
    TeamPlayerData:
      required:
      - active
      type: object
      properties:
        shirt_number:
          type: integer
          description: Shirt number which the player wears for the team
          example: 9
        loan:
          type: boolean
          description: Whether the player is on loan with the team
        active:
          type: boolean
          description: Whether the person is currently part of the Team
        start_date:
          type: string
          description: Date when the Person joined the team
          format: date
          example: 2015-06-20
        end_date:
          type: string
          description: Date when the Person left the team (if any)
          format: date
          example: 2016-06-21
    TeamScore:
      type: object
      properties:
        half_time:
          type: integer
          description: Score at the halftime break
        ordinary_time:
          type: integer
          description: Score in regular time + injury time
        extra_time:
          type: integer
          description: "Score in extra time, does not include the score for ordinary\
            \ time"
        penalty_shootout:
          type: integer
          description: "Score in penalty shootout, does not include ordinarytime or\
            \ extratime"
      example:
        half_time: 4
        ordinary_time: 7
        penalty_shootout: 1
        extra_time: 1
    TeamSeasonStatistics:
      type: object
      properties:
        team_id:
          type: integer
        latest_league_stage:
          $ref: '#/components/schemas/TournamentSeasonStage'
        player_statistics:
          type: array
          description: Player statistics for the TournamentSeason
          items:
            $ref: '#/components/schemas/BasicPlayerStats'
      example:
        team_id: 0
        player_statistics:
        - shirt_number: 5
          player:
            country:
              code: code
              name: England
              url_flag: http://football-api.devks.msk.bg/assets/image.png
              id: 0
            birthdate: 1985-02-05T00:00:00.000+00:00
            gender: MALE
            name: Cristiano Ronaldo
            last_name: Ronaldo
            active: true
            position: keeper
            id: 0
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            first_name: Cristiano
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        - shirt_number: 5
          player:
            country:
              code: code
              name: England
              url_flag: http://football-api.devks.msk.bg/assets/image.png
              id: 0
            birthdate: 1985-02-05T00:00:00.000+00:00
            gender: MALE
            name: Cristiano Ronaldo
            last_name: Ronaldo
            active: true
            position: keeper
            id: 0
            url_thumb: http://football-api.devks.msk.bg/assets/image.jpeg
            first_name: Cristiano
            url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        latest_league_stage:
          end_date: 2015-06-21T00:00:00.000+00:00
          country:
            code: code
            name: England
            url_flag: http://football-api.devks.msk.bg/assets/image.png
            id: 0
          tournament_season_id: 1
          tournament_id: 5
          qualification: true
          standing:
          - ""
          - ""
          name: Champions League Final Stages
          stage_groups: 6
          id: 1
          live: true
          rounds:
          - start_time: 2000-01-23T04:56:07.000+00:00
            round: round
            end_time: 2000-01-23T04:56:07.000+00:00
            events:
            - penalty_away: 4
              start_time: 2000-01-23T04:56:07.000+00:00
              goal_away: 1
              penalty_home: 5
              agg_away: 2
              goal_home: 2
              id: 0
              home_team:
                url_logo: http://football-api.devks.msk.bg/assets/image.png
                gender: MALE
                undecided: true
                name: Real Madrid
                national: true
                threeLetterCode: RMA
                id: 6
                shortName: Loko Plovdiv
                type: placeholder
              event_status:
                code: finished
                name: Finished
                short_name: FIN
                type: finished
              agg_home: 4
              away_team: null
            - penalty_away: 4
              start_time: 2000-01-23T04:56:07.000+00:00
              goal_away: 1
              penalty_home: 5
              agg_away: 2
              goal_home: 2
              id: 0
              home_team:
                url_logo: http://football-api.devks.msk.bg/assets/image.png
                gender: MALE
                undecided: true
                name: Real Madrid
                national: true
                threeLetterCode: RMA
                id: 6
                shortName: Loko Plovdiv
                type: placeholder
              event_status:
                code: finished
                name: Finished
                short_name: FIN
                type: finished
              agg_home: 4
              away_team: null
          - start_time: 2000-01-23T04:56:07.000+00:00
            round: round
            end_time: 2000-01-23T04:56:07.000+00:00
            events:
            - penalty_away: 4
              start_time: 2000-01-23T04:56:07.000+00:00
              goal_away: 1
              penalty_home: 5
              agg_away: 2
              goal_home: 2
              id: 0
              home_team:
                url_logo: http://football-api.devks.msk.bg/assets/image.png
                gender: MALE
                undecided: true
                name: Real Madrid
                national: true
                threeLetterCode: RMA
                id: 6
                shortName: Loko Plovdiv
                type: placeholder
              event_status:
                code: finished
                name: Finished
                short_name: FIN
                type: finished
              agg_home: 4
              away_team: null
            - penalty_away: 4
              start_time: 2000-01-23T04:56:07.000+00:00
              goal_away: 1
              penalty_home: 5
              agg_away: 2
              goal_home: 2
              id: 0
              home_team:
                url_logo: http://football-api.devks.msk.bg/assets/image.png
                gender: MALE
                undecided: true
                name: Real Madrid
                national: true
                threeLetterCode: RMA
                id: 6
                shortName: Loko Plovdiv
                type: placeholder
              event_status:
                code: finished
                name: Finished
                short_name: FIN
                type: finished
              agg_home: 4
              away_team: null
          start_date: 2015-06-20T00:00:00.000+00:00
          cup: true
          confederation: confederation
    TournamentWithSeasons:
      allOf:
      - $ref: '#/components/schemas/Tournament'
      - required:
        - seasons
        type: object
        properties:
          seasons:
            type: array
            description: List of seasons available for the Tournament
            items:
              $ref: '#/components/schemas/TournamentSeason'
    Tournament:
      required:
      - country
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique Resource identifier of the Tournament
        name:
          type: string
          description: Human readable name of the Tournament
          example: Champions League
        country:
          $ref: '#/components/schemas/Country'
        regional_league:
          type: boolean
          description: "Whether or not the Tournament is a regional league such as\
            \ the La Liga, A PFG, EPL."
        client_sortorder:
          type: integer
          description: Represents the order position in a custom client based sorted
            list
        url_logo:
          type: string
          example: http://football-api.devks.msk.bg/assets/image.png
        type:
          type: string
          description: Shows if the tournament is Cup or a League
          example: League
          enum:
          - CUP
          - LEAGUE
        gender:
          type: string
          description: Shows if the the teams in the tournament are Male or Female
          example: Male
          enum:
          - MALE
          - FEMALE
        region:
          type: string
          description: Shows if the tournament is Regional or International
          example: Regional
          enum:
          - DOMESTIC
          - INTERNATIONAL
      description: "Resource representing a Football Tournament such as A Grupa, Premier\
        \ League, Champions League, World Cup, etc. Does not represent a specific\
        \ season such as Premier League 2015/2016."
      example:
        country:
          code: code
          name: England
          url_flag: http://football-api.devks.msk.bg/assets/image.png
          id: 0
        url_logo: http://football-api.devks.msk.bg/assets/image.png
        gender: Male
        name: Champions League
        regional_league: true
        client_sortorder: 1
        id: 6
        type: League
        region: Regional
    TournamentSeasonWithStages:
      allOf:
      - $ref: '#/components/schemas/TournamentSeasonWithTournament'
      - required:
        - stages
        type: object
        properties:
          stages:
            type: array
            description: "List of stages which take place during the TournamentSeason.\
              \ If the parent Tournament has regional_league = true, this will usually\
              \ be one stage with cup = false."
            items:
              $ref: '#/components/schemas/TournamentSeasonStage'
    TournamentSeasonWithTournament:
      allOf:
      - $ref: '#/components/schemas/TournamentSeason'
      - required:
        - tournament
        type: object
        properties:
          tournament:
            $ref: '#/components/schemas/Tournament'
    TournamentSeason:
      required:
      - active
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the object
        name:
          type: string
          description: Human readable name of the TournamentSeason
          example: 2015/2016
        active:
          type: boolean
          description: Whether the season is currently running or whether it is finished
      example:
        name: 2015/2016
        active: true
        id: 0
    TournamentSeasonStageWithStandingGroups:
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        name:
          type: string
          description: Human readable name of the TournamentSeasonStage
          example: Champions League Final Stages
        cup:
          type: boolean
          description: "Whether the stage is a cup such as Champions League Knockout\
            \ stage, World Cup Final stages, etc"
        tournament_season_id:
          type: integer
          description: Id of the TournamentSeason in which the stage is part of
        tournament_id:
          type: integer
          description: Id of the Tournament in whicth the stage is part of
        country:
          $ref: '#/components/schemas/Country'
        confederation:
          type: string
          description: Indicates which confederation the stage is part of (for World
            Cup qualif.)
      example:
        country:
          code: code
          name: England
          url_flag: http://football-api.devks.msk.bg/assets/image.png
          id: 0
        name: Champions League Final Stages
        id: 1
        tournament_season_id: 0
        cup: true
        tournament_id: 6
        confederation: confederation
      allOf:
      - $ref: '#/components/schemas/TournamentSeasonStage'
      - type: object
        properties:
          groups:
            type: array
            description: List of StageGroup objects in the TournamentSeasonStage.
              Available if the property stage_groups exists
            items:
              $ref: '#/components/schemas/StageGroupWithStanding'
    TournamentSeasonStage:
      required:
      - country
      - cup
      - id
      - name
      - tournament_id
      - tournament_season_id
      type: object
      properties:
        start_date:
          type: string
          description: Date when the first game of the stage is held
          format: date
          example: 2015-06-20
        end_date:
          type: string
          description: Date when the final game of the stage is held
          format: date
          example: 2015-06-21
        qualification:
          type: boolean
          description: Whether the stage is a qualification stage to a main Tournrament
            (Champions League Qualification)
        live:
          type: boolean
          description: Whether the API has live scores for the stage
        stage_groups:
          type: integer
          description: Number of groups in the stage. Only available if the stage
            has groups (Champions League Group Stage)
        standing:
          type: array
          description: League standing data if available and if cup = false
          items:
            $ref: '#/components/schemas/LeagueStandingData'
        rounds:
          type: array
          description: List of rounds in the Stage if cup = true
          items:
            $ref: '#/components/schemas/Round'
        id:
          type: integer
          description: Unique identifier
          example: 1
        name:
          type: string
          description: Human readable name of the TournamentSeasonStage
          example: Champions League Final Stages
        cup:
          type: boolean
          description: "Whether the stage is a cup such as Champions League Knockout\
            \ stage, World Cup Final stages, etc"
        tournament_season_id:
          type: integer
          description: Id of the TournamentSeason in which the stage is part of
        tournament_id:
          type: integer
          description: Id of the Tournament in whicth the stage is part of
        country:
          $ref: '#/components/schemas/Country'
        confederation:
          type: string
          description: Indicates which confederation the stage is part of (for World
            Cup qualif.)
      example:
        end_date: 2015-06-21T00:00:00.000+00:00
        country:
          code: code
          name: England
          url_flag: http://football-api.devks.msk.bg/assets/image.png
          id: 0
        tournament_season_id: 1
        tournament_id: 5
        qualification: true
        standing:
        - ""
        - ""
        name: Champions League Final Stages
        stage_groups: 6
        id: 1
        live: true
        rounds:
        - start_time: 2000-01-23T04:56:07.000+00:00
          round: round
          end_time: 2000-01-23T04:56:07.000+00:00
          events:
          - penalty_away: 4
            start_time: 2000-01-23T04:56:07.000+00:00
            goal_away: 1
            penalty_home: 5
            agg_away: 2
            goal_home: 2
            id: 0
            home_team:
              url_logo: http://football-api.devks.msk.bg/assets/image.png
              gender: MALE
              undecided: true
              name: Real Madrid
              national: true
              threeLetterCode: RMA
              id: 6
              shortName: Loko Plovdiv
              type: placeholder
            event_status:
              code: finished
              name: Finished
              short_name: FIN
              type: finished
            agg_home: 4
            away_team: null
          - penalty_away: 4
            start_time: 2000-01-23T04:56:07.000+00:00
            goal_away: 1
            penalty_home: 5
            agg_away: 2
            goal_home: 2
            id: 0
            home_team:
              url_logo: http://football-api.devks.msk.bg/assets/image.png
              gender: MALE
              undecided: true
              name: Real Madrid
              national: true
              threeLetterCode: RMA
              id: 6
              shortName: Loko Plovdiv
              type: placeholder
            event_status:
              code: finished
              name: Finished
              short_name: FIN
              type: finished
            agg_home: 4
            away_team: null
        - start_time: 2000-01-23T04:56:07.000+00:00
          round: round
          end_time: 2000-01-23T04:56:07.000+00:00
          events:
          - penalty_away: 4
            start_time: 2000-01-23T04:56:07.000+00:00
            goal_away: 1
            penalty_home: 5
            agg_away: 2
            goal_home: 2
            id: 0
            home_team:
              url_logo: http://football-api.devks.msk.bg/assets/image.png
              gender: MALE
              undecided: true
              name: Real Madrid
              national: true
              threeLetterCode: RMA
              id: 6
              shortName: Loko Plovdiv
              type: placeholder
            event_status:
              code: finished
              name: Finished
              short_name: FIN
              type: finished
            agg_home: 4
            away_team: null
          - penalty_away: 4
            start_time: 2000-01-23T04:56:07.000+00:00
            goal_away: 1
            penalty_home: 5
            agg_away: 2
            goal_home: 2
            id: 0
            home_team:
              url_logo: http://football-api.devks.msk.bg/assets/image.png
              gender: MALE
              undecided: true
              name: Real Madrid
              national: true
              threeLetterCode: RMA
              id: 6
              shortName: Loko Plovdiv
              type: placeholder
            event_status:
              code: finished
              name: Finished
              short_name: FIN
              type: finished
            agg_home: 4
            away_team: null
        start_date: 2015-06-20T00:00:00.000+00:00
        cup: true
        confederation: confederation
    Venue:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier in the system
        name:
          type: string
          description: Human readable name of the Venue
        country:
          $ref: '#/components/schemas/Country'
        city:
          type: string
        url_image:
          type: string
          description: 600x450 image of the Venue
          example: http://football-api.devks.msk.bg/assets/image.jpeg
        capacity:
          type: integer
          description: Total capacity of the stadium
        lat:
          type: number
          description: Latitude coordinate of the stadium's location
          format: float
        lng:
          type: number
          description: Longitude coordinate of the stadium's location
          format: float
      example:
        country: null
        lng: 3.6160767
        city: city
        name: name
        id: 2
        lat: 9.301444
        url_image: http://football-api.devks.msk.bg/assets/image.jpeg
        capacity: 7
    mappings_search_body:
      required:
      - mapping_requests
      - provider
      type: object
      properties:
        provider:
          type: string
          description: Data entity provider name
        mapping_requests:
          type: array
          description: Mapping requests
          items:
            $ref: '#/components/schemas/v2_MappingRequestDto'
    v2_TeamColors_colors:
      type: object
      properties:
        type:
          type: string
        color_code:
          type: string
      example:
        type: type
        color_code: color_code
  parameters:
    from_time:
      name: from_time
      in: query
      description: "Filter events, which have a start_time after the specified date,\
        \ format is RFC 3339"
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
    to_time:
      name: to_time
      in: query
      description: "Filter events, which have a start_time before the specified date,\
        \ format is RFC 3339"
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
    direction:
      name: direction
      in: query
      description: Whether to sort the results by ascending or descending order
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - asc
        - desc
    id:
      name: id
      in: path
      description: Unique identifier of the resource.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        default: "1"
    X-Odd-Client:
      name: X-Odd-Client
      in: header
      description: Identifies the client for which to return filtered bookmakers with
        affiliate URLs. Without the parameter can not sort odd_providers or provide
        affiliate links. Instead it will sometimes give a 'coupon' key with the odds
        fo building URLs.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Accept-Language:
      name: Accept-Language
      in: header
      description: List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation
      required: false
      style: simple
      explode: false
      schema:
        type: string
        default: en
    language_code:
      name: language_code
      in: query
      description: Returns translated response based on the language code
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: en
    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result
        set
      required: true
      style: form
      explode: true
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: Limit the number of results returned
      required: true
      style: form
      explode: true
      schema:
        type: integer
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
