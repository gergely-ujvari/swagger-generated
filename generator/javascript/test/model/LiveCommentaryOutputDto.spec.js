/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FootballApi);
  }
}(this, function(expect, FootballApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('LiveCommentaryOutputDto', function() {
      beforeEach(function() {
        instance = new FootballApi.LiveCommentaryOutputDto();
      });

      it('should create an instance of LiveCommentaryOutputDto', function() {
        // TODO: update the code to test LiveCommentaryOutputDto
        expect(instance).to.be.a(FootballApi.LiveCommentaryOutputDto);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

      it('should have the property templateText (base name: "template_text")', function() {
        // TODO: update the code to test the property templateText
        expect(instance).to.have.property('templateText');
        // expect(instance.templateText).to.be(expectedValueLiteral);
      });

      it('should have the property autoText (base name: "auto_text")', function() {
        // TODO: update the code to test the property autoText
        expect(instance).to.have.property('autoText');
        // expect(instance.autoText).to.be(expectedValueLiteral);
      });

      it('should have the property elapsed (base name: "elapsed")', function() {
        // TODO: update the code to test the property elapsed
        expect(instance).to.have.property('elapsed');
        // expect(instance.elapsed).to.be(expectedValueLiteral);
      });

      it('should have the property details (base name: "details")', function() {
        // TODO: update the code to test the property details
        expect(instance).to.have.property('details');
        // expect(instance.details).to.be(expectedValueLiteral);
      });

      it('should have the property incidentTimestamp (base name: "incident_timestamp")', function() {
        // TODO: update the code to test the property incidentTimestamp
        expect(instance).to.have.property('incidentTimestamp');
        // expect(instance.incidentTimestamp).to.be(expectedValueLiteral);
      });

    });
  });

}));
