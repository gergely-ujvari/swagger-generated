/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FootballApi);
  }
}(this, function(expect, FootballApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FootballApi.VenuesApi();
  });

  describe('(package)', function() {
    describe('VenuesApi', function() {
      describe('v2VenuesGet', function() {
        it('should call v2VenuesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for v2VenuesGet call and complete the assertions
          /*
          var opts = {};

          instance.v2VenuesGet(offset, limit, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FootballApi.V2VenuesList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v2VenuesIdGet', function() {
        it('should call v2VenuesIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for v2VenuesIdGet call and complete the assertions
          /*
          var opts = {};

          instance.v2VenuesIdGet(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FootballApi.V2VenuesGetId);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v2VenuesIdPut', function() {
        it('should call v2VenuesIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for v2VenuesIdPut call and complete the assertions
          /*
          var opts = {};

          instance.v2VenuesIdPut(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FootballApi.V2VenuesPut);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v2VenuesPost', function() {
        it('should call v2VenuesPost successfully', function(done) {
          // TODO: uncomment, update parameter values for v2VenuesPost call and complete the assertions
          /*
          var opts = {};

          instance.v2VenuesPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FootballApi.V2Venues);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
