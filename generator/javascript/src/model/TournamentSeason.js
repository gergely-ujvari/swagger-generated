/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The TournamentSeason model module.
 * @module model/TournamentSeason
 * @version 0.0.1
 */
export class TournamentSeason {
  /**
   * Constructs a new <code>TournamentSeason</code>.
   * @alias module:model/TournamentSeason
   * @class
   * @param id {Number} Unique identifier of the object
   * @param name {String} Human readable name of the TournamentSeason
   * @param active {Boolean} Whether the season is currently running or whether it is finished
   */
  constructor(id, name, active) {
    this.id = id;
    this.name = name;
    this.active = active;
  }

  /**
   * Constructs a <code>TournamentSeason</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TournamentSeason} obj Optional instance to populate.
   * @return {module:model/TournamentSeason} The populated <code>TournamentSeason</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TournamentSeason();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('active'))
        obj.active = ApiClient.convertToType(data['active'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Unique identifier of the object
 * @member {Number} id
 */
TournamentSeason.prototype.id = undefined;

/**
 * Human readable name of the TournamentSeason
 * @member {String} name
 */
TournamentSeason.prototype.name = undefined;

/**
 * Whether the season is currently running or whether it is finished
 * @member {Boolean} active
 */
TournamentSeason.prototype.active = undefined;

