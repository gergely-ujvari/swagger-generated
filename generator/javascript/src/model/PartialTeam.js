/*
 * Football API
 * API for accessing various kinds of football data, updated in real time.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The PartialTeam model module.
 * @module model/PartialTeam
 * @version 0.0.1
 */
export class PartialTeam {
  /**
   * Constructs a new <code>PartialTeam</code>.
   * @alias module:model/PartialTeam
   * @class
   * @param id {Number} Unique identifier of the Team within the system
   * @param name {String} Human readable name of the team
   */
  constructor(id, name) {
    this.id = id;
    this.name = name;
  }

  /**
   * Constructs a <code>PartialTeam</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PartialTeam} obj Optional instance to populate.
   * @return {module:model/PartialTeam} The populated <code>PartialTeam</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PartialTeam();
      if (data.hasOwnProperty('national'))
        obj.national = ApiClient.convertToType(data['national'], 'Boolean');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('threeLetterCode'))
        obj.threeLetterCode = ApiClient.convertToType(data['threeLetterCode'], 'String');
      if (data.hasOwnProperty('shortName'))
        obj.shortName = ApiClient.convertToType(data['shortName'], 'String');
      if (data.hasOwnProperty('undecided'))
        obj.undecided = ApiClient.convertToType(data['undecided'], 'Boolean');
      if (data.hasOwnProperty('gender'))
        obj.gender = ApiClient.convertToType(data['gender'], 'String');
      if (data.hasOwnProperty('url_logo'))
        obj.urlLogo = ApiClient.convertToType(data['url_logo'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * Whether the team is a football club(Barcelona) or national team(Spain)
 * @member {Boolean} national
 */
PartialTeam.prototype.national = undefined;

/**
 * Unique identifier of the Team within the system
 * @member {Number} id
 */
PartialTeam.prototype.id = undefined;

/**
 * Human readable name of the team
 * @member {String} name
 */
PartialTeam.prototype.name = undefined;

/**
 * 3 character name of team
 * @member {String} threeLetterCode
 */
PartialTeam.prototype.threeLetterCode = undefined;

/**
 * Manually inserted short name of team
 * @member {String} shortName
 */
PartialTeam.prototype.shortName = undefined;

/**
 * If present and = true, the team can be one of two teams. This occurs in cup competitions when some games are still not played
 * @member {Boolean} undecided
 */
PartialTeam.prototype.undecided = undefined;

/**
 * Allowed values for the <code>gender</code> property.
 * @enum {String}
 * @readonly
 */
PartialTeam.GenderEnum = {
  /**
   * value: "MALE"
   * @const
   */
  MALE: "MALE",

  /**
   * value: "FEMALE"
   * @const
   */
  FEMALE: "FEMALE"
};
/**
 * Team gender, MALE, FEMALE or null
 * @member {module:model/PartialTeam.GenderEnum} gender
 */
PartialTeam.prototype.gender = undefined;

/**
 * @member {String} urlLogo
 */
PartialTeam.prototype.urlLogo = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PartialTeam.TypeEnum = {
  /**
   * value: "placeholder"
   * @const
   */
  placeholder: "placeholder",

  /**
   * value: "club"
   * @const
   */
  club: "club",

  /**
   * value: "national"
   * @const
   */
  national: "national"
};
/**
 * @member {module:model/PartialTeam.TypeEnum} type
 */
PartialTeam.prototype.type = undefined;

