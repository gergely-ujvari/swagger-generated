{
    "swagger": "2.0",
    "info": {
        "title": "Football API",
        "description": "API for accessing various kinds of football data, updated in real time.",
        "version": "0.0.1"
    },
    "host": "false",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json; charset=utf-8"
    ],
    "paths": {
        "/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "description": "Get a list of available Country resources",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available Country objects in the system",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country"
                            }
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get a list of Events",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "from_time",
                        "in": "query",
                        "description": "Filter events, which have a start_time after the specified date, format is RFC 3339",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to_time",
                        "in": "query",
                        "description": "Filter events, which have a start_time before the specified date, format is RFC 3339",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group events by a specified property. Event models are returned as an 'items' array inside the property object. Can be used to return events in a more convenient format for displaying. NOTE: when using this parameter the response schema changes.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "",
                            "tournament_season_stage"
                        ]
                    },
                    {
                        "name": "client_order",
                        "in": "query",
                        "description": "Order matching events for a specific client",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "sportalios"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of event objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            }
        },
        "/events/since": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get a list of events which have been updated since the specified timestamp",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "last_update",
                        "in": "query",
                        "description": "Filter events, have been updated after the specified date-time. By default will return updated Events during the last hour",
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching Event objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies additional information to include with the standing response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "form",
                            "form.events"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event object",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/teams/{id}/events": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get a list of events in which a team with a specified id has participated",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/from_time"
                    },
                    {
                        "$ref": "#/parameters/to_time"
                    },
                    {
                        "$ref": "#/parameters/direction"
                    },
                    {
                        "name": "tournament_season_stage_id",
                        "in": "query",
                        "description": "Filter events for a specific tournament_season_stage.id",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching Event objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/events/by_teams": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get a list of events by home and away team id",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "home_id",
                        "in": "query",
                        "description": "Filter events with home team id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "away_id",
                        "in": "query",
                        "description": "Filter events with away team id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event object",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/events/live": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get a list of events which are currently live",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group events by a specified property. Event models are returned as an 'items' array inside the property object. Can be used to return events in a more convenient format for displaying. NOTE: when using this parameter the response schema changes.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "tournament_season_stage"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of event objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            }
        },
        "/matches": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get a list of matches for team/between teams",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "from_start_time",
                        "in": "query",
                        "description": "Return matches with start_time >= from_start_time. RFC 3339 format",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to_start_time",
                        "in": "query",
                        "description": "Return matches with start_time <= from_start_time. RFC 3339 format",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "team_ids",
                        "in": "query",
                        "description": "List for team IDs separated by commas. In case of one ID, it will return all matches for a selected team, in case of multiple - it will return matches between selected teams.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "match_ids",
                        "in": "query",
                        "description": "List for match IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tournament_ids",
                        "in": "query",
                        "description": "List for tournament IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "stage_ids",
                        "in": "query",
                        "description": "List for stage IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rounds",
                        "in": "query",
                        "description": "List for rounds separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "season_ids",
                        "in": "query",
                        "description": "List for season IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status_types",
                        "in": "query",
                        "description": "List of status types.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "finished",
                            "notstarted",
                            "inprogress",
                            "interrupted",
                            "cancelled"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Results offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Results limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "tournament_order",
                        "in": "query",
                        "description": "Tournament filtering and ordering.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "referee_id",
                        "in": "query",
                        "description": "Filter matches by referee",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue_id",
                        "in": "query",
                        "description": "Filter matches by venue",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status_code",
                        "in": "query",
                        "description": "Filter matches by event_status.code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Result ordering - asc/desc",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of event objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            }
        },
        "/matches/{id}/commentary": {
            "get": {
                "tags": [
                    "Matches"
                ],
                "description": "Get a list of live commentaries with specified match id and language",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "language_code",
                        "in": "query",
                        "description": "Return translations depending on language code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Match comentary details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LiveCommentaryOutputDto"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/incidents": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get a list of EventIncident for a specified Event (goal, subs, red cards, penalties, etc).",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group results by a property. If 'team' is used the json object has 'home_team' and 'away_team', each containing an array of EventIncident objects",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "team"
                        ]
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Whether to sort the results by ascending or descending order",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EventIncident objects related to the specifed event id.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventIncident"
                            }
                        }
                    }
                }
            }
        },
        "/event_incidents": {
            "get": {
                "tags": [
                    "EventIncidents"
                ],
                "description": "Get a list of EventIncident for a specified Event (goal, subs, red cards, penalties, etc).",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "last_update",
                        "in": "query",
                        "description": "Filter events, have been updated after the specified date-time. By default will return updates modified in the last 24 hours",
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EventIncident which have been updated after a specified time",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventIncident"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/players": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get a list of players which are involved in an Event. The list can be used to build lineups for the teams",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group results by a property. If 'team' is used the json object has 'home_team' and 'away_team', each containing an array of EventPlayer objects",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "team"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EventPlayers which form the lineups of the two teams in the Event",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventPlayer"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/lineups": {
            "get": {
                "tags": [
                    "Events"
                ],
                "description": "Get lineup information for an event. Includes players, formation and coach",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event.id for which lineups are requested",
                        "required": true,
                        "type": "integer",
                        "default": 835
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lineup information for the home and away team",
                        "schema": {
                            "$ref": "#/definitions/Lineup"
                        }
                    },
                    "404": {
                        "description": "No lineup information found for the event",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/lineups": {
            "get": {
                "tags": [
                    "Lineups"
                ],
                "description": "Get lineup information. Includes players, formation and coach",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "last_update",
                        "in": "query",
                        "description": "Filter lineups which have updates only after the specified time",
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lineup information for the home and away team",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lineup"
                            }
                        }
                    }
                }
            }
        },
        "/event_player_types": {
            "get": {
                "tags": [
                    "EventPlayerType"
                ],
                "description": "Get a list of available EventPlayerType objects in the system",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EventPlayerType objects available in the system",
                        "schema": {
                            "$ref": "#/definitions/EventPlayerType"
                        }
                    }
                }
            }
        },
        "/event_status": {
            "get": {
                "tags": [
                    "EventStatus"
                ],
                "description": "Get a list of available EventStatus objects in the system",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EventStatus objects available in the system",
                        "schema": {
                            "$ref": "#/definitions/EventStatus"
                        }
                    }
                }
            }
        },
        "/events/{id}/teamstats": {
            "get": {
                "tags": [
                    "TeamStats"
                ],
                "description": "Get statistics for the performance of each team involved in the event",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event.id for which team stats are requested",
                        "required": true,
                        "type": "integer",
                        "default": 835
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics about each of the teams involved in the event",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventTeamStats"
                            }
                        }
                    }
                }
            }
        },
        "/event_teamstats": {
            "get": {
                "tags": [
                    "TeamStats"
                ],
                "description": "Get statistics for the performance of each team involved in the event",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "last_update",
                        "in": "query",
                        "description": "Filter events, have been updated after the specified date-time. By default will return updates modified in the last 24 hours",
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics about each of the teams involved in the event",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventTeamStats"
                            }
                        }
                    }
                }
            }
        },
        "/mappings/sportal": {
            "get": {
                "tags": [
                    "Mappings"
                ],
                "description": "Get FootballApi ID to Sportal ID maps for various types of objects",
                "parameters": [
                    {
                        "name": "object",
                        "in": "query",
                        "description": "Filter ID maps by a specific object type",
                        "type": "string",
                        "enum": [
                            "player",
                            "team",
                            "tournament",
                            "tournament_season",
                            "tournament_season_stage"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Return single Sportal ID for the specified FootballAPI 'id'",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID mappings for objects where key=FotballAPI ID and value=Sportal ID",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/mappings/sportal/reverse": {
            "get": {
                "tags": [
                    "Mappings"
                ],
                "description": "Get Sportal to Football API ID maps for various types of objects",
                "parameters": [
                    {
                        "name": "object",
                        "in": "query",
                        "description": "Filter ID maps by a specific object type",
                        "type": "string",
                        "enum": [
                            "player",
                            "team",
                            "tournament",
                            "tournament_season",
                            "tournament_season_stage"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Return single FotballApi ID for the specified Sportal 'id'",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID mappings for objects where key=Sportal ID and value=FootballAPI ID ",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/odd_providers": {
            "get": {
                "tags": [
                    "Odds"
                ],
                "description": "Return a list of OddProviders available in the system. If X-Odd-Client is specified they will be filtered and ordered by the client configuration.",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Odd-Client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of OddProvider objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OddProvider"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/pregameodds": {
            "get": {
                "tags": [
                    "Odds",
                    "Events"
                ],
                "description": "Get available pre-game odds for an Event",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/X-Odd-Client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pre-game odds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Odd"
                            }
                        }
                    }
                }
            }
        },
        "/pregameodds": {
            "get": {
                "tags": [
                    "Odds"
                ],
                "description": "Returns a list of Odd Providers which have odds available for a given Event",
                "parameters": [
                    {
                        "name": "from_time",
                        "in": "query",
                        "description": "Return odds for Events with start_time >= from_time. RFC 3339 format",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to_time",
                        "in": "query",
                        "description": "Return odds for Events with start_time <= to_time. RFC 3339 format",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "$ref": "#/parameters/X-Odd-Client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Odds grouped by event id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Odd"
                            }
                        }
                    }
                }
            }
        },
        "/liveodds": {
            "get": {
                "tags": [
                    "Odds"
                ],
                "description": "Get a list of liveodds available in the system",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Odd-Client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of liveodds grouped by event id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Odd"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/liveodds": {
            "get": {
                "tags": [
                    "Odds"
                ],
                "description": "Get available liveodds for an event",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/X-Odd-Client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of liveodds for an event",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Odd"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/odds": {
            "get": {
                "tags": [
                    "Odds"
                ],
                "description": "Get a list of odds available in the system",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/X-Odd-Client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of odds grouped by event id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Odd"
                            }
                        }
                    }
                }
            }
        },
        "/odds": {
            "get": {
                "tags": [
                    "Odds"
                ],
                "description": "Returns a list of Odds",
                "parameters": [
                    {
                        "name": "from_event_start_time",
                        "in": "query",
                        "description": "Return odds for Events with start_time >= from_event_start_time. RFC 3339 format",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to_event_start_time",
                        "in": "query",
                        "description": "Return odds for Events with start_time <= to_event_start_time. RFC 3339 format",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "odd_client",
                        "in": "query",
                        "description": "Odd client code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Team ID",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "team_ids",
                        "in": "query",
                        "description": "List for team IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_order",
                        "in": "query",
                        "description": "Order matching events for a specific client",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sport_type",
                        "in": "query",
                        "description": "Sport type filter",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "football"
                        ]
                    },
                    {
                        "name": "match_ids",
                        "in": "query",
                        "description": "List for match IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tournament_ids",
                        "in": "query",
                        "description": "List for tournament IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "season_ids",
                        "in": "query",
                        "description": "List for season IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_type",
                        "in": "query",
                        "description": "Event type filter",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "match"
                        ]
                    },
                    {
                        "name": "odds_type",
                        "in": "query",
                        "description": "Pregame or live odds selector.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "prematch",
                            "live",
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Odds grouped by event id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Odd"
                            }
                        }
                    }
                }
            }
        },
        "/players": {
            "get": {
                "tags": [
                    "Players"
                ],
                "description": "Search player list by parameters",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter players by names. Length must be >= 4. The filter matches on a per word basis. If you query for 'Ronaldo' it will match both 'Cristiono Ronaldo' and 'Ronaldo'",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "max_results",
                        "in": "query",
                        "description": "Limit the number of results returned",
                        "type": "integer",
                        "default": 100
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Return only players which are currently in the specified team's squad",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching Players",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Player"
                            }
                        }
                    }
                }
            }
        },
        "/players/{id}": {
            "get": {
                "tags": [
                    "Players"
                ],
                "description": "Get information about a specific Player",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specify additional information to include in the response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "club",
                            "club,current_league"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player information",
                        "schema": {
                            "$ref": "#/definitions/PlayerProfile"
                        }
                    },
                    "404": {
                        "description": "No Player with id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/players/{id}/teams": {
            "get": {
                "tags": [
                    "Players"
                ],
                "description": "Get the Teams in which a Player has participated during his career",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PlayerTeam"
                            }
                        }
                    },
                    "404": {
                        "description": "No Player with specifed id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/players/{id}/statistics": {
            "get": {
                "tags": [
                    "Players"
                ],
                "description": "Returns statistics throughout a Player's career",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter statistics for different types of team and competition",
                        "type": "string",
                        "enum": [
                            "club",
                            "national",
                            "league"
                        ]
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group response by a given property",
                        "type": "string",
                        "enum": [
                            "tournament",
                            "team"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player statistics information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PlayerStatistics"
                            }
                        }
                    },
                    "404": {
                        "description": "No Player with specifed id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/stages": {
            "get": {
                "tags": [
                    "Stages"
                ],
                "description": "Listing for Stages resources",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Filter stages by a team which is participating in the stage",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "tournament_ids",
                        "in": "query",
                        "description": "CSV list of tournament.id values to filter stages",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of StageDTO objects matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StageDto"
                            }
                        }
                    }
                }
            }
        },
        "/standing_rules": {
            "get": {
                "tags": [
                    "StandingRule"
                ],
                "description": "Get a list of available StandingRule objects in the system",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of StandingRule objects available in the system",
                        "schema": {
                            "$ref": "#/definitions/StandingRule"
                        }
                    }
                }
            }
        },
        "/statistics/players": {
            "get": {
                "tags": [
                    "PlayerStatistic"
                ],
                "parameters": [
                    {
                        "name": "player_ids",
                        "in": "query",
                        "description": "List for player IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "season_ids",
                        "in": "query",
                        "description": "List for season IDs separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Return only statistics for players which are currently in the specified team's squad",
                        "type": "integer"
                    },
                    {
                        "name": "language_code",
                        "in": "query",
                        "description": "Return translations depending on language code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of player statistics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OutputDto"
                            }
                        }
                    }
                }
            }
        },
        "/teams/{id}/form": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get Team form information accross all tournaments",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Whether to include information about every event in the TeamForm response",
                        "type": "string",
                        "enum": [
                            "events"
                        ]
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Team Form information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamForm"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/countries/{id}/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get Teams for a specific Country.id",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "national",
                        "in": "query",
                        "description": "Filter teams for different types of national and non national",
                        "type": "string",
                        "enum": [
                            "1",
                            "0",
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Teams from specified Country",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Team"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/teams/{id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get information about a specific Team",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specifies additional information to include with the Team response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "form",
                            "form.events",
                            "form.events,next_event"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team object",
                        "schema": {
                            "$ref": "#/definitions/Team"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/teams/{id}/players": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get the current squad for a Team",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group players by a specific property",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "position"
                        ]
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TeamPlayer objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamPlayer"
                            }
                        }
                    }
                }
            }
        },
        "/teams/{id}/players/statistics": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get player statistics for the current season in the Team's League",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group the response by a specific property",
                        "type": "string",
                        "enum": [
                            "player.position"
                        ]
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player statistics grouped by TournamentSeason",
                        "schema": {
                            "$ref": "#/definitions/TeamPlayerSeasonStatistics"
                        }
                    }
                }
            }
        },
        "/teams/{id}/players/statistics/seasons": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get a list of TournamentSeasons for which Player Statistics are available",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TournamentSeasons which Player Statistics are available",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TournamentSeasonWithTournament"
                            }
                        }
                    }
                }
            }
        },
        "/teams/{id}/players/statistics/seasons/{seasonId}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get player statistics for the current season in the Team's League",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "seasonId",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeason resource",
                        "required": true,
                        "type": "integer",
                        "default": 14
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Group the response by a specific property",
                        "type": "string",
                        "enum": [
                            "player.position"
                        ]
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player statistics grouped by TournamentSeason",
                        "schema": {
                            "$ref": "#/definitions/TeamPlayerSeasonStatistics"
                        }
                    }
                }
            }
        },
        "/teams/{id}/statistics/league": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get the statistics for the latest League the team participates in",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "standing",
                        "in": "query",
                        "description": "Select whether to include a full league standing or just the team's position",
                        "type": "string",
                        "default": "full",
                        "enum": [
                            "team",
                            "full"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns relevant team performance stats for the current League season",
                        "schema": {
                            "$ref": "#/definitions/TeamSeasonStatistics"
                        }
                    },
                    "404": {
                        "description": "Current league for the given team not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Search all teams by parameters",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by team. Length must be >= 4. The filter matches on a per word basis. If you query for 'United' it will match both 'West Ham United' and 'Newcastle United'",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "max_results",
                        "in": "query",
                        "description": "Limit the number of results returned",
                        "type": "integer",
                        "default": 100
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Filter teams just from the specified country",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching Teams",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Team"
                            }
                        }
                    }
                }
            }
        },
        "/tournaments": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get a list of available Tournament resources",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Get Tournaments from a specific Country.id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "client_order",
                        "in": "query",
                        "description": "Get Tournaments ordered for a specific client",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "sportalios"
                        ]
                    },
                    {
                        "name": "expand_client_sortorder",
                        "in": "query",
                        "description": "Include extra information with Tournament response",
                        "type": "string",
                        "enum": [
                            "sportalios"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Tournament objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tournament"
                            }
                        }
                    }
                }
            }
        },
        "/tournaments/{id}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tournament object",
                        "schema": {
                            "$ref": "#/definitions/TournamentWithSeasons"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/{id}/seasons": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get a list of seasons for a given Tournament id",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TournamentSeason objects which are part of the Tournament",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TournamentSeason"
                            }
                        }
                    }
                }
            }
        },
        "/tournaments/{id}/seasons/latest": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get information for the latest season for a given Tournament. This is an alias to whatever resource is first in /tournaments/{id}/seasons",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the Tournament resource",
                        "required": true,
                        "type": "integer",
                        "default": 27
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object giving information for the latest season of the specified Tournament id",
                        "schema": {
                            "$ref": "#/definitions/TournamentSeasonWithStages"
                        }
                    },
                    "404": {
                        "description": "Indicates that the specified Tournament id does not exist or the Tournament has no seasons",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/{id}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get information for a given TournamentSeason resource id.",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeason resource",
                        "required": true,
                        "type": "integer",
                        "default": 52
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the specified TournamentSeason resource",
                        "schema": {
                            "$ref": "#/definitions/TournamentSeasonWithStages"
                        }
                    },
                    "404": {
                        "description": "Indicates no TournamentSeason resource with the specified id is found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/{id}/topscorer": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get a list of topscorers for a specific TournamentSeason resource.",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeason resource",
                        "required": true,
                        "type": "integer",
                        "default": 52
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of topscorers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TopscorerStandingData"
                            }
                        }
                    },
                    "404": {
                        "description": "Indicates no TournamentSeason resource with the specified id is found or a topscorer list is currently not available for this Resource",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/{id}/cardlist": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get a standing by red,yellow cards for a specific TournamentSeason resource.",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeason resource",
                        "required": true,
                        "type": "integer",
                        "default": 52
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standing of Players based on red,yellow cards",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CardlistStandingData"
                            }
                        }
                    },
                    "404": {
                        "description": "Indicates no TournamentSeason resource with the specified id is found or no card ranking is currently not available for this Resource",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/{id}/teams": {
            "get": {
                "tags": [
                    "Tournaments",
                    "Teams"
                ],
                "description": "Get a list of Teams, which are participating in a given TournamentSeason",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeason resource",
                        "required": true,
                        "type": "integer",
                        "default": 52
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of participating Teams",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartialTeam"
                            }
                        }
                    },
                    "404": {
                        "description": "No TournamentSeason with the specified id is found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/{id}/events": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get a list of Events, for a given TournamentSeason",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeason resource",
                        "required": true,
                        "type": "integer",
                        "default": 52
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Whether to group events by date",
                        "type": "string",
                        "enum": [
                            "date"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events in the season",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "No TournamentSeason with the specified id is found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/{id}/standing": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get Standing for a TournamentSeasonStage Resource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeasonStage resource",
                        "required": true,
                        "type": "integer",
                        "default": 57
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specify additional information to include with the response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "rules",
                            "rules,form",
                            "rules,form.events",
                            "form",
                            "form.events"
                        ]
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standing information for the given TournamentSeaonStage resource if available",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LeagueStandingData"
                            }
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/{id}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get information for a TournamentSeasonStage Resource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeasonStage resource",
                        "required": true,
                        "type": "integer",
                        "default": 57
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specify additional information to include with the response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "standing",
                            "standing.rules",
                            "standing.rules,standing.form",
                            "standing.rules,standing.form.events",
                            "standing.form",
                            "standing.form.events"
                        ]
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the given TournamentSeasonStage and Standing information (if available and requested)",
                        "schema": {
                            "$ref": "#/definitions/TournamentSeasonStageWithStandingGroups"
                        }
                    },
                    "404": {
                        "description": "A TournamentSeasonStage resource with the specified id is not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/{id}/rounds": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get a list of rounds for a specific TournamentSeasonStage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeasonStage resource",
                        "required": true,
                        "type": "integer",
                        "default": 57
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specify what additional information to include with the response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "events"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of rounds, their start and end times for a TournamentSeasonStage",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Round"
                            }
                        }
                    },
                    "404": {
                        "description": "A TournamentSeasonStage resource with the specified id is not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/{id}/events": {
            "get": {
                "tags": [
                    "Tournaments",
                    "Events"
                ],
                "description": "Get a list of events which are fixtures in a given TournamentSeasonStage resource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeasonStage resource",
                        "required": true,
                        "type": "integer",
                        "default": 57
                    },
                    {
                        "name": "round",
                        "in": "query",
                        "description": "Filter the event list by a specific round",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort results by date in ascending or descending order",
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events which are fixtures in a TournamentSeasonStage",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventsByDate"
                            }
                        }
                    },
                    "404": {
                        "description": "A TournamentSeasonStage resource with the specified id is not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/{id}/teams": {
            "get": {
                "tags": [
                    "Tournaments",
                    "Teams"
                ],
                "description": "Get a list of Teams, which are participating in a given TournamentSeasonStage",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the TournamentSeasonStage resource",
                        "required": true,
                        "type": "integer",
                        "default": 57
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of participating Teams",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartialTeam"
                            }
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/groups/{id}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get information for a StageGroup Resource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the StageGroup resource",
                        "required": true,
                        "type": "integer",
                        "default": 313
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specify additional information to include with the response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "standing",
                            "standing.rules",
                            "standing.rules,standing.form",
                            "standing.rules,standing.form.events",
                            "standing.form",
                            "standing.form.events"
                        ]
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the given StageGroup and Standing information (if available and requested)",
                        "schema": {
                            "$ref": "#/definitions/StageGroupWithStandingTournamentSeasonStage"
                        }
                    },
                    "404": {
                        "description": "A StageGroup resource with the specified id is not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/groups/{id}/standing": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get Standing for a StageGroup Resource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the StageGroup resource",
                        "required": true,
                        "type": "integer",
                        "default": 313
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Specify additional information to include with the response",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "rules",
                            "rules,form",
                            "rules,form.events",
                            "form",
                            "form.events"
                        ]
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standing information for the given StageGroup resource if available",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LeagueStandingData"
                            }
                        }
                    },
                    "404": {
                        "description": "A StageGroup resource with the specified id is not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/tournaments/seasons/stages/active": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "description": "Get all currently active tournament season stages",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TournamentSeasonStage"
                            }
                        }
                    }
                }
            }
        },
        "/v2/assets": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "description": "Bulk Upsert assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "assets",
                        "in": "body",
                        "description": "Array of assets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_AssetInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assets successfuly saved",
                        "schema": {
                            "$ref": "#/definitions/v2_Asset"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assets"
                ],
                "description": "Bulk delete assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "assets",
                        "in": "body",
                        "description": "Array of assets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_AssetInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assets successfully deleted."
                    }
                }
            }
        },
        "/v2/blacklist/search": {
            "post": {
                "tags": [
                    "Blacklist"
                ],
                "description": "Bulk find in blacklist table and return matching entries by the unique blacklist key.",
                "parameters": [
                    {
                        "name": "blacklistKeys",
                        "in": "body",
                        "description": "Array of blacklistsKeys",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BlacklistKeyDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of blacklist objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BlacklistDto"
                            }
                        }
                    }
                }
            }
        },
        "/v2/blacklist/{id}": {
            "delete": {
                "tags": [
                    "Blacklist"
                ],
                "summary": "Remove the specified resource from storage.",
                "description": "Remove blacklist record by id.",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Blacklist deleted"
                    },
                    "404": {
                        "description": "No Blacklist with id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/cities": {
            "post": {
                "tags": [
                    "Cities"
                ],
                "description": "Store a newly created city in storage",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "city",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CityEditDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City successfuly saved, returns city information",
                        "schema": {
                            "$ref": "#/definitions/CityDto"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/cities/{id}": {
            "put": {
                "tags": [
                    "Cities"
                ],
                "description": "Update city information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "city",
                        "in": "body",
                        "description": "City information to save in persistance",
                        "schema": {
                            "$ref": "#/definitions/CityEditDto"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated city object",
                        "schema": {
                            "$ref": "#/definitions/CityDto"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/coaches": {
            "get": {
                "tags": [
                    "Coaches"
                ],
                "description": "List coaches with offset and limit parameters",
                "parameters": [
                    {
                        "$ref": "#/parameters/language_code"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of coaches",
                        "schema": {
                            "$ref": "#/definitions/CoachPageDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Coaches"
                ],
                "description": "Store a newly created coach in storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "coach",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CoachEditDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coach successfuly saved, returns coach information",
                        "schema": {
                            "$ref": "#/definitions/CoachDto"
                        }
                    }
                }
            }
        },
        "/v2/coaches/{id}": {
            "get": {
                "tags": [
                    "Coaches"
                ],
                "description": "Find coach by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/language_code"
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coach data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CoachDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Coaches"
                ],
                "description": "Update coach information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "coach",
                        "in": "body",
                        "description": "Coach information to save in persistance",
                        "schema": {
                            "$ref": "#/definitions/CoachEditDto"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated coach object",
                        "schema": {
                            "$ref": "#/definitions/CoachDto"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/knockout-schemes/{stage_id}": {
            "get": {
                "tags": [
                    "Knockout Scheme"
                ],
                "parameters": [
                    {
                        "name": "stage_id",
                        "in": "path",
                        "description": "Get knockout schemes for given stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of knockout schemes if any are found for the ID.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_KnockoutScheme"
                            }
                        }
                    }
                }
            }
        },
        "/v2/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "description": "Get all possible languages.",
                "responses": {
                    "200": {
                        "description": "List of language objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LanguageDto"
                            }
                        }
                    }
                }
            }
        },
        "/v2/matches/{id}/lineups": {
            "get": {
                "tags": [
                    "Lineups"
                ],
                "description": "Get lineups by match id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lineups data",
                        "schema": {
                            "$ref": "#/definitions/v2_Lineup"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Lineups"
                ],
                "description": "Update Lineup information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lineup",
                        "in": "body",
                        "description": "Lineup information to save in persistance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_LineupInput"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lineup successfuly saved",
                        "schema": {
                            "$ref": "#/definitions/v2_Lineup"
                        }
                    },
                    "404": {
                        "description": "No Lineup with id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/matches/{id}": {
            "get": {
                "tags": [
                    "Matches"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Match object",
                        "schema": {
                            "$ref": "#/definitions/v2_Match"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Matches"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "match",
                        "in": "body",
                        "description": "Match information to save",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_MatchInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Match object",
                        "schema": {
                            "$ref": "#/definitions/v2_Match"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/matches": {
            "get": {
                "tags": [
                    "Matches"
                ],
                "description": "Get a list of matches",
                "parameters": [
                    {
                        "name": "tournament_ids",
                        "in": "query",
                        "description": "Filter matches, which have been played as part of the listed tournaments",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "season_ids",
                        "in": "query",
                        "description": "Filter matches, which have been played as part of the listed tournament seasons",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stage_ids",
                        "in": "query",
                        "description": "Filter matches, which have been played as part of the listed tournament stages",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "group_ids",
                        "in": "query",
                        "description": "Filter matches, which have been played as part of the listed tournament groups",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "round_ids",
                        "in": "query",
                        "description": "Filter matches, which have been played as part of the listed tournament rounds",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "round_filter",
                        "in": "query",
                        "description": "Filter matches by combinations of stage_id and round_id. Format: {stage_id}:{round_id}",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from_kickoff_time",
                        "in": "query",
                        "description": "Filter matches, which have a start_time after the specified date, format is ISO 8601",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to_kickoff_time",
                        "in": "query",
                        "description": "Filter matches, which have a start_time before the specified date, format is ISO 8601",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "team_ids",
                        "in": "query",
                        "description": "Filter matches by teams which have taken part in them",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status_types",
                        "in": "query",
                        "description": "Filter matches by their status types",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status_codes",
                        "in": "query",
                        "description": "Filter matches by their status codes",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "referee_id",
                        "in": "query",
                        "description": "Filter matches by the referee who has taken part in them",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "venue_id",
                        "in": "query",
                        "description": "Filter matches by the venue that has hosted them",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort matches in asc|desc order by start_time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Select an upper limit for the matches that would be returned",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Select an offset for the matches that would be returned",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of match objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_Match"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "post": {
                "tags": [
                    "Matches"
                ],
                "parameters": [
                    {
                        "name": "match",
                        "in": "body",
                        "description": "Match information to save",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_MatchInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Match object",
                        "schema": {
                            "$ref": "#/definitions/v2_Match"
                        }
                    }
                }
            }
        },
        "/v2/matches/livescore": {
            "get": {
                "tags": [
                    "Matches"
                ],
                "description": "Get a list of matches",
                "parameters": [
                    {
                        "name": "match_ids",
                        "in": "query",
                        "description": "Filter matches by their IDs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter matches by the date when they were played, format is ISO 8601",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "utc_offset",
                        "in": "query",
                        "description": "Filter matches by date and UTC offset, allowed value range: [-12,14]",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "tournament_group",
                        "in": "query",
                        "description": "Filter matches by a tournament group code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status_types",
                        "in": "query",
                        "description": "Filter matches by status types",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "FINISHED",
                                "NOT_STARTED",
                                "LIVE",
                                "INTERRUPTED",
                                "CANCELLED",
                                "UNKNOWN"
                            ]
                        }
                    },
                    {
                        "name": "selection_filter",
                        "in": "query",
                        "description": "Fetch selected matches for specific date and tournament_group",
                        "required": false,
                        "type": "string",
                        "default": "ENABLED",
                        "enum": [
                            "ENABLED",
                            "DISABLED"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of match objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_Match"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/v2/matches/{id}/events": {
            "get": {
                "tags": [
                    "MatchEvents"
                ],
                "description": "Get match events by match id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of events for given match",
                        "schema": {
                            "$ref": "#/definitions/v2_MatchEventProfile"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MatchEvents"
                ],
                "description": "Replaces all match events with the given input",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "matchEvents",
                        "in": "body",
                        "description": "Match event information to save",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_MatchEventInputWrapper"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of events for given match",
                        "schema": {
                            "$ref": "#/definitions/v2_MatchEventProfile"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/players": {
            "get": {
                "tags": [
                    "Players"
                ],
                "description": "Search player list by parameters",
                "parameters": [
                    {
                        "$ref": "#/parameters/language_code"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching Players and meta data.",
                        "schema": {
                            "$ref": "#/definitions/PlayerPageDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Players"
                ],
                "description": "Store a newly created player in storage.",
                "parameters": [
                    {
                        "name": "player",
                        "in": "body",
                        "description": "PlayerEditDto object",
                        "schema": {
                            "$ref": "#/definitions/PlayerEditDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player successfuly saved, returns Player information",
                        "schema": {
                            "$ref": "#/definitions/PlayerDto"
                        }
                    }
                }
            }
        },
        "/v2/players/{id}": {
            "get": {
                "tags": [
                    "Players"
                ],
                "description": "Get player by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/language_code"
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player data",
                        "schema": {
                            "$ref": "#/definitions/v2_PlayerProfile"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Players"
                ],
                "description": "Update Player information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "body",
                        "description": "Player information to save in persistance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlayerEditDto"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player successfuly saved"
                    },
                    "404": {
                        "description": "No Player with id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/players/{id}/clubs/active": {
            "put": {
                "tags": [
                    "Players"
                ],
                "description": "Update the active clubs of a player",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "clubs",
                        "in": "body",
                        "description": "Active clubs input",
                        "schema": {
                            "$ref": "#/definitions/v2_ActiveClubsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated active clubs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_PlayerActiveClub"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/statistics/players/match": {
            "put": {
                "tags": [
                    "PlayerStatistic"
                ],
                "description": "Bulk Upsert player statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "player_statistics",
                        "in": "body",
                        "description": "Array of player match statistics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_PlayerStatisticInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player Statistics successfuly saved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_PlayerStatisticOutput"
                            }
                        }
                    },
                    "404": {
                        "description": "No entity with id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/statistics/players/season": {
            "get": {
                "tags": [
                    "PlayerStatistic"
                ],
                "description": "Retrieve player statistics, grouped by player and season",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "player_ids",
                        "in": "query",
                        "description": "CSV list of player id values",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "season_ids",
                        "in": "query",
                        "description": "CSV list of tournament season id values",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Team unique identifier",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player Statistics successfuly retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_PlayerSeasonStatisticOutputCollection"
                            }
                        }
                    }
                }
            }
        },
        "/v2/presidents": {
            "post": {
                "tags": [
                    "Presidents"
                ],
                "description": "Store a newly created president in storage",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "president",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/v2_PresidentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "President successfuly saved, returns president information",
                        "schema": {
                            "$ref": "#/definitions/v2_President"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/presidents/{id}": {
            "put": {
                "tags": [
                    "Presidents"
                ],
                "description": "Update president information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "president",
                        "in": "body",
                        "description": "President information to save in persistance",
                        "schema": {
                            "$ref": "#/definitions/v2_PresidentUpdate"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated president object",
                        "schema": {
                            "$ref": "#/definitions/v2_President"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/mappings/search": {
            "post": {
                "tags": [
                    "ProviderMappings"
                ],
                "description": "Bulk find provider to internal ID mappings by their provider ID and entity type.",
                "parameters": [
                    {
                        "name": "mapping_request",
                        "in": "body",
                        "description": "Data entity provider name and array of mapping requests",
                        "schema": {
                            "required": [
                                "provider",
                                "mapping_requests"
                            ],
                            "properties": {
                                "provider": {
                                    "description": "Data entity provider name",
                                    "type": "string"
                                },
                                "mapping_requests": {
                                    "description": "Mapping requests",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/v2_MappingRequestDto"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of mapping objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_MappingDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/v2/referees": {
            "get": {
                "tags": [
                    "Referees"
                ],
                "description": "List referees with offset and limit parameters",
                "parameters": [
                    {
                        "name": "season_ids",
                        "in": "query",
                        "description": "Filter referees which have refereed matches in the specified CSV season_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of referees",
                        "schema": {
                            "$ref": "#/definitions/RefereePageDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Referees"
                ],
                "description": "Store a newly created referee in storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "referee",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RefereeEditDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Referee successfuly saved, returns referee information",
                        "schema": {
                            "$ref": "#/definitions/RefereeDto"
                        }
                    }
                }
            }
        },
        "/v2/referees/{id}": {
            "get": {
                "tags": [
                    "Referees"
                ],
                "description": "Get referee by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Referee data",
                        "schema": {
                            "$ref": "#/definitions/RefereeDto"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Referees"
                ],
                "description": "Update referee information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "referee",
                        "in": "body",
                        "description": "Referee information to save in persistance",
                        "schema": {
                            "$ref": "#/definitions/RefereeEditDto"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated referee object",
                        "schema": {
                            "$ref": "#/definitions/RefereeDto"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/rounds": {
            "get": {
                "tags": [
                    "Rounds"
                ],
                "description": "Get a list of rounds per season",
                "parameters": [
                    {
                        "name": "season_id",
                        "in": "query",
                        "description": "Filter round types per a season ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Round types object",
                        "schema": {
                            "$ref": "#/definitions/v2_RoundTypes"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/v2/stages/{id}/rounds": {
            "get": {
                "tags": [
                    "Rounds"
                ],
                "description": "Get a list of rounds per stage",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Round types object",
                        "schema": {
                            "$ref": "#/definitions/v2_RoundTypes"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/v2/seasons": {
            "get": {
                "tags": [
                    "Season"
                ],
                "description": "Get seasons by tournament_id, team_id and status",
                "parameters": [
                    {
                        "name": "tournament_id",
                        "in": "query",
                        "description": "Required only if no other parameters are provided",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Required only if no other paramenters are provided",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Required only if no other parameters are provided",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ACTIVE"
                        ]
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seasons details",
                        "schema": {
                            "$ref": "#/definitions/v2_SeasonList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Season"
                ],
                "description": "Create a new season",
                "parameters": [
                    {
                        "name": "season",
                        "in": "body",
                        "description": "Season information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_TournamentSeasonInsertInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seasons details",
                        "schema": {
                            "$ref": "#/definitions/v2_Season"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Resource already exists"
                    }
                }
            }
        },
        "/v2/seasons/{id}": {
            "put": {
                "tags": [
                    "Season"
                ],
                "description": "Update an existing season",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "name",
                        "in": "body",
                        "description": "Season name",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_TournamentSeasonUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seasons details",
                        "schema": {
                            "$ref": "#/definitions/v2_Season"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Resource already exists"
                    }
                }
            }
        },
        "/v2/tournaments/{id}/seasons/current": {
            "patch": {
                "tags": [
                    "Season"
                ],
                "description": "Set the current season as active and change all other seasons in the tournament to inactive",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "season_id",
                        "in": "body",
                        "description": "Season unique identifier",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_TournamentSeasonStatusInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seasons details",
                        "schema": {
                            "$ref": "#/definitions/v2_Season"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Season not part of tournament"
                    }
                }
            }
        },
        "/v2/seasons/details": {
            "get": {
                "tags": [
                    "Season"
                ],
                "description": "Get the details of a season by season_id, or by tournament_id and active status",
                "parameters": [
                    {
                        "name": "season_id",
                        "in": "query",
                        "description": "The ID of the season of interest",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tournament_id",
                        "in": "query",
                        "description": "The ID of the tournament whose active season is of interest",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Required only when the tournament_id parameter is provided",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CURRENT"
                        ]
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seasons details",
                        "schema": {
                            "$ref": "#/definitions/v2_SeasonDetails"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "422": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/v2/seasons/{id}/stages": {
            "get": {
                "tags": [
                    "Season"
                ],
                "description": "List all stages for specific season",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stages successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/v2_SeasonStageCollection"
                        }
                    },
                    "404": {
                        "description": "Season not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Season"
                ],
                "description": "Create or update multiple stages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "stages",
                        "in": "body",
                        "description": "List of stages to be updated or created",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_SeasonStage"
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stages successfully created/updated",
                        "schema": {
                            "$ref": "#/definitions/v2_SeasonStageCollection"
                        }
                    },
                    "404": {
                        "description": "Season or stage not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Season has enetpulse mapping | Duplicate parameter (name, order_in_season) | Duplicate item"
                    }
                }
            }
        },
        "/v2/stages/{id}": {
            "delete": {
                "tags": [
                    "Season"
                ],
                "description": "Permanently delete stage",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stage successfully deleted"
                    },
                    "400": {
                        "description": "Stage has enetpulse mapping | Stage has match link"
                    },
                    "404": {
                        "description": "Stage not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/stages/{id}/groups": {
            "get": {
                "tags": [
                    "Stages"
                ],
                "description": "List all groups for specific stage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/v2_StageGroupCollection"
                        }
                    },
                    "404": {
                        "description": "Stage not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stages"
                ],
                "description": "Create or update multiple groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groups",
                        "in": "body",
                        "description": "List of groups to be updated or created",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_StageGroup"
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups successfully created/updated",
                        "schema": {
                            "$ref": "#/definitions/v2_StageGroupCollection"
                        }
                    },
                    "404": {
                        "description": "Stage or group not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Stage has enetpulse mapping | Duplicate item"
                    }
                }
            }
        },
        "/v2/groups/{id}": {
            "delete": {
                "tags": [
                    "Stages"
                ],
                "description": "Permanently delete group",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully deleted"
                    },
                    "400": {
                        "description": "Group has enetpulse mapping | Group has match link"
                    },
                    "404": {
                        "description": "Group not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/stages/{id}/teams": {
            "put": {
                "tags": [
                    "Stages"
                ],
                "description": "Replace teams in stage",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "team_id",
                        "in": "body",
                        "description": "List of team ids",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_StageTeamInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Teams in stage successfully replaced"
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Resource already exists"
                    }
                }
            }
        },
        "/v2/standings/league/{entity}/{id}": {
            "put": {
                "tags": [
                    "Standings"
                ],
                "description": "Update a league standing table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "standingEntries",
                        "in": "body",
                        "description": "List of all entries for the standing",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_LeagueStandingInput"
                        }
                    },
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "type of entity to attach standing to",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "season",
                            "stage",
                            "group"
                        ]
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Standing saved"
                    }
                }
            }
        },
        "/v2/standings/topscorer/{entity}/{id}": {
            "put": {
                "tags": [
                    "Standings"
                ],
                "description": "Update a topscorer standing table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "standingEntries",
                        "in": "body",
                        "description": "List of all entries for the standing",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_TopScorerStandingInput"
                        }
                    },
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "type of entity to attach standing to",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "season",
                            "stage",
                            "group"
                        ]
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Standing saved"
                    }
                }
            }
        },
        "/v2/standings/league/{entity}/{id}/rules": {
            "put": {
                "tags": [
                    "Standings"
                ],
                "description": "Attach standing rules to a league standing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "standingRules",
                        "in": "body",
                        "description": "list of rules for every rank",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_StandingEntryRuleWrapper"
                        }
                    },
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "type of entity to attach standing to",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "season",
                            "stage",
                            "group"
                        ]
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Standing rules saved"
                    }
                }
            }
        },
        "/v2/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get teams list",
                "parameters": [
                    {
                        "$ref": "#/parameters/language_code"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching teams and meta data.",
                        "schema": {
                            "$ref": "#/definitions/TeamPageDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "description": "Manually insert team.",
                "parameters": [
                    {
                        "name": "teamEditDto",
                        "in": "body",
                        "description": "TeamEditDto object",
                        "schema": {
                            "$ref": "#/definitions/TeamEditDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team data",
                        "schema": {
                            "$ref": "#/definitions/v2_TeamProfile"
                        }
                    }
                }
            }
        },
        "/v2/teams/{id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get team by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/language_code"
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team data",
                        "schema": {
                            "$ref": "#/definitions/v2_TeamProfile"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Teams"
                ],
                "description": "Update Team information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "body",
                        "description": "Team information to save in persistance",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TeamEditDto"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team successfuly saved",
                        "schema": {
                            "$ref": "#/definitions/v2_TeamProfile"
                        }
                    },
                    "404": {
                        "description": "No Team with id found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/teams/colors": {
            "post": {
                "tags": [
                    "Teams"
                ],
                "description": "Manually insert team colors by team or event.",
                "parameters": [
                    {
                        "name": "teamColorsDto",
                        "in": "body",
                        "description": "Team shirt colors data",
                        "schema": {
                            "$ref": "#/definitions/v2_TeamColors"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team shirt colors data",
                        "schema": {
                            "$ref": "#/definitions/v2_TeamColors"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        },
        "/v2/teams/{id}/squad": {
            "get": {
                "tags": [
                    "TeamSquad"
                ],
                "description": "Get teams squad",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "memberStatus",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "default": "ALL",
                        "enum": [
                            "ALL",
                            "ACTIVE",
                            "INACTIVE"
                        ]
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team Squad details",
                        "schema": {
                            "$ref": "#/definitions/v2_TeamSquad"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "TeamSquad"
                ],
                "description": "Update TeamSquad members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "squadMembers",
                        "in": "body",
                        "description": "TeamSquad members to update. Null value for a property means no update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_TeamSquadInput"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Squad successfuly saved",
                        "schema": {
                            "$ref": "#/definitions/v2_TeamSquad"
                        }
                    }
                }
            }
        },
        "/v2/tournaments/groups": {
            "get": {
                "tags": [
                    "TournamentGroups"
                ],
                "description": "List all tournament groups",
                "responses": {
                    "200": {
                        "description": "Tournament groups successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/v2_TournamentGroupCollection"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TournamentGroups"
                ],
                "description": "Create a new tournament group",
                "parameters": [
                    {
                        "name": "group",
                        "in": "body",
                        "description": "Tournament group information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_TournamentGroupInsertInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tournament group successfully created"
                    },
                    "404": {
                        "description": "Tournament not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Tournament group with code/name already exists"
                    }
                }
            }
        },
        "/v2/tournaments/groups/{code}": {
            "get": {
                "tags": [
                    "TournamentGroups"
                ],
                "description": "List all tournaments for a given group name and their order",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Tournament group code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All tournaments for a given group successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/v2_TournamentGroupGetOutput"
                        }
                    },
                    "404": {
                        "description": "Tournament group not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TournamentGroups"
                ],
                "description": "Update an existing tournament group",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Tournament group unique code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "body",
                        "description": "Tournament group information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2_TournamentGroupUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tournament group successfully updated"
                    },
                    "404": {
                        "description": "Tournament not found | Tournament group not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "400": {
                        "description": "Tournament group with name already exists"
                    }
                }
            }
        },
        "/v2/tournaments/groups/{code}/selection/{date}": {
            "post": {
                "tags": [
                    "TournamentGroups"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Client code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date in ISO 8601 format (Y-m-d)",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "match_ids",
                        "in": "body",
                        "description": "Array of match ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2_TournamentGroupSelection"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tournament group selection successfully inserted"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/v2/translations": {
            "post": {
                "tags": [
                    "Translations"
                ],
                "description": "Bulk Upsert translations by primary key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "translations",
                        "in": "body",
                        "description": "Array of translations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslationDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translations successfuly saved, returns translations information",
                        "schema": {
                            "$ref": "#/definitions/TranslationDto"
                        }
                    }
                }
            }
        },
        "/v2/translations/search": {
            "post": {
                "tags": [
                    "Translations"
                ],
                "description": "Bulk find in translations table and return matching entries by the unique translation key.",
                "parameters": [
                    {
                        "name": "translationKeys",
                        "in": "body",
                        "description": "Array of translationKeys",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslationKeyDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of translation objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslationDto"
                            }
                        }
                    }
                }
            }
        },
        "/v2/translations/entities": {
            "get": {
                "tags": [
                    "Translations"
                ],
                "description": "Get all possible translation entities.",
                "responses": {
                    "200": {
                        "description": "List of translation entities objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslationEntityDto"
                            }
                        }
                    }
                }
            }
        },
        "/v2/venues": {
            "get": {
                "tags": [
                    "Venues"
                ],
                "description": "List venues with offset and limit parameters",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "season_ids",
                        "in": "query",
                        "description": "Filter venues which have hosted matches in the specified CSV season_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of venues",
                        "schema": {
                            "$ref": "#/definitions/v2_VenuesList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Venues"
                ],
                "description": "Store a newly created venue in storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "venue",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/v2_post_venues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Venue successfuly saved, returns venue information",
                        "schema": {
                            "$ref": "#/definitions/v2_Venues"
                        }
                    }
                }
            }
        },
        "/v2/venues/{id}": {
            "get": {
                "tags": [
                    "Venues"
                ],
                "description": "Get venue by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/language_code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Venue data",
                        "schema": {
                            "$ref": "#/definitions/v2_VenuesGetId"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Venues"
                ],
                "description": "Update venue information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "venue",
                        "in": "body",
                        "description": "Venue information to save in persistance",
                        "schema": {
                            "$ref": "#/definitions/v2_put_venues"
                        }
                    },
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Venue successfuly saved, returns venue information",
                        "schema": {
                            "$ref": "#/definitions/v2_VenuesPut"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v2_LeagueStandingInput": {
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_LeagueEntryInput"
                    }
                }
            }
        },
        "v2_TopScorerStandingInput": {
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_TopScorerEntryInput"
                    }
                }
            }
        },
        "v2_StandingEntryRuleWrapper": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_StandingEntryRuleInput"
                    }
                }
            }
        },
        "NotFoundError": {
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Resource with identifier 1 not found."
                }
            }
        },
        "v2_AssetDeleteInput": {
            "properties": {
                "entity": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "context_type": {
                    "type": "string"
                },
                "context_id": {
                    "type": "string"
                }
            }
        },
        "v2_AssetInput": {
            "properties": {
                "entity": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "context_type": {
                    "type": "string"
                },
                "context_id": {
                    "type": "string"
                }
            }
        },
        "v2_AssetCollection": {},
        "v2_Asset": {
            "properties": {
                "entity": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "context_type": {
                    "type": "string"
                },
                "context_id": {
                    "type": "string"
                }
            }
        },
        "BlacklistDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "$ref": "#/definitions/BlacklistKeyDto"
                }
            }
        },
        "BlacklistKeyDto": {
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "TRANSLATION",
                        "ASSET",
                        "RELATION",
                        "ENTITY"
                    ]
                },
                "entity": {
                    "type": "string",
                    "enum": [
                        "TEAM",
                        "TOURNAMENT",
                        "SEASON",
                        "GROUP",
                        "STAGE",
                        "COUNTRY",
                        "PLAYER",
                        "COACH",
                        "LINEUP_PLAYER_TYPE",
                        "MATCH_STATUS",
                        "VENUE",
                        "REFEREE",
                        "CITY",
                        "PRESIDENT",
                        "LINEUP",
                        "MATCH",
                        "ASSET",
                        "STANDING_RULE",
                        "ROUND_TYPE"
                    ]
                },
                "entity_id": {
                    "type": "string"
                },
                "context": {
                    "type": "string"
                }
            }
        },
        "CityDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/CountryDto"
                }
            }
        },
        "CityEditDto": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                }
            }
        },
        "v2_City": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                }
            }
        },
        "CoachDto": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/CountryDto"
                },
                "birthdate": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "CoachEditDto": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "CoachPageDto": {
            "properties": {
                "coaches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoachDto"
                    }
                },
                "page_meta": {
                    "$ref": "#/definitions/PageMetaDto"
                }
            }
        },
        "v2_Coach": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "birthdate": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "CountryDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "v2_Country": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "v2_StageGroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_in_stage": {
                    "type": "integer"
                }
            }
        },
        "v2_Group": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_in_stage": {
                    "type": "integer"
                }
            }
        },
        "v2_StageGroupCollection": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_Group"
                    }
                }
            }
        },
        "v2_KnockoutEdgeRound": {
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "v2_KnockoutGroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_KnockoutTeam"
                    }
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_KnockoutMatch"
                    }
                },
                "child_object_id": {
                    "type": "string"
                }
            }
        },
        "v2_KnockoutMatch": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "kickoff_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "score": {
                    "$ref": "#/definitions/v2_MatchScore"
                },
                "home_team_id": {
                    "type": "string"
                },
                "away_team_id": {
                    "type": "string"
                }
            }
        },
        "v2_KnockoutRound": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_KnockoutGroup"
                    }
                }
            }
        },
        "v2_KnockoutScheme": {
            "properties": {
                "start_round": {
                    "$ref": "#/definitions/v2_KnockoutEdgeRound"
                },
                "end_round": {
                    "$ref": "#/definitions/v2_KnockoutEdgeRound"
                },
                "small_final": {
                    "type": "boolean"
                },
                "stage": {
                    "$ref": "#/definitions/v2_MatchStage"
                },
                "rounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_KnockoutRound"
                    }
                }
            }
        },
        "v2_KnockoutTeam": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "three_letter_code": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "LanguageDto": {
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "v2_LineupInput": {
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "CONFIRMED",
                        "UNCONFIRMED"
                    ]
                },
                "home_team": {
                    "$ref": "#/definitions/v2_LineupTeamInput"
                },
                "away_team": {
                    "$ref": "#/definitions/v2_LineupTeamInput"
                }
            }
        },
        "v2_LineupPlayerInput": {
            "properties": {
                "type_id": {
                    "type": "string"
                },
                "player_id": {
                    "type": "string"
                },
                "position_x": {
                    "type": "integer"
                },
                "position_y": {
                    "type": "integer"
                },
                "shirt_number": {
                    "type": "integer"
                }
            }
        },
        "v2_LineupTeamInput": {
            "properties": {
                "formation": {
                    "type": "string"
                },
                "coach_id": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_LineupPlayerInput"
                    }
                }
            }
        },
        "v2_Lineup": {
            "properties": {
                "match_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "CONFIRMED",
                        "UNCONFIRMED",
                        "NOT_AVAILABLE"
                    ]
                },
                "home_team": {
                    "$ref": "#/definitions/v2_LineupTeamDto"
                },
                "away_team": {
                    "$ref": "#/definitions/v2_LineupTeamDto"
                }
            }
        },
        "v2_LineupPlayerDto": {
            "properties": {
                "type": {},
                "player": {
                    "$ref": "#/definitions/v2_Player"
                },
                "position_x": {
                    "type": "integer"
                },
                "position_y": {
                    "type": "integer"
                },
                "shirt_number": {
                    "type": "integer"
                }
            }
        },
        "v2_LineupTeamDto": {
            "properties": {
                "formation": {
                    "type": "string"
                },
                "coach": {
                    "$ref": "#/definitions/v2_Coach"
                },
                "team_id": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_LineupPlayerDto"
                    }
                }
            }
        },
        "LiveCommentaryOutputDto": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "template_text": {
                    "type": "string"
                },
                "auto_text": {
                    "type": "string"
                },
                "elapsed": {
                    "type": "integer"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "incident_timestamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "v2_MatchInput": {
            "properties": {
                "status_id": {
                    "type": "string"
                },
                "kickoff_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "stage_id": {
                    "type": "string"
                },
                "home_team_id": {
                    "type": "string"
                },
                "away_team_id": {
                    "type": "string"
                },
                "round_key": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "venue_id": {
                    "type": "string"
                },
                "referees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_MatchRefereeInput"
                    }
                },
                "score": {
                    "$ref": "#/definitions/v2_MatchScoreInput"
                },
                "spectators": {
                    "type": "integer"
                },
                "coverage": {
                    "type": "string",
                    "enum": [
                        "LIVE",
                        "NOT_LIVE",
                        "UNKNOWN"
                    ]
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "phase_started_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "v2_MatchRefereeInput": {
            "properties": {
                "referee_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "REFEREE"
                    ]
                }
            }
        },
        "v2_MatchScoreInput": {
            "properties": {
                "total": {
                    "$ref": "#/definitions/v2_TeamScoreInput"
                },
                "half_time": {
                    "$ref": "#/definitions/v2_TeamScoreInput"
                },
                "regular_time": {
                    "$ref": "#/definitions/v2_TeamScoreInput"
                },
                "extra_time": {
                    "$ref": "#/definitions/v2_TeamScoreInput"
                },
                "penalty_shootout": {
                    "$ref": "#/definitions/v2_TeamScoreInput"
                },
                "aggregate": {
                    "$ref": "#/definitions/v2_TeamScoreInput"
                }
            }
        },
        "v2_TeamScoreInput": {
            "properties": {
                "home": {
                    "type": "integer"
                },
                "away": {
                    "type": "integer"
                }
            }
        },
        "v2_Match": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/v2_MatchStatus"
                },
                "kickoff_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "stage": {
                    "$ref": "#/definitions/v2_MatchStage"
                },
                "season": {
                    "$ref": "#/definitions/v2_Season"
                },
                "group": {
                    "$ref": "#/definitions/v2_Group"
                },
                "round": {
                    "$ref": "#/definitions/v2_MatchRound"
                },
                "home_team": {
                    "$ref": "#/definitions/v2_MatchTeamDto"
                },
                "away_team": {
                    "$ref": "#/definitions/v2_MatchTeamDto"
                },
                "referees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_MatchReferee"
                    }
                },
                "venue": {
                    "$ref": "#/definitions/v2_MatchVenue"
                },
                "spectators": {
                    "type": "integer"
                },
                "coverage": {
                    "type": "string",
                    "enum": [
                        "LIVE",
                        "NOT_LIVE",
                        "UNKNOWN"
                    ]
                },
                "minute": {
                    "$ref": "#/definitions/v2_MatchMinute"
                },
                "phase_started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "score": {
                    "$ref": "#/definitions/v2_MatchScore"
                }
            }
        },
        "v2_MatchMinute": {
            "properties": {
                "regular_time": {
                    "type": "integer"
                },
                "injury_time": {
                    "type": "integer"
                }
            }
        },
        "v2_MatchReferee": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "REFEREE"
                    ]
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "v2_MatchScore": {
            "properties": {
                "total": {
                    "$ref": "#/definitions/v2_TeamScore"
                },
                "half_time": {
                    "$ref": "#/definitions/v2_TeamScore"
                },
                "regular_time": {
                    "$ref": "#/definitions/v2_TeamScore"
                },
                "extra_time": {
                    "$ref": "#/definitions/v2_TeamScore"
                },
                "penalty_shootout": {
                    "$ref": "#/definitions/v2_TeamScore"
                },
                "aggregate": {
                    "$ref": "#/definitions/v2_TeamScore"
                }
            }
        },
        "v2_TeamScore": {
            "properties": {
                "home": {
                    "type": "integer"
                },
                "away": {
                    "type": "integer"
                }
            }
        },
        "v2_MatchTeamDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "three_letter_code": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "PLACEHOLDER",
                        "NATIONAL",
                        "CLUB"
                    ]
                },
                "$shirt_color": {
                    "type": "string"
                }
            }
        },
        "v2_MatchVenue": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "v2_Matches": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_Match"
                    }
                },
                "page_meta": {
                    "$ref": "#/definitions/PageMetaDto"
                }
            }
        },
        "v2_MatchesLivescore": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_Match"
                    }
                }
            }
        },
        "v2_MatchEventInputWrapper": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_MatchEventInput"
                    }
                }
            }
        },
        "v2_MatchEventInput": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "type_code": {
                    "type": "string",
                    "enum": [
                        "YELLOW_RED_CARD",
                        "PENALTY_SHOOTOUT_MISSED",
                        "PENALTY_SHOOTOUT_SCORED",
                        "SUBSTITUTION",
                        "GOAL",
                        "RED_CARD",
                        "PENALTY_MISS",
                        "YELLOW_CARD",
                        "ASSIST",
                        "PENALTY_GOAL",
                        "OWN_GOAL"
                    ]
                },
                "team_position": {
                    "type": "string",
                    "enum": [
                        "HOME",
                        "AWAY"
                    ]
                },
                "minute": {
                    "type": "integer"
                },
                "primary_player_id": {
                    "type": "string"
                },
                "secondary_player_id": {
                    "type": "string"
                },
                "sort_order": {
                    "description": "Property is used to determine the order of events, if two or more events have the same minute",
                    "type": "integer"
                }
            }
        },
        "v2_MatchEvent": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "match_id": {
                    "type": "string"
                },
                "type_code": {
                    "type": "string",
                    "enum": [
                        "YELLOW_RED_CARD",
                        "PENALTY_SHOOTOUT_MISSED",
                        "PENALTY_SHOOTOUT_SCORED",
                        "SUBSTITUTION",
                        "GOAL",
                        "RED_CARD",
                        "PENALTY_MISS",
                        "YELLOW_CARD",
                        "ASSIST",
                        "PENALTY_GOAL",
                        "OWN_GOAL"
                    ]
                },
                "team_position": {
                    "type": "string",
                    "enum": [
                        "HOME",
                        "AWAY"
                    ]
                },
                "minute": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "string"
                },
                "primary_player": {
                    "$ref": "#/definitions/v2_Player"
                },
                "secondary_player": {
                    "$ref": "#/definitions/v2_Player"
                },
                "score": {
                    "$ref": "#/definitions/v2_TeamScore"
                }
            }
        },
        "v2_MatchEventProfile": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_MatchEvent"
                    }
                }
            }
        },
        "v2_MatchStatus": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "FINISHED",
                        "NOT_STARTED",
                        "LIVE",
                        "INTERRUPTED",
                        "CANCELLED",
                        "UNKNOWN"
                    ]
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "PlayerDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/CountryDto"
                },
                "active": {
                    "type": "boolean"
                },
                "birthdate": {
                    "type": "string"
                },
                "birth_city": {
                    "$ref": "#/definitions/CityDto"
                },
                "profile": {
                    "$ref": "#/definitions/PlayerProfileDto"
                },
                "social": {
                    "$ref": "#/definitions/PlayerEditSocialDto"
                },
                "position": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "PlayerEditDto": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "birthdate": {
                    "type": "string"
                },
                "birth_city_id": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/PlayerProfileDto"
                },
                "social": {
                    "$ref": "#/definitions/PlayerEditSocialDto"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "PlayerEditSocialDto": {
            "properties": {
                "web": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "facebook_id": {
                    "type": "string"
                },
                "instagram_id": {
                    "type": "string"
                },
                "wikipedia_id": {
                    "type": "string"
                },
                "youtube_channel_id": {
                    "type": "string"
                }
            }
        },
        "PlayerPageDto": {
            "properties": {
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlayerDto"
                    }
                },
                "page_meta": {
                    "$ref": "#/definitions/PageMetaDto"
                }
            }
        },
        "PlayerProfileDto": {
            "properties": {
                "height": {
                    "type": "string"
                },
                "weight": {
                    "type": "string"
                }
            }
        },
        "v2_ActiveClubsInput": {
            "properties": {
                "clubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_ActiveTeamInput"
                    }
                }
            }
        },
        "v2_ActiveTeamInput": {
            "properties": {
                "team_id": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "shirt_number": {
                    "type": "integer"
                }
            }
        },
        "v2_Player": {
            "required": [
                "id",
                "name",
                "country"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "active": {
                    "type": "boolean"
                },
                "birthdate": {
                    "type": "string"
                },
                "birth_city": {
                    "$ref": "#/definitions/v2_City"
                },
                "profile": {
                    "$ref": "#/definitions/PlayerProfileDto"
                },
                "social": {
                    "$ref": "#/definitions/PlayerEditSocialDto"
                },
                "position": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "v2_PlayerProfile": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "active": {
                    "type": "boolean"
                },
                "birthdate": {
                    "type": "string"
                },
                "birth_city": {
                    "$ref": "#/definitions/v2_City"
                },
                "profile": {
                    "$ref": "#/definitions/PlayerProfileDto"
                },
                "social": {
                    "$ref": "#/definitions/PlayerEditSocialDto"
                },
                "position": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_PlayerActiveClub"
                    }
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "v2_PlayerActiveClub": {
            "properties": {
                "team": {
                    "$ref": "#/definitions/v2_Team"
                },
                "contract_type": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "shirt_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                }
            }
        },
        "v2_PlayerStatisticInput": {
            "properties": {
                "player_id": {
                    "type": "string"
                },
                "match_id": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                },
                "statistics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlayerStatisticItem"
                    }
                },
                "origin": {
                    "type": "string"
                }
            }
        },
        "PlayerStatisticItem": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v2_PlayerSeasonStatisticOutput": {
            "properties": {
                "player": {
                    "$ref": "#/definitions/v2_Player"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_Team"
                    }
                },
                "season": {
                    "$ref": "#/definitions/v2_Season"
                },
                "statistics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_StatisticItem"
                    }
                }
            }
        },
        "v2_PlayerSeasonStatisticOutputCollection": {
            "properties": {
                "statistics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_PlayerSeasonStatisticOutput"
                    }
                }
            }
        },
        "v2_StatisticItem": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v2_PlayerStatisticOutput": {
            "properties": {
                "player_id": {
                    "type": "string"
                },
                "match_id": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                },
                "statistics": {},
                "origin": {
                    "type": "string"
                }
            }
        },
        "v2_PresidentInput": {
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "v2_PresidentUpdate": {
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "v2_President": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "v2_MappingRequestsDto": {
            "required": [
                "provider_id",
                "mapping_requests"
            ],
            "properties": {
                "provider": {
                    "type": "string"
                },
                "mapping_requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_MappingRequestDto"
                    }
                }
            }
        },
        "v2_MappingRequestDto": {
            "required": [
                "entity_type",
                "provider_id"
            ],
            "properties": {
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "PLAYER",
                        "TEAM",
                        "COACH",
                        "MATCH",
                        "SEASON",
                        "VENUE",
                        "REFEREE",
                        "TOURNAMENT",
                        "CITY",
                        "PRESIDENT",
                        "STAGE",
                        "GROUP",
                        "COUNTRY",
                        "ODD_PROVIDER"
                    ]
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "v2_MappingsDto": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_MappingDto"
                    }
                }
            }
        },
        "v2_MappingDto": {
            "properties": {
                "provider": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "PLAYER",
                        "TEAM",
                        "COACH",
                        "MATCH",
                        "SEASON",
                        "VENUE",
                        "REFEREE",
                        "TOURNAMENT",
                        "CITY",
                        "PRESIDENT",
                        "STAGE",
                        "GROUP",
                        "COUNTRY",
                        "ODD_PROVIDER"
                    ]
                },
                "domain_id": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "RefereeDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/CountryDto"
                },
                "birthdate": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "RefereeEditDto": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string",
                    "format": "date-time"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "RefereePageDto": {
            "properties": {
                "referees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RefereeDto"
                    }
                },
                "page_meta": {
                    "$ref": "#/definitions/PageMetaDto"
                }
            }
        },
        "v2_RoundTypes": {
            "properties": {
                "rounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_RoundWithStatus"
                    }
                }
            }
        },
        "v2_MatchRound": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v2_RoundWithStatus": {
            "properties": {
                "start_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "status": {
                    "description": "Not available at endpoint /v2/rounds",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v2_TournamentSeasonInsertInput": {
            "properties": {
                "tournament_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "v2_TournamentSeasonStatusInput": {
            "properties": {
                "season_id": {
                    "type": "string"
                }
            }
        },
        "v2_TournamentSeasonUpdateInput": {
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "v2_SeasonDetails": {
            "properties": {
                "season": {
                    "$ref": "#/definitions/v2_Season"
                },
                "stages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_StageDetails"
                    }
                }
            }
        },
        "v2_Season": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tournament": {
                    "$ref": "#/definitions/v2_Tournament"
                },
                "status": {
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                }
            }
        },
        "v2_SeasonList": {
            "required": [
                "seasons"
            ],
            "properties": {
                "seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_Season"
                    }
                }
            }
        },
        "v2_StageDetails": {
            "properties": {
                "stage": {
                    "$ref": "#/definitions/v2_MatchStage"
                },
                "rounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_RoundWithStatus"
                    }
                }
            }
        },
        "PageMetaDto": {
            "properties": {
                "total": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                }
            }
        },
        "v2_SeasonStage": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "GROUP",
                        "LEAGUE",
                        "KNOCK_OUT"
                    ]
                },
                "start_date": {
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "type": "string",
                    "format": "date"
                },
                "order_in_season": {
                    "type": "integer"
                },
                "coverage": {
                    "type": "string"
                }
            }
        },
        "v2_MatchStage": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "GROUP",
                        "LEAGUE",
                        "KNOCK_OUT"
                    ]
                },
                "start_date": {
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "type": "string",
                    "format": "date"
                },
                "order_in_season": {
                    "type": "integer"
                },
                "coverage": {
                    "type": "string"
                },
                "status": {
                    "description": "Available only for /v2/seasons/{id}/stages",
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                }
            }
        },
        "v2_SeasonStageCollection": {
            "properties": {
                "stages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_MatchStage"
                    }
                }
            }
        },
        "v2_StageTeamInput": {
            "properties": {
                "team_id": {
                    "type": "string"
                }
            }
        },
        "v2_LeagueEntryInput": {
            "properties": {
                "rank": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "string"
                },
                "played": {
                    "type": "integer"
                },
                "wins": {
                    "type": "integer"
                },
                "draws": {
                    "type": "integer"
                },
                "losses": {
                    "type": "integer"
                },
                "points": {
                    "type": "integer"
                },
                "goals_for": {
                    "type": "integer"
                },
                "goals_against": {
                    "type": "integer"
                }
            }
        },
        "v2_TopScorerEntryInput": {
            "properties": {
                "team_id": {
                    "type": "string"
                },
                "player_id": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "goals": {
                    "type": "integer"
                },
                "played": {
                    "type": "integer"
                },
                "assists": {
                    "type": "integer"
                },
                "scored_first": {
                    "type": "integer"
                },
                "minutes": {
                    "type": "integer"
                },
                "penalties": {
                    "type": "integer"
                },
                "yellow_cards": {
                    "type": "integer"
                },
                "red_cards": {
                    "type": "integer"
                }
            }
        },
        "v2_StandingEntryRuleInput": {
            "properties": {
                "standing_rule_id": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                }
            }
        },
        "v2_TeamColors": {
            "required": [
                "entity_type",
                "entity_id",
                "colors"
            ],
            "properties": {
                "entity_type": {
                    "type": "string",
                    "enum": [
                        { "TEAM": "team" } ,
                        { "MATCH": "match" }
                    ]
                },
                "entity_id": {
                    "type": "string"
                },
                "colors": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                	{ "HOME": "home" },
                                	{ "AWAY": "away" }
                                ]
                            },
                            "color_code": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "TeamPageDto": {
            "properties": {
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_Team"
                    }
                },
                "page_meta": {
                    "$ref": "#/definitions/PageMetaDto"
                }
            }
        },
        "TeamSocialDto": {
            "properties": {
                "web": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "facebook_id": {
                    "type": "string"
                },
                "instagram_id": {
                    "type": "string"
                },
                "wikipedia_id": {
                    "type": "string"
                }
            }
        },
        "TeamEditDto": {
            "required": [
                "name",
                "country_id",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "three_letter_code": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "venue_id": {
                    "type": "string"
                },
                "president_id": {
                    "type": "string"
                },
                "coach_id": {
                    "type": "string"
                },
                "social": {
                    "$ref": "#/definitions/TeamSocialDto"
                },
                "founded": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                }
            }
        },
        "v2_Team": {
            "required": [
                "id",
                "name",
                "country",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "three_letter_code": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "PLACEHOLDER",
                        "NATIONAL",
                        "CLUB"
                    ]
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "venue": {
                    "$ref": "#/definitions/v2_VenuesGetId"
                },
                "social": {
                    "$ref": "#/definitions/TeamSocialDto"
                },
                "founded": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                }
            }
        },
        "v2_TeamProfile": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "three_letter_code": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "founded": {
                    "type": "integer"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "venue": {
                    "$ref": "#/definitions/v2_VenuesGetId"
                },
                "social": {
                    "$ref": "#/definitions/TeamSocialDto"
                },
                "coach": {
                    "$ref": "#/definitions/v2_Coach"
                },
                "president": {
                    "$ref": "#/definitions/v2_President"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                },
                "active_seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_Season"
                    }
                },
                "shirt_colors": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                	{ "HOME": "home" },
                                    	{ "AWAY": "away" }
                                ]
                            },
                            "color_code": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "v2_TeamSquadInput": {
            "properties": {
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_SquadPlayerInput"
                    }
                }
            }
        },
        "v2_SquadPlayerInput": {
            "properties": {
                "player_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                },
                "contract_type": {
                    "type": "string",
                    "enum": [
                        "PERMANENT",
                        "LOAN",
                        "UNKNOWN"
                    ]
                },
                "start_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "shirt_number": {
                    "type": "integer"
                }
            }
        },
        "v2_TeamSquad": {
            "required": [
                "team",
                "players"
            ],
            "properties": {
                "team": {
                    "$ref": "#/definitions/v2_Team"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_SquadPlayer"
                    }
                }
            }
        },
        "v2_SquadPlayer": {
            "required": [
                "player",
                "status"
            ],
            "properties": {
                "player": {
                    "$ref": "#/definitions/v2_Player"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                },
                "contract_type": {
                    "type": "string",
                    "enum": [
                        "PERMANENT",
                        "LOAN",
                        "UNKNOWN"
                    ]
                },
                "start_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "shirt_number": {
                    "type": "integer"
                }
            }
        },
        "v2_Tournament": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CUP",
                        "LEAGUE"
                    ]
                },
                "region": {
                    "type": "string",
                    "enum": [
                        "DOMESTIC",
                        "INTERNATIONAL"
                    ]
                }
            }
        },
        "v2_TournamentGroupInsertInput": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tournaments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TournamentItemDto"
                    }
                }
            }
        },
        "TournamentItemDto": {
            "properties": {
                "tournament_id": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                }
            }
        },
        "v2_TournamentGroupUpdateInput": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tournaments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TournamentItemDto"
                    }
                }
            }
        },
        "v2_TournamentGroupGetOutput": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tournaments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2_TournamentItemOutput"
                    }
                }
            }
        },
        "v2_TournamentItemOutput": {
            "properties": {
                "tournament": {
                    "$ref": "#/definitions/v2_Tournament"
                },
                "sort_order": {
                    "type": "integer"
                }
            }
        },
        "v2_TournamentGroupCollection": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Dto"
                    }
                }
            }
        },
        "Dto": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "v2_TournamentGroupSelection": {
            "properties": {
                "match_id": {
                    "type": "string"
                }
            }
        },
        "TranslationContentDto": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "three_letter_code": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                }
            }
        },
        "TranslationDto": {
            "properties": {
                "key": {
                    "$ref": "#/definitions/TranslationKeyDto"
                },
                "content": {
                    "$ref": "#/definitions/TranslationContentDto"
                }
            }
        },
        "TranslationEntityDto": {
            "properties": {
                "entity": {
                    "type": "string",
                    "enum": [
                        "LINEUP_PLAYER_TYPE",
                        "COACH",
                        "VENUE",
                        "TOURNAMENT",
                        "TEAM",
                        "COUNTRY",
                        "MATCH_STATUS",
                        "STAGE",
                        "PLAYER",
                        "REFEREE",
                        "CITY",
                        "PRESIDENT",
                        "STANDING_RULE",
                        "GROUP",
                        "SEASON",
                        "ROUND_TYPE"
                    ]
                }
            }
        },
        "TranslationKeyDto": {
            "properties": {
                "entity": {
                    "type": "string",
                    "enum": [
                        "LINEUP_PLAYER_TYPE",
                        "COACH",
                        "VENUE",
                        "TOURNAMENT",
                        "TEAM",
                        "COUNTRY",
                        "MATCH_STATUS",
                        "STAGE",
                        "PLAYER",
                        "REFEREE",
                        "CITY",
                        "PRESIDENT",
                        "STANDING_RULE",
                        "GROUP",
                        "SEASON",
                        "ROUND_TYPE"
                    ]
                },
                "entity_id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                }
            }
        },
        "VenueDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/CountryDto"
                },
                "city": {
                    "$ref": "#/definitions/CityDto"
                },
                "profile": {
                    "$ref": "#/definitions/VenueProfileDto"
                }
            }
        },
        "VenueEditDto": {
            "required": [
                "name",
                "country_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "city_id": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/VenueProfileDto"
                }
            }
        },
        "VenuePageDto": {
            "properties": {
                "venues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VenueDto"
                    }
                },
                "page_meta": {
                    "$ref": "#/definitions/PageMetaDto"
                }
            }
        },
        "VenueProfileDto": {
            "properties": {
                "lat": {
                    "type": "number",
                    "format": "float"
                },
                "lng": {
                    "type": "number",
                    "format": "float"
                },
                "capacity": {
                    "type": "integer"
                }
            }
        },
        "v2_post_venues": {
            "required": [
                "name",
                "country_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "city_id": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/VenueProfileDto"
                }
            }
        },
        "v2_put_venues": {
            "required": [
                "name",
                "country_id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "city_id": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/VenueProfileDto"
                }
            }
        },
        "v2_Venues": {
            "required": [
                "name",
                "country"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "city": {
                    "$ref": "#/definitions/v2_City"
                },
                "profile": {
                    "$ref": "#/definitions/VenueProfileDto"
                }
            }
        },
        "v2_VenuesGetId": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "city": {
                    "$ref": "#/definitions/v2_City"
                },
                "profile": {
                    "$ref": "#/definitions/VenueProfileDto"
                }
            }
        },
        "v2_VenuesList": {
            "properties": {
                "venues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListVenueDto"
                    }
                },
                "page_meta": {
                    "$ref": "#/definitions/PageMetaDto"
                }
            }
        },
        "ListVenueDto": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/CountryDto"
                },
                "city": {
                    "$ref": "#/definitions/CityDto"
                },
                "profile": {}
            }
        },
        "v2_VenuesPut": {
            "required": [
                "name",
                "country"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v2_Country"
                },
                "city": {
                    "$ref": "#/definitions/v2_City"
                },
                "profile": {
                    "$ref": "#/definitions/VenueProfileDto"
                }
            }
        },
        "v1_CountryDto": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url_flag": {
                    "type": "string"
                }
            }
        },
        "SeasonDto": {
            "required": [
                "id",
                "name",
                "active"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "StageDto": {
            "required": [
                "id",
                "name",
                "cup",
                "tournament",
                "season"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "cup": {
                    "type": "boolean"
                },
                "season": {
                    "$ref": "#/definitions/SeasonDto"
                },
                "tournament": {
                    "$ref": "#/definitions/TournamentDto"
                },
                "start_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "live": {
                    "type": "boolean"
                },
                "stage_groups": {
                    "type": "integer"
                }
            }
        },
        "OutputDto": {
            "required": [
                "player",
                "team",
                "season",
                "tournament",
                "statistics",
                "position"
            ],
            "properties": {
                "player": {
                    "$ref": "#/definitions/PartialPerson"
                },
                "team": {
                    "$ref": "#/definitions/PartialTeam"
                },
                "season": {
                    "$ref": "#/definitions/TournamentSeason"
                },
                "tournament": {
                    "$ref": "#/definitions/Tournament"
                }
            }
        },
        "TournamentDto": {
            "description": "Resource representing a Football Tournament such as A Grupa, Premier League, Champions League, World Cup, etc. Does not represent a specific season such as Premier League 2015/2016.",
            "required": [
                "id",
                "name",
                "country"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/v1_CountryDto"
                },
                "regional_league": {
                    "type": "boolean"
                },
                "url_logo": {
                    "type": "string"
                }
            }
        },
        "BasicPlayerStats": {
            "required": [
                "player"
            ],
            "properties": {
                "player": {
                    "description": "Player information",
                    "$ref": "#/definitions/Player"
                },
                "shirt_number": {
                    "description": "Player's shirt number during the season",
                    "type": "integer"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PlayerStatsExtended"
                }
            ]
        },
        "Coach": {
            "required": [
                "name"
            ],
            "properties": {
                "url_image": {
                    "description": "277x338 full body image of Person",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.jpeg"
                },
                "country": {
                    "description": "Person's nationality",
                    "$ref": "#/definitions/Country"
                },
                "birthdate": {
                    "description": "Date when the person was born",
                    "type": "string",
                    "format": "date",
                    "example": "1985-02-05"
                },
                "first_name": {
                    "description": "Human readable first(given) name",
                    "type": "string",
                    "example": "Cristiano"
                },
                "last_name": {
                    "description": "Human readable last(family) name",
                    "type": "string",
                    "example": "Ronaldo"
                },
                "active": {
                    "description": "True if currently active, false if retired",
                    "type": "boolean"
                },
                "gender": {
                    "description": "Person's gender",
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                },
                "id": {
                    "description": "Unique identifier within the system",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the Person",
                    "type": "string",
                    "example": "Cristiano Ronaldo"
                },
                "url_thumb": {
                    "description": "150x150 face image of Person",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.jpeg"
                }
            }
        },
        "Country": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier of the object within the system",
                    "type": "integer"
                },
                "name": {
                    "description": "Human known name of the Country",
                    "type": "string",
                    "example": "England"
                },
                "code": {
                    "description": "2 letter country code if available",
                    "type": "string"
                },
                "url_flag": {
                    "description": "Image of the flag for the Country",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.png"
                }
            }
        },
        "EventsByDate": {
            "required": [
                "date",
                "items"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2016-08-13"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                }
            }
        },
        "Event": {
            "required": [
                "id",
                "start_time",
                "home_team",
                "away_team",
                "event_status",
                "tournament_season_stage"
            ],
            "properties": {
                "spectators": {
                    "description": "Number of spectators at the event",
                    "type": "integer",
                    "example": 95554
                },
                "tournament_season_stage": {
                    "description": "TournamentSeasonStage in which the Event is part of. Should be used for Standing unless the Event is part of a StageGroup",
                    "$ref": "#/definitions/PartialTournamentSeasonStage"
                },
                "minute": {
                    "description": "Live minute ticker. Only available if the event_status.type is 'inprogress'",
                    "type": "integer",
                    "example": 85
                },
                "stage_group": {
                    "description": "Describes the group in which the Event is part of. Available if the Event is from a TournamentSeasonStage which has groups. Example: Champions League Group Stage -> Group A",
                    "$ref": "#/definitions/StageGroup"
                },
                "referee": {
                    "$ref": "#/definitions/PartialPerson"
                },
                "venue": {
                    "$ref": "#/definitions/Venue"
                },
                "incidents": {
                    "description": "Number of incidents which have occured in the Event (goals, red cards, yellow cards, etc).",
                    "type": "integer"
                },
                "lineup_available": {
                    "description": "Indicates whether player lineup information is available or not",
                    "type": "boolean"
                },
                "live_updates": {
                    "description": "Indicates whether the event has livescore updates. If false the event will be updated after FT.",
                    "type": "boolean"
                },
                "teamstats_available": {
                    "description": "Indicates whether teamstats are available for this event",
                    "type": "boolean"
                },
                "home_score": {
                    "description": "Score information at various stages of the Event for Home Team",
                    "$ref": "#/definitions/TeamScore"
                },
                "away_score": {
                    "description": "Score information at various stages of the Event for Home Team",
                    "$ref": "#/definitions/TeamScore"
                },
                "started_at": {
                    "description": "timestamp when the current phase (1st_half, 2nd_half, et, etc) has started. Can be used for calculating the minute ticker",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "description": "Unique identifier",
                    "type": "integer"
                },
                "event_status": {
                    "description": "Description of the event's current status",
                    "$ref": "#/definitions/EventStatus"
                },
                "start_time": {
                    "description": "Timestamp when the event is scheduled to start",
                    "type": "string",
                    "format": "date-time"
                },
                "goal_home": {
                    "description": "Goals scored by the home team",
                    "type": "integer",
                    "example": 2
                },
                "goal_away": {
                    "description": "Goals scored by the away team",
                    "type": "integer",
                    "example": 1
                },
                "penalty_home": {
                    "description": "Penalties scored by the home team. Available only if the game goes to penalty shootouts",
                    "type": "integer",
                    "example": 5
                },
                "penalty_away": {
                    "description": "Penalties scored by the away team. Available only if the game goes to penalty shootouts",
                    "type": "integer",
                    "example": 4
                },
                "agg_home": {
                    "description": "Goals scored by home team over 1 or more legs. Available only if the tie has mutliple legs",
                    "type": "integer",
                    "example": 4
                },
                "agg_away": {
                    "description": "Goals scored by home team over 1 or more legs. Available only if the tie has mutliple legs",
                    "type": "integer",
                    "example": 2
                },
                "home_team": {
                    "description": "Home Team",
                    "$ref": "#/definitions/PartialTeam"
                },
                "away_team": {
                    "description": "Away Team",
                    "$ref": "#/definitions/PartialTeam"
                }
            }
        },
        "EventIncident": {
            "required": [
                "id",
                "event_id",
                "type",
                "home_team",
                "minute"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier",
                    "type": "integer",
                    "example": 1
                },
                "event_id": {
                    "description": "Identifier of the event during which the incident occurred",
                    "type": "integer",
                    "example": 1
                },
                "type": {
                    "description": "The type of incident",
                    "type": "string",
                    "enum": [
                        "penalty_shootout_scored",
                        "yellow_card_red",
                        "penalty_shootout_missed",
                        "substitution",
                        "goal",
                        "red_card",
                        "penalty_miss",
                        "yellow_card",
                        "penalty_goal",
                        "own_goal"
                    ]
                },
                "home_team": {
                    "description": "Whether the incident is related to the home or away team. true if home team",
                    "type": "boolean"
                },
                "minute": {
                    "description": "The minute when the incident occured",
                    "type": "integer",
                    "example": 68
                },
                "team_id": {
                    "description": "Id of the team for which the incident is related",
                    "type": "integer"
                },
                "goal_home": {
                    "description": "Updated home team score if the incident changes the scoreline (penalty, goal, own_goal, etc)",
                    "type": "integer",
                    "example": 2
                },
                "goal_away": {
                    "description": "Updated away team score  if the incident changes the scoreline (penalty, goal, own_goal, etc)",
                    "type": "integer",
                    "example": 1
                },
                "player": {
                    "description": "Player who is the main actor in the incident: Goal Scorer, player who received yellow card. If type == 'substitution' this is the player coming off",
                    "$ref": "#/definitions/PartialPerson"
                },
                "rel_player": {
                    "description": "Player who is of secondary importance to the incident: Player who assisted a goal. If type == 'substitution' this is the player coming on",
                    "$ref": "#/definitions/PartialPerson"
                },
                "deleted": {
                    "description": "Whether the incident has been deleted or not - a disallowed goal for example",
                    "type": "boolean"
                },
                "sortorder": {
                    "description": "If there are multiple incidents with the same minute, this indicates how they are sorted",
                    "type": "integer"
                }
            }
        },
        "EventPlayer": {
            "required": [
                "id",
                "player",
                "event_player_type",
                "home_team"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier",
                    "type": "integer"
                },
                "player": {
                    "description": "Object describing the player in the lineup",
                    "$ref": "#/definitions/PartialPerson"
                },
                "event_player_type": {
                    "description": "Object describing the type of lineup",
                    "$ref": "#/definitions/EventPlayerType"
                },
                "home_team": {
                    "description": "Whether the player is from the home or the away team",
                    "type": "boolean"
                },
                "position_x": {
                    "description": "Number indicating the player's vertical position on the field. 1 = Goalkeeper, 2-5 = Defender, 6-9 = Midfielder, 10-11 = Forward, where 5 is an offensive defender, 9 is an offensive midfielder, etc.",
                    "type": "integer",
                    "example": 10
                },
                "position_y": {
                    "description": "Number indicating the player's horizontal position on the field. Ranges from 1-9, where 1 = furthest right, 9 = furthest left.",
                    "type": "integer",
                    "example": 5
                },
                "position_number": {
                    "description": "Number 1-11 indicating the player's position in the lineup. 1 = goalkeeper, 2 = defender furthest right.",
                    "type": "integer",
                    "example": 11
                },
                "shirt_number": {
                    "description": "The shirt number the player is wearing",
                    "type": "integer",
                    "example": 9
                }
            }
        },
        "EventPlayerSubOn": {
            "required": [
                "player_name",
                "elapsed"
            ],
            "properties": {
                "player_id": {
                    "description": "Id of the player that comes on",
                    "type": "integer",
                    "example": 1
                },
                "player_name": {
                    "description": "Name of the player that comes on",
                    "type": "string",
                    "example": "Wayne Rooney"
                },
                "elapsed": {
                    "description": "The minute when the substitued occured",
                    "type": "integer",
                    "example": 68
                }
            }
        },
        "EventPlayerType": {
            "required": [
                "category",
                "name",
                "code"
            ],
            "properties": {
                "category": {
                    "description": "Indicates what part of the lineup the player belongs to",
                    "type": "string",
                    "enum": [
                        "miss",
                        "sub",
                        "start",
                        "unknown"
                    ]
                },
                "name": {
                    "description": "Human readable name of the type",
                    "type": "string"
                },
                "code": {
                    "description": "Internal unique code to identify the type",
                    "type": "string"
                }
            }
        },
        "EventStatus": {
            "required": [
                "type",
                "name",
                "code"
            ],
            "properties": {
                "type": {
                    "description": "Status classification",
                    "type": "string",
                    "enum": [
                        "finished",
                        "cancelled",
                        "notstarted",
                        "interrupted",
                        "inprogress"
                    ]
                },
                "name": {
                    "description": "Human readable name describing the status, can be translated",
                    "type": "string",
                    "example": "Finished"
                },
                "short_name": {
                    "description": "Human readable short name describing the status, can be translated",
                    "type": "string",
                    "example": "FIN"
                },
                "code": {
                    "description": "Unique string used to identify the status",
                    "type": "string",
                    "enum": [
                        "finished",
                        "not_started",
                        "1st_half",
                        "2nd_half"
                    ]
                }
            }
        },
        "TeamStatistics": {
            "required": [
                "goals",
                "possession",
                "corners",
                "shots_on",
                "shots_off",
                "shots_blocked",
                "offside",
                "fouls_committed"
            ],
            "properties": {
                "pass": {
                    "description": "Number of keys passes completed",
                    "type": "integer"
                },
                "possession": {
                    "description": "Percentage of time the team possess the ball",
                    "type": "integer"
                },
                "goals": {
                    "description": "Number of goals scored",
                    "type": "integer"
                },
                "corners": {
                    "description": "Number of corners",
                    "type": "integer"
                },
                "crosses": {
                    "description": "Number of crosses",
                    "type": "integer"
                },
                "offside": {
                    "description": "Number of offsides",
                    "type": "integer"
                },
                "shots_on": {
                    "description": "Shots on that have hit target",
                    "type": "integer"
                },
                "shots_blocked": {
                    "description": "Number of shots that have been blocked by an opposition player",
                    "type": "integer"
                },
                "shots_off": {
                    "description": "Shots outside the target",
                    "type": "integer"
                },
                "throw_in": {
                    "description": "Number of throw ins taken",
                    "type": "integer"
                },
                "goal_kicks": {
                    "description": "Number of goal kicks taken",
                    "type": "integer"
                },
                "treatments": {
                    "description": "Number of treatments to injuries",
                    "type": "integer"
                },
                "yellow_cards": {
                    "description": "Total numer of yellow cards",
                    "type": "integer"
                },
                "substitutions": {
                    "description": "Number of substitutions",
                    "type": "integer"
                },
                "counter_attacks": {
                    "description": "Number of counter attacks",
                    "type": "integer"
                },
                "fouls_committed": {
                    "description": "Total number of fouls committed by the Team",
                    "type": "integer"
                }
            }
        },
        "EventTeamStats": {
            "required": [
                "team",
                "home_team",
                "statistics"
            ],
            "properties": {
                "team": {
                    "description": "The Team whose stats are represented in the object",
                    "$ref": "#/definitions/PartialTeam"
                },
                "home_team": {
                    "description": "Whether the stats are for the home or the away team",
                    "type": "boolean"
                },
                "statistics": {
                    "description": "Object containing the team statistics",
                    "type": "object",
                    "$ref": "#/definitions/TeamStatistics"
                },
                "event_id": {
                    "description": "Identifier of the event the stat is related to",
                    "type": "integer"
                }
            }
        },
        "TeamLineup": {
            "properties": {
                "team_id": {
                    "description": "resource id of the team",
                    "type": "integer"
                },
                "players": {
                    "description": "List of players involved for the team",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventPlayer"
                    }
                },
                "coach": {
                    "description": "Information about the team's Coach",
                    "$ref": "#/definitions/PartialPerson"
                },
                "formation": {
                    "description": "Lineup formation",
                    "type": "string",
                    "example": "4-3-3"
                }
            },
            "type": "object"
        },
        "Lineup": {
            "required": [
                "event_id",
                "home_team",
                "away_team"
            ],
            "properties": {
                "event_id": {
                    "description": "Id of the event for which the lineup is for",
                    "type": "integer"
                },
                "confirmed": {
                    "description": "Whether the lineup is officially confirmed. Should be considered probable if != true",
                    "type": "boolean"
                },
                "home_team": {
                    "description": "Lineup information for home team",
                    "type": "object",
                    "$ref": "#/definitions/TeamLineup"
                },
                "away_team": {
                    "description": "Lineup information for away team",
                    "type": "object",
                    "$ref": "#/definitions/TeamLineup"
                }
            }
        },
        "Odd": {
            "required": [
                "event_id",
                "odd_provider"
            ],
            "properties": {
                "oddProvider": {
                    "description": "Reference to the OddProvider which provides the betting offers",
                    "$ref": "#/definitions/OddProvider"
                },
                "eventId": {
                    "description": "Id of the event for which odds are provided",
                    "type": "integer"
                }
            }
        },
        "OddProvider": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Resource identifier",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the OddProvider",
                    "type": "string"
                },
                "url": {
                    "description": "Homepage of the OddProvider",
                    "type": "string"
                },
                "country": {
                    "description": "Counrty where the OddProvider is based",
                    "$ref": "#/definitions/Country"
                },
                "url_logo": {
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.png"
                }
            }
        },
        "PartialEvent": {
            "required": [
                "id",
                "start_time",
                "home_team",
                "away_team",
                "event_status",
                "goal_home",
                "goal_away"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier",
                    "type": "integer"
                },
                "event_status": {
                    "description": "Description of the event's current status",
                    "$ref": "#/definitions/EventStatus"
                },
                "start_time": {
                    "description": "Timestamp when the event is scheduled to start",
                    "type": "string",
                    "format": "date-time"
                },
                "goal_home": {
                    "description": "Goals scored by the home team",
                    "type": "integer",
                    "example": 2
                },
                "goal_away": {
                    "description": "Goals scored by the away team",
                    "type": "integer",
                    "example": 1
                },
                "penalty_home": {
                    "description": "Penalties scored by the home team. Available only if the game goes to penalty shootouts",
                    "type": "integer",
                    "example": 5
                },
                "penalty_away": {
                    "description": "Penalties scored by the away team. Available only if the game goes to penalty shootouts",
                    "type": "integer",
                    "example": 4
                },
                "agg_home": {
                    "description": "Goals scored by home team over 1 or more legs. Available only if the tie has mutliple legs",
                    "type": "integer",
                    "example": 4
                },
                "agg_away": {
                    "description": "Goals scored by home team over 1 or more legs. Available only if the tie has mutliple legs",
                    "type": "integer",
                    "example": 2
                },
                "home_team": {
                    "description": "Home Team",
                    "$ref": "#/definitions/PartialTeam"
                },
                "away_team": {
                    "description": "Away Team",
                    "$ref": "#/definitions/PartialTeam"
                }
            }
        },
        "PartialPerson": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier within the system",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the Person",
                    "type": "string",
                    "example": "Cristiano Ronaldo"
                },
                "url_thumb": {
                    "description": "150x150 face image of Person",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.jpeg"
                },
                "url_image": {
                    "description": "277x338 full body image of Person",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.jpeg"
                }
            }
        },
        "PartialTournamentSeasonStage": {
            "required": [
                "id",
                "name",
                "cup",
                "tournament_season_id",
                "tournament_id",
                "country"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Human readable name of the TournamentSeasonStage",
                    "type": "string",
                    "example": "Champions League Final Stages"
                },
                "cup": {
                    "description": "Whether the stage is a cup such as Champions League Knockout stage, World Cup Final stages, etc",
                    "type": "boolean"
                },
                "tournament_season_id": {
                    "description": "Id of the TournamentSeason in which the stage is part of",
                    "type": "integer"
                },
                "tournament_id": {
                    "description": "Id of the Tournament in whicth the stage is part of",
                    "type": "integer"
                },
                "country": {
                    "description": "Reference to the Country where the TournamentSeasonStage is held",
                    "$ref": "#/definitions/Country"
                },
                "confederation": {
                    "description": "Indicates which confederation the stage is part of (for World Cup qualif.)",
                    "type": "string"
                }
            }
        },
        "PartialTeamWithForm": {
            "allOf": [
                {
                    "$ref": "#/definitions/PartialTeam"
                },
                {
                    "properties": {
                        "form": {
                            "description": "Form guide for the Team if available and requested as an option",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamForm"
                            }
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "PartialTeam": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "national": {
                    "description": "Whether the team is a football club(Barcelona) or national team(Spain)",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique identifier of the Team within the system",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the team",
                    "type": "string",
                    "example": "Real Madrid"
                },
                "threeLetterCode": {
                    "description": "3 character name of team",
                    "type": "string",
                    "example": "RMA"
                },
                "shortName": {
                    "description": "Manually inserted short name of team",
                    "type": "string",
                    "example": "Loko Plovdiv"
                },
                "undecided": {
                    "description": "If present and = true, the team can be one of two teams. This occurs in cup competitions when some games are still not played",
                    "type": "boolean"
                },
                "gender": {
                    "description": "Team gender, MALE, FEMALE or null",
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                },
                "url_logo": {
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.png"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "placeholder",
                        "club",
                        "national"
                    ]
                }
            }
        },
        "Player": {
            "required": [
                "id",
                "name",
                "country"
            ],
            "properties": {
                "position": {
                    "description": "Playing position of the player",
                    "type": "string",
                    "enum": [
                        "keeper",
                        "defender",
                        "midfielder",
                        "forward"
                    ]
                },
                "country": {
                    "description": "Person's nationality",
                    "$ref": "#/definitions/Country"
                },
                "birthdate": {
                    "description": "Date when the person was born",
                    "type": "string",
                    "format": "date",
                    "example": "1985-02-05"
                },
                "first_name": {
                    "description": "Human readable first(given) name",
                    "type": "string",
                    "example": "Cristiano"
                },
                "last_name": {
                    "description": "Human readable last(family) name",
                    "type": "string",
                    "example": "Ronaldo"
                },
                "active": {
                    "description": "True if currently active, false if retired",
                    "type": "boolean"
                },
                "gender": {
                    "description": "Person's gender",
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                },
                "id": {
                    "description": "Unique identifier within the system",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the Person",
                    "type": "string",
                    "example": "Cristiano Ronaldo"
                },
                "url_thumb": {
                    "description": "150x150 face image of Person",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.jpeg"
                },
                "url_image": {
                    "description": "277x338 full body image of Person",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.jpeg"
                }
            }
        },
        "PlayerProfile": {
            "properties": {
                "current_league": {
                    "description": "Information about the current league the player is in",
                    "$ref": "#/definitions/TournamentSeasonWithTournament"
                },
                "club": {
                    "description": "Information about the club the Player is currently playing in",
                    "$ref": "#/definitions/PlayerTeam"
                },
                "nationalTeam": {
                    "description": "Information about the national team the Player is currently playing in",
                    "$ref": "#/definitions/PlayerTeam"
                },
                "position_display": {
                    "description": "Display name of the player position",
                    "type": "string"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Player"
                }
            ]
        },
        "TeamPlayerSeasonStatistics": {
            "allOf": [
                {
                    "$ref": "#/definitions/TournamentSeasonWithTournament"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamPlayerStatistics"
                            }
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TeamPlayerStatistics": {
            "allOf": [
                {
                    "$ref": "#/definitions/PlayerStatsExtended"
                },
                {
                    "required": [
                        "player"
                    ],
                    "properties": {
                        "player": {
                            "$ref": "#/definitions/Player"
                        },
                        "team": {
                            "$ref": "#/definitions/Team"
                        },
                        "shirt_number": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "PlayerStatsBasic": {
            "required": [
                "goals",
                "played",
                "minutes",
                "red_cards",
                "yellow_cards"
            ],
            "properties": {
                "goals": {
                    "description": "Total goals scored",
                    "type": "integer"
                },
                "played": {
                    "description": "Total games played",
                    "type": "integer"
                },
                "minutes": {
                    "description": "Total minutes played",
                    "type": "integer"
                },
                "red_cards": {
                    "description": "Number of red cards",
                    "type": "integer"
                },
                "yellow_cards": {
                    "description": "Number of yellow cards",
                    "type": "integer"
                },
                "assists": {
                    "description": "Number of assists",
                    "type": "integer"
                }
            }
        },
        "PlayerStatsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/PlayerStatsBasic"
                },
                {
                    "properties": {
                        "conceded": {
                            "description": "Goals conceded (Goalkeeper)",
                            "type": "integer"
                        },
                        "substitute": {
                            "description": "Games started as a substitute",
                            "type": "integer"
                        },
                        "cleansheets": {
                            "description": "Games without allowing a goal (Goalkeeper)",
                            "type": "integer"
                        },
                        "substitute_in": {
                            "description": "Games where the player has come on",
                            "type": "integer"
                        },
                        "substitute_out": {
                            "description": "Games where the player has come off",
                            "type": "integer"
                        },
                        "minutes_substitute": {
                            "description": "Minutes played after coming on as a substitute",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "PlayerStatistics": {
            "required": [
                "player",
                "team",
                "tournament_season"
            ],
            "properties": {
                "tournament_season": {
                    "$ref": "#/definitions/TournamentSeasonWithTournament"
                },
                "player": {
                    "description": "Player Information",
                    "$ref": "#/definitions/PartialPerson"
                },
                "team": {
                    "description": "Team for which the Player competes",
                    "$ref": "#/definitions/PartialTeam"
                },
                "shirtNumber": {
                    "description": "Shirt number of the player during the TournamentSeason",
                    "type": "integer"
                },
                "position": {
                    "description": "Position of the player during the TournamentSeason",
                    "type": "string"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PlayerStatsExtended"
                }
            ]
        },
        "Round": {
            "required": [
                "round",
                "start_time",
                "end_time"
            ],
            "properties": {
                "round": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PartialEvent"
                    }
                }
            }
        },
        "StageGroupWithStanding": {
            "allOf": [
                {
                    "$ref": "#/definitions/StageGroup"
                },
                {
                    "properties": {
                        "standing": {
                            "description": "League Standing for the StageGroup if available and requested",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LeagueStandingData"
                            }
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StageGroupWithStandingTournamentSeasonStage": {
            "allOf": [
                {
                    "$ref": "#/definitions/StageGroupWithStanding"
                },
                {
                    "required": [
                        "tournament_season_stage"
                    ],
                    "properties": {
                        "tournament_season_stage": {
                            "description": "Reference to the TournamentSeasonStage the group is a part of",
                            "$ref": "#/definitions/TournamentSeasonStage"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StageGroup": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique resource identifier",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the Group",
                    "type": "string"
                },
                "order_in_stage": {
                    "description": "The order in the stage of the group",
                    "type": "integer"
                }
            }
        },
        "TopscorerStandingData": {
            "allOf": [
                {
                    "$ref": "#/definitions/StandingData"
                },
                {
                    "required": [
                        "player",
                        "goals"
                    ],
                    "properties": {
                        "player": {
                            "description": "Information about the Player",
                            "$ref": "#/definitions/PartialPerson"
                        },
                        "goals": {
                            "description": "Number of goals scored",
                            "type": "integer"
                        },
                        "played": {
                            "description": "Total games played",
                            "type": "integer"
                        },
                        "assists": {
                            "description": "Number of assists",
                            "type": "integer"
                        },
                        "minutes": {
                            "description": "Total number of minutes played",
                            "type": "integer"
                        },
                        "penalties": {
                            "description": "Number of goals scored from the penalty spot",
                            "type": "integer"
                        },
                        "red_cards": {
                            "description": "Number of red cards",
                            "type": "integer"
                        },
                        "scored_first": {
                            "description": "Number of times the player scored first for the team",
                            "type": "integer"
                        },
                        "yellow_cards": {
                            "description": "Number of yellow cards",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CardlistStandingData": {
            "allOf": [
                {
                    "$ref": "#/definitions/StandingData"
                },
                {
                    "required": [
                        "player",
                        "red_cards",
                        "total_cards",
                        "yellow_cards",
                        "first_yellow_cards"
                    ],
                    "properties": {
                        "player": {
                            "description": "Information about the Player",
                            "$ref": "#/definitions/PartialPerson"
                        },
                        "red_cards": {
                            "description": "Number of red cards",
                            "type": "integer"
                        },
                        "total_cards": {
                            "description": "Total number of cards received",
                            "type": "integer"
                        },
                        "yellow_cards": {
                            "description": "Total number of yellow cards",
                            "type": "integer"
                        },
                        "first_yellow_cards": {
                            "description": "Number of times the Player has been booked, with a first yellow card",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "LeagueStandingData": {
            "allOf": [
                {
                    "$ref": "#/definitions/StandingData"
                },
                {
                    "required": [
                        "wins",
                        "draws",
                        "played",
                        "points",
                        "defeits",
                        "goals_for",
                        "goals_against"
                    ],
                    "properties": {
                        "team": {
                            "description": "Information about the Team (and TeamForm) in the current rank",
                            "$ref": "#/definitions/PartialTeamWithForm"
                        },
                        "wins": {
                            "description": "Games won",
                            "type": "integer"
                        },
                        "draws": {
                            "description": "Games drawn",
                            "type": "integer"
                        },
                        "played": {
                            "description": "Total games played",
                            "type": "integer"
                        },
                        "points": {
                            "description": "Number of points",
                            "type": "integer"
                        },
                        "defeits": {
                            "description": "Games lost",
                            "type": "integer"
                        },
                        "goals_for": {
                            "description": "Total number of goals scored",
                            "type": "integer"
                        },
                        "goals_against": {
                            "description": "Total number of goals conceded",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StandingData": {
            "required": [
                "rank",
                "team"
            ],
            "properties": {
                "rank": {
                    "description": "Position of the team/player in the standing",
                    "type": "integer"
                },
                "team": {
                    "description": "Reference to the team in the Standing (for league) or the Team for which the Player competes (topscorer, cardlist)",
                    "$ref": "#/definitions/PartialTeam"
                },
                "rules": {
                    "description": "List of applicable rules to the current standing rank",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StandingRule"
                    }
                }
            }
        },
        "StandingRule": {
            "required": [
                "name",
                "code",
                "type"
            ],
            "properties": {
                "name": {
                    "description": "Human readable name describing the standing rule",
                    "type": "string",
                    "example": "Champions League"
                },
                "code": {
                    "description": "Unique code identifying the standing rule",
                    "type": "string",
                    "example": "championsleague"
                },
                "type": {
                    "description": "Type classification of the standing rule",
                    "type": "string",
                    "enum": [
                        "promotion",
                        "promotion_playoff",
                        "relegation",
                        "relegation_playoff",
                        "tiertwo",
                        "tiertwo_playoff"
                    ]
                },
                "description": {
                    "description": "Detailed description of the standing rule",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "Team": {
            "required": [
                "id",
                "name",
                "national",
                "country"
            ],
            "properties": {
                "country": {
                    "description": "Reference to the Country where the team is based.",
                    "$ref": "#/definitions/Country"
                },
                "president": {
                    "description": "Name of the president of the club",
                    "type": "string",
                    "example": "Florentino Perez"
                },
                "founded": {
                    "description": "Year the club was founded",
                    "type": "integer",
                    "example": 1902
                },
                "venue": {
                    "$ref": "#/definitions/Venue"
                },
                "coach": {
                    "$ref": "#/definitions/Coach"
                },
                "current_league": {
                    "description": "Information about the League the team currently participates in",
                    "$ref": "#/definitions/TournamentSeasonWithTournament"
                },
                "next_event": {
                    "description": "The next event the team is playing in",
                    "$ref": "#/definitions/Event"
                },
                "social": {
                    "description": "Various social links for the team",
                    "type": "object"
                },
                "url_home_kit": {
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/home_kit.jpeg"
                },
                "url_away_kit": {
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/away_kit.jpeg"
                },
                "url_squad_image": {
                    "description": "Image of the team squad",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/squad_image.jpeg"
                },
                "national": {
                    "description": "Whether the team is a football club(Barcelona) or national team(Spain)",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique identifier of the Team within the system",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the team",
                    "type": "string",
                    "example": "Real Madrid"
                },
                "threeLetterCode": {
                    "description": "3 character name of team",
                    "type": "string",
                    "example": "RMA"
                },
                "shortName": {
                    "description": "Manually inserted short name of team",
                    "type": "string",
                    "example": "Loko Plovdiv"
                },
                "undecided": {
                    "description": "If present and = true, the team can be one of two teams. This occurs in cup competitions when some games are still not played",
                    "type": "boolean"
                },
                "gender": {
                    "description": "Team gender, MALE, FEMALE or null",
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ]
                },
                "form": {
                    "description": "Form guide for the Team if available and requested as an option",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TeamForm"
                    }
                }
            }
        },
        "TeamForm": {
            "required": [
                "outcome"
            ],
            "properties": {
                "event": {
                    "description": "Information about the Event in the Form guide",
                    "$ref": "#/definitions/PartialEvent"
                },
                "outcome": {
                    "description": "Indicates outcome of the event for the given team",
                    "type": "string",
                    "enum": [
                        "W",
                        "D",
                        "L"
                    ]
                }
            }
        },
        "TeamPlayer": {
            "properties": {
                "active": {
                    "description": "Whether the person is currently part of the Team",
                    "type": "boolean"
                },
                "start_date": {
                    "description": "Date when the Person joined the team",
                    "type": "string",
                    "format": "date",
                    "example": "2015-06-20"
                },
                "end_date": {
                    "description": "Date when the Person left the team (if any)",
                    "type": "string",
                    "format": "date",
                    "example": "2016-06-21"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/TeamPlayerData"
                },
                {
                    "required": [
                        "player"
                    ],
                    "properties": {
                        "player": {
                            "description": "Information for the Player",
                            "$ref": "#/definitions/Player"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "PlayerTeam": {
            "properties": {
                "active": {
                    "description": "Whether the person is currently part of the Team",
                    "type": "boolean"
                },
                "start_date": {
                    "description": "Date when the Person joined the team",
                    "type": "string",
                    "format": "date",
                    "example": "2015-06-20"
                },
                "end_date": {
                    "description": "Date when the Person left the team (if any)",
                    "type": "string",
                    "format": "date",
                    "example": "2016-06-21"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/TeamPlayerData"
                },
                {
                    "required": [
                        "team"
                    ],
                    "properties": {
                        "team": {
                            "description": "Reference to the Team the player participates in",
                            "$ref": "#/definitions/PartialTeam"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TeamPlayerData": {
            "required": [
                "active"
            ],
            "properties": {
                "shirt_number": {
                    "description": "Shirt number which the player wears for the team",
                    "type": "integer",
                    "example": 9
                },
                "loan": {
                    "description": "Whether the player is on loan with the team",
                    "type": "boolean"
                },
                "active": {
                    "description": "Whether the person is currently part of the Team",
                    "type": "boolean"
                },
                "start_date": {
                    "description": "Date when the Person joined the team",
                    "type": "string",
                    "format": "date",
                    "example": "2015-06-20"
                },
                "end_date": {
                    "description": "Date when the Person left the team (if any)",
                    "type": "string",
                    "format": "date",
                    "example": "2016-06-21"
                }
            }
        },
        "TeamScore": {
            "properties": {
                "half_time": {
                    "description": "Score at the halftime break",
                    "type": "integer"
                },
                "ordinary_time": {
                    "description": "Score in regular time + injury time",
                    "type": "integer"
                },
                "extra_time": {
                    "description": "Score in extra time, does not include the score for ordinary time",
                    "type": "integer"
                },
                "penalty_shootout": {
                    "description": "Score in penalty shootout, does not include ordinarytime or extratime",
                    "type": "integer"
                }
            }
        },
        "TeamSeasonStatistics": {
            "properties": {
                "team_id": {
                    "type": "integer"
                },
                "latest_league_stage": {
                    "description": "Latest league stage during the TournamentSeason",
                    "$ref": "#/definitions/TournamentSeasonStage"
                },
                "player_statistics": {
                    "description": "Player statistics for the TournamentSeason",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BasicPlayerStats"
                    }
                }
            }
        },
        "TournamentWithSeasons": {
            "allOf": [
                {
                    "$ref": "#/definitions/Tournament"
                },
                {
                    "required": [
                        "seasons"
                    ],
                    "properties": {
                        "seasons": {
                            "description": "List of seasons available for the Tournament",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TournamentSeason"
                            }
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "Tournament": {
            "description": "Resource representing a Football Tournament such as A Grupa, Premier League, Champions League, World Cup, etc. Does not represent a specific season such as Premier League 2015/2016.",
            "required": [
                "id",
                "name",
                "country"
            ],
            "properties": {
                "id": {
                    "description": "Unique Resource identifier of the Tournament",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the Tournament",
                    "type": "string",
                    "example": "Champions League"
                },
                "country": {
                    "description": "Country where the Tournament is held",
                    "$ref": "#/definitions/Country"
                },
                "regional_league": {
                    "description": "Whether or not the Tournament is a regional league such as the La Liga, A PFG, EPL.",
                    "type": "boolean"
                },
                "client_sortorder": {
                    "description": "Represents the order position in a custom client based sorted list",
                    "type": "integer"
                },
                "url_logo": {
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.png"
                },
                "type": {
                    "description": "Shows if the tournament is Cup or a League",
                    "enum": [
                        "CUP",
                        "LEAGUE"
                    ],
                    "example": "League"
                },
                "gender": {
                    "description": "Shows if the the teams in the tournament are Male or Female",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ],
                    "example": "Male"
                },
                "region": {
                    "description": "Shows if the tournament is Regional or International",
                    "enum": [
                        "DOMESTIC",
                        "INTERNATIONAL"
                    ],
                    "example": "Regional"
                }
            }
        },
        "TournamentSeasonWithStages": {
            "allOf": [
                {
                    "$ref": "#/definitions/TournamentSeasonWithTournament"
                },
                {
                    "required": [
                        "stages"
                    ],
                    "properties": {
                        "stages": {
                            "description": "List of stages which take place during the TournamentSeason. If the parent Tournament has regional_league = true, this will usually be one stage with cup = false.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TournamentSeasonStage"
                            }
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TournamentSeasonWithTournament": {
            "allOf": [
                {
                    "$ref": "#/definitions/TournamentSeason"
                },
                {
                    "required": [
                        "tournament"
                    ],
                    "properties": {
                        "tournament": {
                            "description": "Reference to the parent Tournament",
                            "$ref": "#/definitions/Tournament"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TournamentSeason": {
            "required": [
                "id",
                "name",
                "active"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier of the object",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the TournamentSeason",
                    "type": "string",
                    "example": "2015/2016"
                },
                "active": {
                    "description": "Whether the season is currently running or whether it is finished",
                    "type": "boolean"
                }
            }
        },
        "TournamentSeasonStageWithStandingGroups": {
            "properties": {
                "id": {
                    "description": "Unique identifier",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Human readable name of the TournamentSeasonStage",
                    "type": "string",
                    "example": "Champions League Final Stages"
                },
                "cup": {
                    "description": "Whether the stage is a cup such as Champions League Knockout stage, World Cup Final stages, etc",
                    "type": "boolean"
                },
                "tournament_season_id": {
                    "description": "Id of the TournamentSeason in which the stage is part of",
                    "type": "integer"
                },
                "tournament_id": {
                    "description": "Id of the Tournament in whicth the stage is part of",
                    "type": "integer"
                },
                "country": {
                    "description": "Reference to the Country where the TournamentSeasonStage is held",
                    "$ref": "#/definitions/Country"
                },
                "confederation": {
                    "description": "Indicates which confederation the stage is part of (for World Cup qualif.)",
                    "type": "string"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/TournamentSeasonStage"
                },
                {
                    "properties": {
                        "groups": {
                            "description": "List of StageGroup objects in the TournamentSeasonStage. Available if the property stage_groups exists",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StageGroupWithStanding"
                            }
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TournamentSeasonStage": {
            "required": [
                "id",
                "name",
                "cup",
                "tournament_season_id",
                "tournament_id",
                "country"
            ],
            "properties": {
                "start_date": {
                    "description": "Date when the first game of the stage is held",
                    "type": "string",
                    "format": "date",
                    "example": "2015-06-20"
                },
                "end_date": {
                    "description": "Date when the final game of the stage is held",
                    "type": "string",
                    "format": "date",
                    "example": "2015-06-21"
                },
                "qualification": {
                    "description": "Whether the stage is a qualification stage to a main Tournrament (Champions League Qualification)",
                    "type": "boolean"
                },
                "live": {
                    "description": "Whether the API has live scores for the stage",
                    "type": "boolean"
                },
                "stage_groups": {
                    "description": "Number of groups in the stage. Only available if the stage has groups (Champions League Group Stage)",
                    "type": "integer"
                },
                "standing": {
                    "description": "League standing data if available and if cup = false",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LeagueStandingData"
                    }
                },
                "rounds": {
                    "description": "List of rounds in the Stage if cup = true",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Round"
                    }
                },
                "id": {
                    "description": "Unique identifier",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Human readable name of the TournamentSeasonStage",
                    "type": "string",
                    "example": "Champions League Final Stages"
                },
                "cup": {
                    "description": "Whether the stage is a cup such as Champions League Knockout stage, World Cup Final stages, etc",
                    "type": "boolean"
                },
                "tournament_season_id": {
                    "description": "Id of the TournamentSeason in which the stage is part of",
                    "type": "integer"
                },
                "tournament_id": {
                    "description": "Id of the Tournament in whicth the stage is part of",
                    "type": "integer"
                },
                "country": {
                    "description": "Reference to the Country where the TournamentSeasonStage is held",
                    "$ref": "#/definitions/Country"
                },
                "confederation": {
                    "description": "Indicates which confederation the stage is part of (for World Cup qualif.)",
                    "type": "string"
                }
            }
        },
        "Venue": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier in the system",
                    "type": "integer"
                },
                "name": {
                    "description": "Human readable name of the Venue",
                    "type": "string"
                },
                "country": {
                    "description": "Country where the stadium is located",
                    "$ref": "#/definitions/Country"
                },
                "city": {
                    "type": "string"
                },
                "url_image": {
                    "description": "600x450 image of the Venue",
                    "type": "string",
                    "example": "http://football-api.devks.msk.bg/assets/image.jpeg"
                },
                "capacity": {
                    "description": "Total capacity of the stadium",
                    "type": "integer"
                },
                "lat": {
                    "description": "Latitude coordinate of the stadium's location",
                    "type": "number",
                    "format": "float"
                },
                "lng": {
                    "description": "Longitude coordinate of the stadium's location",
                    "type": "number",
                    "format": "float"
                }
            }
        }
    },
    "parameters": {
        "from_time": {
            "name": "from_time",
            "in": "query",
            "description": "Filter events, which have a start_time after the specified date, format is RFC 3339",
            "required": false,
            "type": "string",
            "format": "date-time"
        },
        "to_time": {
            "name": "to_time",
            "in": "query",
            "description": "Filter events, which have a start_time before the specified date, format is RFC 3339",
            "required": false,
            "type": "string",
            "format": "date-time"
        },
        "direction": {
            "name": "direction",
            "in": "query",
            "description": "Whether to sort the results by ascending or descending order",
            "required": false,
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ]
        },
        "id": {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the resource.",
            "required": true,
            "type": "string",
            "default": 1
        },
        "X-Odd-Client": {
            "name": "X-Odd-Client",
            "in": "header",
            "description": "Identifies the client for which to return filtered bookmakers with affiliate URLs. Without the parameter can not sort odd_providers or provide affiliate links. Instead it will sometimes give a 'coupon' key with the odds fo building URLs.",
            "required": true,
            "type": "string"
        },
        "Accept-Language": {
            "name": "Accept-Language",
            "in": "header",
            "description": "List of acceptable human languages for response. https://en.wikipedia.org/wiki/Content_negotiation",
            "required": false,
            "type": "string",
            "default": "en"
        },
        "language_code": {
            "name": "language_code",
            "in": "query",
            "description": "Returns translated response based on the language code",
            "required": false,
            "type": "string",
            "default": "en"
        },
        "offset": {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "type": "integer"
        },
        "limit": {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of results returned",
            "required": true,
            "type": "integer"
        }
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "basicAuth": []
        }
    ]
}
