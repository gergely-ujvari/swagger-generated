/**
 * Content-API
 * SMP Content-API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MainMedia } from './MainMedia';
import { Seo } from './Seo';
import { VideoFile } from './VideoFile';
import { HttpFile } from '../http/http';

/**
* Video
*/
export class VideoUpdateRequest {
    /**
    * The title of the content. It should always be provided
    */
    'title'?: string;
    'subtitle'?: string;
    'strapline'?: string;
    /**
    * Content footer.
    */
    'footer'?: string;
    /**
    * Body is composed as Array of Json objects generated by the \"Blocky\" component from the CMS
    */
    'body'?: Array<any>;
    /**
    * Category ID
    */
    'categoryId'?: string;
    /**
    * ID of a valid comment policy for this content type
    */
    'commentPolicyId'?: number;
    /**
    * Array of author IDs. If no author is provided upon content creation, we select the default one (if available)
    */
    'authors'?: Array<number>;
    /**
    * Owner of the rights for the content.
    */
    'owner'?: string;
    /**
    * ID of a valid origin for this content type
    */
    'originId'?: number;
    'important'?: boolean;
    /**
    * Use main_media object to relate images to content
    */
    'imageId'?: string;
    /**
    * Use main_media object to relate images to content
    */
    'imageDescription'?: string;
    'additionalCategories'?: Array<number>;
    'runAds'?: boolean;
    /**
    * The first time when the content should appear to the public. If not provided, we use the date in created_at.
    */
    'publishedAt'?: string;
    /**
    * The last time when the content should be available to the public.
    */
    'publishedUntil'?: string;
    /**
    * An array of valid IDs for Distribution Channels
    */
    'publishedChannels'?: Array<number>;
    /**
    * An array of valid IDs for Distribution Channels
    */
    'publishedRegions'?: Array<number>;
    /**
    * System field for the creation date and time of the content.
    */
    'createdAt'?: string;
    /**
    * The last time the article was updated.
    */
    'updatedAt'?: string;
    /**
    * Slug of a valid status for this content type
    */
    'status'?: string;
    /**
    * Valid slug of a type for this content type
    */
    'type'?: string;
    /**
    * A field for one-time author
    */
    'customAuthor'?: string;
    /**
    * A URL that is going to be used for redirects. If you want a piece of content to take you to a specific page, you should put that address here.
    */
    'externalUrl'?: string;
    /**
    * URL to be used for live steaming of video. Deprecaton - use video_files property instead with custom type.
    */
    'liveUrl'?: string;
    /**
    * An array containing video files
    */
    'videoFiles'?: Array<VideoFile>;
    'isAdultContent'?: boolean;
    'isSensitiveContent'?: boolean;
    /**
    * JSON field with no validation. Should be used for migrated/unsupported content that is no longer needed but needs to be available for legacy reasons.
    */
    'generic'?: any;
    'seo'?: Seo;
    'mainMedia'?: Array<MainMedia>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "subtitle",
            "baseName": "subtitle",
            "type": "string",
            "format": ""
        },
        {
            "name": "strapline",
            "baseName": "strapline",
            "type": "string",
            "format": ""
        },
        {
            "name": "footer",
            "baseName": "footer",
            "type": "string",
            "format": ""
        },
        {
            "name": "body",
            "baseName": "body",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "categoryId",
            "baseName": "category_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "commentPolicyId",
            "baseName": "comment_policy_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "authors",
            "baseName": "authors",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "string",
            "format": ""
        },
        {
            "name": "originId",
            "baseName": "origin_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "important",
            "baseName": "important",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "imageId",
            "baseName": "image_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "imageDescription",
            "baseName": "image_description",
            "type": "string",
            "format": ""
        },
        {
            "name": "additionalCategories",
            "baseName": "additional_categories",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "runAds",
            "baseName": "run_ads",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "publishedAt",
            "baseName": "published_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "publishedUntil",
            "baseName": "published_until",
            "type": "string",
            "format": ""
        },
        {
            "name": "publishedChannels",
            "baseName": "published_channels",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "publishedRegions",
            "baseName": "published_regions",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "customAuthor",
            "baseName": "custom_author",
            "type": "string",
            "format": ""
        },
        {
            "name": "externalUrl",
            "baseName": "external_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "liveUrl",
            "baseName": "live_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "videoFiles",
            "baseName": "video_files",
            "type": "Array<VideoFile>",
            "format": ""
        },
        {
            "name": "isAdultContent",
            "baseName": "is_adult_content",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isSensitiveContent",
            "baseName": "is_sensitive_content",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "generic",
            "baseName": "generic",
            "type": "any",
            "format": ""
        },
        {
            "name": "seo",
            "baseName": "seo",
            "type": "Seo",
            "format": ""
        },
        {
            "name": "mainMedia",
            "baseName": "main_media",
            "type": "Array<MainMedia>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return VideoUpdateRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

