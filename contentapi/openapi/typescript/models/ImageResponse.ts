/**
 * Content-API
 * SMP Content-API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AuthorResponse } from './AuthorResponse';
import { ImageRequestUrls } from './ImageRequestUrls';
import { OriginResponse } from './OriginResponse';
import { HttpFile } from '../http/http';

/**
* Image Response
*/
export class ImageResponse {
    'id'?: number;
    'description'?: string;
    'authors'?: Array<AuthorResponse>;
    /**
    * A field for one-time author
    */
    'customAuthor'?: string;
    /**
    * Content footer.
    */
    'footer'?: string;
    'owner'?: OriginResponse;
    'origin'?: OriginResponse;
    /**
    * Valid slug of a type for this content type
    */
    'type'?: string;
    'urls'?: ImageRequestUrls;
    'sensitiveContent'?: boolean;
    /**
    * JSON field with no validation. Should be used for migrated/unsupported content that is no longer needed but needs to be available for legacy reasons.
    */
    'generic'?: any;
    /**
    * System field for the creation date and time of the content.
    */
    'createdAt'?: string;
    /**
    * The last time the article was updated.
    */
    'updatedAt'?: string;
    /**
    * Main image crop value
    */
    'mainCrop'?: string;
    /**
    * Alt value
    */
    'alt'?: string;
    /**
    * Caption value
    */
    'caption'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "authors",
            "baseName": "authors",
            "type": "Array<AuthorResponse>",
            "format": ""
        },
        {
            "name": "customAuthor",
            "baseName": "custom_author",
            "type": "string",
            "format": ""
        },
        {
            "name": "footer",
            "baseName": "footer",
            "type": "string",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "OriginResponse",
            "format": ""
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "OriginResponse",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "urls",
            "baseName": "urls",
            "type": "ImageRequestUrls",
            "format": ""
        },
        {
            "name": "sensitiveContent",
            "baseName": "sensitive_content",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "generic",
            "baseName": "generic",
            "type": "any",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "mainCrop",
            "baseName": "main_crop",
            "type": "string",
            "format": ""
        },
        {
            "name": "alt",
            "baseName": "alt",
            "type": "string",
            "format": ""
        },
        {
            "name": "caption",
            "baseName": "caption",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ImageResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

