/**
 * Content-API
 * SMP Content-API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ArticleResponseComments } from './ArticleResponseComments';
import { ArticleResponseImage } from './ArticleResponseImage';
import { AuthorResponse } from './AuthorResponse';
import { CategoryResponse } from './CategoryResponse';
import { ChannelResponse } from './ChannelResponse';
import { MainMedia } from './MainMedia';
import { OriginResponse } from './OriginResponse';
import { RegionResponse } from './RegionResponse';
import { Seo } from './Seo';
import { TranslationGroupResponse } from './TranslationGroupResponse';
import { VideoUrls } from './VideoUrls';
import { HttpFile } from '../http/http';

/**
* Video
*/
export class VideoResponse {
    'id'?: string;
    /**
    * The title of the content. It should always be provided
    */
    'title'?: string;
    /**
    * This is a brief description or a summary of the content.
    */
    'subtitle'?: string;
    /**
    * Something that appears before the actual headline. For instance, a headline can be:\\\"Ronaldo says:\\\" when the actual title is \\\"We are a better team than Ajax\\\". In another use case, can be used as alternative title.
    */
    'strapline'?: string;
    /**
    * Content footer.
    */
    'footer'?: string;
    'body'?: any;
    'authors'?: Array<AuthorResponse>;
    'owner'?: OriginResponse;
    'origin'?: OriginResponse;
    'runAds'?: boolean;
    /**
    * The first time when the content should appear to the public. If not provided, we use the date in created_at.
    */
    'publishedAt'?: string;
    /**
    * The last time when the content should be available to the public.
    */
    'publishedUntil'?: string;
    'publishedChannels'?: Array<ChannelResponse>;
    'publishedRegions'?: Array<RegionResponse>;
    /**
    * Slug of a valid status for this content type
    */
    'status'?: string;
    /**
    * Valid slug of a type for this content type
    */
    'type'?: string;
    'comments'?: ArticleResponseComments;
    'important'?: boolean;
    /**
    * A field for one-time author
    */
    'customAuthor'?: string;
    'category'?: CategoryResponse;
    'additionalCategories'?: Array<CategoryResponse>;
    'image'?: ArticleResponseImage;
    'urls'?: VideoUrls;
    'adultContent'?: boolean;
    'sensitiveContent'?: boolean;
    /**
    * JSON field with no validation. Should be used for migrated/unsupported content that is no longer needed but needs to be available for legacy reasons.
    */
    'generic'?: any;
    'seo'?: Seo;
    'mainMedia'?: Array<MainMedia>;
    /**
    * System field for the creation date and time of the content.
    */
    'createdAt'?: string;
    /**
    * The last time the article was updated.
    */
    'updatedAt'?: string;
    /**
    * Language of the resource
    */
    'language'?: string;
    'translationGroup'?: TranslationGroupResponse;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "subtitle",
            "baseName": "subtitle",
            "type": "string",
            "format": ""
        },
        {
            "name": "strapline",
            "baseName": "strapline",
            "type": "string",
            "format": ""
        },
        {
            "name": "footer",
            "baseName": "footer",
            "type": "string",
            "format": ""
        },
        {
            "name": "body",
            "baseName": "body",
            "type": "any",
            "format": ""
        },
        {
            "name": "authors",
            "baseName": "authors",
            "type": "Array<AuthorResponse>",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "OriginResponse",
            "format": ""
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "OriginResponse",
            "format": ""
        },
        {
            "name": "runAds",
            "baseName": "run_ads",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "publishedAt",
            "baseName": "published_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "publishedUntil",
            "baseName": "published_until",
            "type": "string",
            "format": ""
        },
        {
            "name": "publishedChannels",
            "baseName": "published_channels",
            "type": "Array<ChannelResponse>",
            "format": ""
        },
        {
            "name": "publishedRegions",
            "baseName": "published_regions",
            "type": "Array<RegionResponse>",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "comments",
            "baseName": "comments",
            "type": "ArticleResponseComments",
            "format": ""
        },
        {
            "name": "important",
            "baseName": "important",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "customAuthor",
            "baseName": "custom_author",
            "type": "string",
            "format": ""
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "CategoryResponse",
            "format": ""
        },
        {
            "name": "additionalCategories",
            "baseName": "additional_categories",
            "type": "Array<CategoryResponse>",
            "format": ""
        },
        {
            "name": "image",
            "baseName": "image",
            "type": "ArticleResponseImage",
            "format": ""
        },
        {
            "name": "urls",
            "baseName": "urls",
            "type": "VideoUrls",
            "format": ""
        },
        {
            "name": "adultContent",
            "baseName": "adult_content",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "sensitiveContent",
            "baseName": "sensitive_content",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "generic",
            "baseName": "generic",
            "type": "any",
            "format": ""
        },
        {
            "name": "seo",
            "baseName": "seo",
            "type": "Seo",
            "format": ""
        },
        {
            "name": "mainMedia",
            "baseName": "main_media",
            "type": "Array<MainMedia>",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "language",
            "baseName": "language",
            "type": "string",
            "format": ""
        },
        {
            "name": "translationGroup",
            "baseName": "translation_group",
            "type": "TranslationGroupResponse",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return VideoResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

